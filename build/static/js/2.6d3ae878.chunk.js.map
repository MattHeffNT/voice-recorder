{"version":3,"sources":["../node_modules/react/index.js","../node_modules/object-assign/index.js","../../src/FileSaver.js","../node_modules/react-dom/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/react/cjs/react.production.min.js","../node_modules/react-dom/cjs/react-dom.production.min.js","../node_modules/scheduler/index.js","../node_modules/scheduler/cjs/scheduler.production.min.js","../node_modules/webpack/buildin/global.js","../node_modules/mic-recorder-to-mp3/dist/index.js"],"names":["module","exports","require","getOwnPropertySymbols","Object","hasOwnProperty","prototype","propIsEnumerable","propertyIsEnumerable","toObject","val","undefined","TypeError","assign","test1","String","getOwnPropertyNames","test2","i","fromCharCode","map","n","join","test3","split","forEach","letter","keys","err","shouldUseNative","target","source","from","symbols","to","s","arguments","length","key","call","console","status","MouseEvent","document","window","self","global","test","navigator","HTMLAnchorElement","b","name","location","setTimeout","f","autoBom","Blob","type","open","saveAs","checkDCE","__REACT_DEVTOOLS_GLOBAL_HOOK__","process","error","_arrayLikeToArray","arr","len","arr2","Array","_slicedToArray","isArray","Symbol","iterator","_arr","_n","_d","_e","_s","_i","next","done","push","value","o","minLen","toString","slice","constructor","l","p","Fragment","StrictMode","Profiler","q","r","t","Suspense","u","v","for","w","x","z","a","c","encodeURIComponent","A","isMounted","enqueueForceUpdate","enqueueReplaceState","enqueueSetState","B","C","this","props","context","refs","updater","D","E","isReactComponent","setState","Error","forceUpdate","F","isPureReactComponent","G","current","H","I","ref","__self","__source","J","e","d","k","h","g","children","m","defaultProps","$$typeof","_owner","L","M","N","replace","escape","O","K","y","P","Q","_status","_result","then","default","R","S","T","ReactCurrentDispatcher","ReactCurrentBatchConfig","transition","ReactCurrentOwner","IsSomeRendererActing","Children","apply","count","toArray","only","Component","PureComponent","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","cloneElement","createContext","_calculateChangedBits","_currentValue","_currentValue2","_threadCount","Provider","Consumer","_context","createElement","createFactory","bind","createRef","forwardRef","render","isValidElement","lazy","_payload","_init","memo","compare","useCallback","useContext","useDebugValue","useEffect","useImperativeHandle","useLayoutEffect","useMemo","useReducer","useRef","useState","version","aa","ba","Set","ca","da","ea","add","fa","ha","ia","ja","ka","acceptsBooleans","attributeName","attributeNamespace","mustUseProperty","propertyName","sanitizeURL","removeEmptyString","toLowerCase","oa","pa","toUpperCase","qa","ma","isNaN","na","la","removeAttribute","setAttribute","setAttributeNS","xlinkHref","ra","sa","ta","ua","wa","xa","ya","za","Aa","Ba","Ca","Da","Ea","Fa","Ga","Ha","Ia","Ja","Ma","Ka","La","Na","stack","trim","match","Oa","Pa","prepareStackTrace","defineProperty","set","Reflect","construct","displayName","Qa","tag","_render","Ra","Sa","Ta","nodeName","Va","_valueTracker","getOwnPropertyDescriptor","get","configurable","enumerable","getValue","setValue","stopTracking","Ua","Wa","checked","Xa","activeElement","body","Ya","defaultChecked","defaultValue","_wrapperState","initialChecked","Za","initialValue","controlled","$a","ab","bb","cb","ownerDocument","eb","db","fb","options","selected","defaultSelected","disabled","gb","dangerouslySetInnerHTML","hb","ib","jb","textContent","kb","lb","mb","nb","ob","MSApp","execUnsafeLocalFunction","namespaceURI","innerHTML","valueOf","firstChild","removeChild","appendChild","pb","lastChild","nodeType","nodeValue","qb","animationIterationCount","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridArea","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","rb","sb","tb","style","indexOf","setProperty","charAt","substring","ub","menuitem","area","base","br","col","embed","hr","img","input","keygen","link","meta","param","track","wbr","vb","wb","is","xb","srcElement","correspondingUseElement","parentNode","yb","zb","Ab","Bb","Cb","stateNode","Db","Eb","Fb","Gb","Hb","Ib","Jb","Kb","Lb","Mb","Ob","Pb","Qb","addEventListener","removeEventListener","Rb","onError","Sb","Tb","Ub","Vb","Wb","Xb","Zb","alternate","return","flags","$b","memoizedState","dehydrated","ac","cc","child","sibling","bc","dc","ec","fc","gc","hc","ic","jc","kc","lc","mc","nc","Map","oc","pc","qc","rc","blockedOn","domEventName","eventSystemFlags","nativeEvent","targetContainers","sc","delete","pointerId","tc","vc","wc","lanePriority","unstable_runWithPriority","priority","hydrate","containerInfo","xc","yc","shift","zc","Ac","Bc","unstable_scheduleCallback","unstable_NormalPriority","Cc","Dc","Ec","animationend","animationiteration","animationstart","transitionend","Fc","Gc","Hc","animation","Ic","Jc","Kc","Lc","Mc","Nc","Oc","Pc","Qc","unstable_now","Rc","Uc","pendingLanes","expiredLanes","suspendedLanes","pingedLanes","Vc","entangledLanes","entanglements","Wc","Xc","Yc","Zc","$c","eventTimes","Math","clz32","bd","cd","log","LN2","dd","unstable_UserBlockingPriority","ed","fd","gd","hd","id","uc","jd","kd","ld","md","nd","od","keyCode","charCode","pd","qd","rd","_reactName","_targetInst","currentTarget","isDefaultPrevented","defaultPrevented","returnValue","isPropagationStopped","preventDefault","stopPropagation","cancelBubble","persist","isPersistent","wd","xd","yd","sd","eventPhase","bubbles","cancelable","timeStamp","Date","now","isTrusted","td","ud","view","detail","vd","Ad","screenX","screenY","clientX","clientY","pageX","pageY","ctrlKey","shiftKey","altKey","metaKey","getModifierState","zd","button","buttons","relatedTarget","fromElement","toElement","movementX","movementY","Bd","Dd","dataTransfer","Fd","Hd","animationName","elapsedTime","pseudoElement","Jd","clipboardData","Ld","data","Md","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","Nd","8","9","12","13","16","17","18","19","20","27","32","33","34","35","36","37","38","39","40","45","46","112","113","114","115","116","117","118","119","120","121","122","123","144","145","224","Od","Alt","Control","Meta","Shift","Pd","Rd","code","repeat","locale","which","Td","width","height","pressure","tangentialPressure","tiltX","tiltY","twist","pointerType","isPrimary","Vd","touches","targetTouches","changedTouches","Xd","Zd","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","$d","ae","be","documentMode","ce","de","ee","fe","ge","he","ie","le","color","date","datetime","email","month","number","password","range","search","tel","text","time","url","week","me","ne","oe","event","listeners","pe","qe","re","se","te","ue","ve","we","xe","ye","ze","oninput","Ae","detachEvent","Be","Ce","attachEvent","De","Ee","Fe","He","Ie","Je","Ke","Le","node","offset","nextSibling","Ne","HTMLIFrameElement","contentWindow","href","Oe","contentEditable","Pe","Qe","Re","Se","Te","Ue","start","selectionStart","end","selectionEnd","anchorNode","defaultView","getSelection","anchorOffset","focusNode","focusOffset","Ve","We","Xe","Ye","concat","Ze","Yb","instance","listener","$e","has","af","bf","random","cf","df","capture","passive","Nb","ef","ff","parentWindow","gf","hf","je","char","ke","unshift","jf","kf","lf","mf","autoFocus","nf","__html","of","pf","clearTimeout","qf","rf","sf","previousSibling","tf","vf","wf","xf","yf","zf","Af","Bf","Cf","Df","Ef","contextTypes","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","Ff","childContextTypes","Gf","Hf","If","getChildContext","Jf","__reactInternalMemoizedMergedChildContext","Kf","Lf","Mf","Nf","Of","Pf","unstable_cancelCallback","Qf","unstable_shouldYield","Rf","unstable_requestPaint","Sf","Tf","unstable_getCurrentPriorityLevel","Uf","unstable_ImmediatePriority","Vf","Wf","Xf","unstable_LowPriority","Yf","unstable_IdlePriority","Zf","$f","ag","bg","cg","dg","eg","fg","gg","hg","ig","jg","kg","lg","mg","ng","og","pg","qg","rg","sg","childLanes","tg","dependencies","firstContext","lanes","ug","vg","observedBits","responders","wg","xg","updateQueue","baseState","firstBaseUpdate","lastBaseUpdate","shared","pending","effects","yg","zg","eventTime","lane","payload","callback","Ag","Bg","Cg","Dg","Eg","Fg","Gg","Kg","_reactInternals","Hg","Ig","Jg","Lg","shouldComponentUpdate","Mg","contextType","state","Ng","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","Og","getDerivedStateFromProps","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","componentWillMount","componentDidMount","Pg","Qg","_stringRef","Rg","Sg","lastEffect","nextEffect","firstEffect","index","Tg","Ug","mode","elementType","Vg","implementation","Wg","Xg","Yg","Zg","$g","ah","bh","ch","dh","eh","documentElement","tagName","fh","gh","hh","ih","memoizedProps","revealOrder","jh","kh","lh","mh","nh","oh","pendingProps","ph","qh","rh","sh","th","uh","_workInProgressVersionPrimary","vh","wh","xh","yh","zh","Ah","Bh","Ch","Dh","Eh","Fh","Gh","Hh","baseQueue","queue","Ih","Jh","Kh","lastRenderedReducer","action","eagerReducer","eagerState","lastRenderedState","dispatch","Lh","Mh","_getVersion","_source","mutableReadLanes","Nh","U","getSnapshot","subscribe","setSnapshot","Oh","Ph","Qh","Rh","create","destroy","deps","Sh","Th","Uh","Vh","Wh","Xh","Yh","Zh","$h","ai","bi","ci","di","readContext","useDeferredValue","useTransition","useMutableSource","useOpaqueIdentifier","unstable_isNewReconciler","uf","ei","fi","gi","hi","ii","ji","ki","li","mi","baseLanes","ni","oi","pi","UNSAFE_componentWillUpdate","componentWillUpdate","componentDidUpdate","qi","getDerivedStateFromError","ri","pendingContext","Bi","Di","Ei","si","retryLane","ti","fallback","unstable_avoidThisFallback","ui","unstable_expectedLoadTime","vi","wi","xi","yi","zi","isBackwards","rendering","renderingStartTime","last","tail","tailMode","Ai","Fi","Gi","wasMultiple","multiple","onClick","onclick","size","createElementNS","createTextNode","V","Hi","Ii","W","Ji","Ki","Li","Mi","message","Ni","Oi","WeakMap","Pi","element","Qi","Ri","Si","componentDidCatch","Ti","componentStack","Ui","WeakSet","Vi","Wi","Xi","__reactInternalSnapshotBeforeUpdate","Yi","Zi","$i","focus","aj","display","bj","onCommitFiberUnmount","componentWillUnmount","cj","dj","ej","fj","gj","insertBefore","_reactRootContainer","hj","ij","jj","kj","lj","mj","nj","ceil","oj","pj","X","Y","qj","rj","sj","tj","uj","vj","Infinity","wj","ck","Z","xj","yj","zj","Aj","Bj","Cj","Dj","Ej","Fj","Gj","Hj","Ij","Jj","Sc","Kj","Lj","Mj","callbackNode","expirationTimes","callbackPriority","Tc","Nj","Oj","Pj","Qj","Rj","Sj","Tj","finishedWork","finishedLanes","Uj","timeoutHandle","Wj","Xj","pingCache","Yj","Zj","va","ak","bk","dk","rangeCount","focusedElem","selectionRange","ek","Me","contains","compareDocumentPosition","min","extend","createRange","setStart","removeAllRanges","addRange","setEnd","left","scrollLeft","top","scrollTop","onCommitFiberRoot","fk","gk","ik","pendingChildren","jk","mutableSourceEagerHydrationData","kk","lk","mk","nk","ok","qk","hydrationOptions","mutableSources","_internalRoot","rk","tk","hasAttribute","sk","uk","hk","unstable_observedBits","unmount","querySelectorAll","JSON","stringify","form","Vj","vk","Events","wk","findFiberByHostInstance","bundleType","rendererPackageName","xk","rendererConfig","overrideHookState","overrideHookStateDeletePath","overrideHookStateRenamePath","overrideProps","overridePropsDeletePath","overridePropsRenamePath","setSuspenseHandler","scheduleUpdate","currentDispatcherRef","findHostInstanceByFiber","findHostInstancesForRefresh","scheduleRefresh","scheduleRoot","setRefreshHandler","getCurrentFiber","yk","isDisabled","supportsFiber","inject","createPortal","findDOMNode","flushSync","unmountComponentAtNode","unstable_batchedUpdates","unstable_createPortal","unstable_renderSubtreeIntoContainer","performance","MessageChannel","unstable_forceFrameRate","cancelAnimationFrame","requestAnimationFrame","floor","port2","port1","onmessage","postMessage","pop","sortIndex","startTime","expirationTime","priorityLevel","unstable_Profiling","unstable_continueExecution","unstable_getFirstCallbackNode","unstable_next","unstable_pauseExecution","delay","unstable_wrapCallback","Function","new_short","Int16Array","new_int$1","Int32Array","new_float$1","Float32Array","Arrays$1","fromIndex","toIndex","System$1","src","srcPos","dest","destPos","srcEnd","Util$1","ShortBlock$1","ordinal","SQRT2","FAST_LOG10","log10","FAST_LOG10_X","short_block_allowed","short_block_coupled","short_block_dispensed","short_block_forced","Float$1","VbrMode$1","MAX_VALUE","vbr_off","vbr_mt","vbr_rh","vbr_abr","vbr_mtrh","vbr_default","common","new_array_n$1","args","sz","Int8Array","Float64Array","new_float_n$1","new_int_n$1","new_short_n","System$6","System","Util$6","Util","Arrays$6","Arrays","new_float$6","new_float","NewMDCT_1","enwindow","win","tantab_l","Encoder_1","SHORT_TYPE","cx","cs","window_subband","x1","x1Pos","xr","wp","x2","mdct_short","inout","inoutPos","tc0","tc1","tc2","ts0","ts1","ts2","mdct_long","out","outPos","_in","ct","st","tc3","tc4","ts5","ts6","ts7","ts8","ts3","ts4","tc5","tc6","tc7","tc8","mdct_sub48","gfc","w0","w1","wkPos","channels_out","gr","mode_gr","band","l3_side","tt","mdct_enc","mdct_encPos","samp","sb_sample","sampPos","block_type","band0","band1","mixed_block_flag","amp_filter","fill","work","bu","arraycopy","System$7","new_float$7","new_float_n$7","new_float_n","III_psy_xmin_1","SBMAX_l","SBMAX_s","iii_psy_xmin","j","III_psy_ratio_1","thm","en","System$5","VbrMode$5","VbrMode","new_array_n$5","new_array_n","new_float$5","new_float_n$5","new_int$5","new_int","assert$5","assert","Encoder$2","NewMDCT","III_psy_ratio","FFTOFFSET","MPG_MD_MS_LR","bs","psy","vbr","qupvt","setModules","_bs","_psy","_qupvt","_vbr","newMDCT","lame_encode_mp3_frame","gfp","inbuf_l","inbuf_r","mp3buf","mp3bufPos","mp3buf_size","mp3count","masking_LR","masking","masking_MS","pe_use","inbuf","internal_flags","tot_ener","ms_ener_ratio","pe_MS","lame_encode_frame_init","primebuff0","primebuff1","mf_size","BLKSIZE","framesize","padding","slot_lag","frac_SpF","out_samplerate","psymodel","bufp","bufpPos","blocktype","VBR","L3psycho_anal_vbr","L3psycho_anal_ns","MPEGMode","JOINT_STEREO","cod_info","NORM_TYPE","gr2_max","max_pow","ATH","useAdjust","loudness_sq","max","aaSensitivityP","adjust","adjustLimit","adj_lim_new","adjust_ATH","mode_ext","MPG_MD_LR_LR","force_ms","sum_pe_MS","sum_pe_LR","gi0","gi1","analysis","pinfo","ms_ratio","ers","energy","nsPsy","pefirbuf","fircoef","iteration_loop","format_bitstream","copy_buffer","bWriteVbrTag","addVbrFrame","pcmdata","set_frame_pinfo","bitrate_index","bitrate_stereoMode_Hist","bt","bitrate_blockType_Hist","updateStats","ENCDELAY","POSTDELAY","MDCTDELAY","DECDELAY","SBLIMIT","CBANDS","SBPSY_l","SBPSY_s","PSFB21","PSFB12","HBLKSIZE","BLKSIZE_s","HBLKSIZE_s","START_TYPE","STOP_TYPE","MPG_MD_LR_I","MPG_MD_MS_I","Util$4","new_float$4","FFT_1","window_s","costab","fht","fz","fzPos","k4","tri","fn","s1","c1","k1","k2","k3","kx","f1","f0","f3","f2","c2","s2","g0","g1","g2","g3","rv_tbl","fft_short","x_real","chn","buffer","bufPos","fft_long","init_fft","cos","PI","VbrMode$3","Float$3","Float","ShortBlock$3","ShortBlock","Util$3","Arrays$3","new_float$3","new_float_n$3","new_int$3","assert$3","PsyModel_1","fft","LOG10","VO_SCALE","psycho_loudness_approx","loudness_power","eql_w","compute_ffts","fftenergy","fftenergy_s","wsamp_l","wsamp_lPos","wsamp_s","wsamp_sPos","gr_out","im","totalenergy","energy_save","athaa_loudapprox","loudness_sq_save","ma_max_i1","ma_max_i2","ma_max_m","tab","table1","table2","table3","mask_add","m1","m2","shortblock","ratio","cb_s","cb_l","table2_","vbrpsy_mask_add","convert_partition2scalefac_s","thr","sblock","enn","thmm","bo_s_sb","bo_s","npart_s","b_lim","w_curr","PSY","bo_s_weight","w_next","convert_partition2scalefac_l","bo_l_sb","bo_l","npart_l","bo_l_weight","compute_masking_s","ebb","numlines_s","el","s3ind_s","ecb","s3_ss","nb_s1","blocktype_old","nb_s2","NS_INTERP","pow","regcoef_s","pecalc_s","mr","masking_lower","pe_s","regcoef_l","pecalc_l","pe_l","calc_energy","avg","numlines_l","rnumlines_l","calc_mask_index_l","mask_idx","last_tab_entry","vbrpsy_compute_fft_l","vbrpsy_compute_fft_s","vbrpsy_compute_loudness_approximation_l","masking_ratio","masking_MS_ratio","percep_entropy","percep_MS_entropy","blocktype_d","numchn","pcfact","msfix","wsamp_L","wsamp_S","eb_l","eb_s","uselongblock","ns_hpfsmpl","mask_idx_l","mask_idx_s","ResvMax","ResvSize","firbuf","firbufPos","sum1","sum2","attackThreshold","en_subshort","en_short","attack_intensity","ns_uselongblock","ns_attacks","last_en_subshort","pfPos","pfe","abs","ers_save","attackthre_s","attackthre","lastAttacks","idx","s3ind","eb2","s3_ll","nb_1","nb_2","STEREO","interChRatio","calc_interchannel_masking","mld","mld_l","rmid","rside","mld_s","msfix1","athadjust","msfix2","athlower","ath","bm_l","thmLR","thmM","thmS","bm_s","ns_msfix","ATHlower","short_blocks","block_type_set","ppe","ppePos","fircoef_","vbrpsy_skip_masking_s","vbrpsy_skip_masking_l","vbrpsy_compute_masking_s","float","int","psyvbr_calc_mask_index_s","dd_n","avg_mask","minval_s","vbrpsy_compute_masking_l","ecb_limit","ecb_limit_2","ecb_limit_1","minval_l","vbrpsy_compute_MS_thresholds","cb_mld","ath_cb","ebM","ebS","thmL","thmR","mld_m","thmMS","s3_func_x","bark","hf_slope","tempy","exp","norm_s3_func_x","lim_a","lim_b","sum","s3_func","tempx","temp","sqrt","freq2bark","freq","atan","init_numline","numlines","bo","bm","bval","bval_width","bo_w","sfreq","blksize","scalepos","deltafreq","sbmax","b_frq","sample_freq_frac","partition","j2","bark1","sfb","i1","i2","arg","f_tmp","bark2","init_s3_values","npart","norm","use_old_s3","s3","numberOfNoneZero","s3_x_norm","stereo_demask","ATHformula_GB","sub_short_factor","n_chn_psy","n_chn_out","factor","vbrpsy_attack_detection","vbrpsy_compute_block_type","ch01","mld_cb_l","mld_cb_s","new_thmm","NS_PREECHO_ATT1","NS_PREECHO_ATT2","vbrpsy_apply_block_type","psymodel_init","useOldS3","bvl_a","snr_l_a","snr_l_b","snr_s_a","snr_s_b","experimentalZ","ms_ener_ratio_old","scalefac_band","snr","level","ATHformula","MLIMIT","decay","exp_nspsytune","frame_duration","ATHtype","freq_inc","eql_balance","ATHcurve","MPEGMode$1","_ordinal","DUAL_CHANNEL","MONO","NOT_SET","MPEGMode_1","LameGlobalFlags_1","class_id","num_samples","num_channels","in_samplerate","scale","scale_left","scale_right","decode_only","quality","free_format","findReplayGain","decode_on_the_fly","write_id3tag_automatic","brate","compression_ratio","copyright","original","extension","emphasis","error_protection","strict_ISO","disable_reservoir","quant_comp","quant_comp_short","experimentalY","preset","VBR_q_frac","VBR_q","VBR_mean_bitrate_kbps","VBR_min_bitrate_kbps","VBR_max_bitrate_kbps","VBR_hard_min","lowpassfreq","highpassfreq","lowpasswidth","highpasswidth","maskingadjust","maskingadjust_short","ATHonly","ATHshort","noATH","athaa_type","athaa_sensitivity","useTemporal","tune","tune_value_a","encoder_delay","encoder_padding","frameNum","lame_allocated_gfp","L3Side$1","SFBMAX","L3Side_1","new_float$10","new_int$10","GrInfo_1","l3_enc","scalefac","xrpow_max","part2_3_length","big_values","count1","global_gain","scalefac_compress","table_select","subblock_gain","region0_count","region1_count","preflag","scalefac_scale","count1table_select","part2_length","sfb_lmax","sfb_smin","psy_lmax","sfbmax","psymax","sfbdivide","count1bits","sfb_partition_table","slen","max_nonzero_coeff","clone_int","array","other","new_int$9","IIISideInfo_1","main_data_begin","private_bits","resvDrain_pre","resvDrain_post","scfsi","System$11","new_int$11","ScaleFac_1","arrL","arrS","arr21","arr12","psfb21","psfb12","new_float$12","new_float_n$12","new_int$12","NsPsy_1","longfact","shortfact","VBRSeekInfo_1","seen","want","pos","bag","nVbrNumFrames","nBytesWritten","TotalFrameSize","new_byte$8","new_byte","new_double$8","new_double","new_float$8","new_float_n$8","new_int$8","new_int_n$8","new_int_n","LameInternalFlags$1","Header","write_timing","ptr","buf","Class_ID","iteration_init_init","fill_buffer_resample_init","mfbuf","MFSIZE","channels_in","resample_ratio","mf_samples_to_encode","VBR_min_bitrate","VBR_max_bitrate","samplerate_index","lowpass1","lowpass2","highpass1","highpass2","noise_shaping","noise_shaping_amp","substep_shaping","noise_shaping_stop","use_best_huffman","full_outer_loop","tag_spec","nMusicCRC","OldValue","CurrentStep","bv_scf","pseudohalf","sfb21_extra","inbuf_old","blackfilt","BPC","itime","sideinfo_len","header","MAX_HEADER_BUF","h_ptr","w_ptr","ancillary_flag","numlines_s_num1","numlines_l_num1","ms_ratio_s_old","ms_ratio_l_old","VBR_seek_table","nogap_total","nogap_current","findPeakSample","PeakSample","RadioGain","AudiophileGain","rgdata","noclipGainChange","noclipScale","hip","in_buffer_nsamples","in_buffer_0","in_buffer_1","MAX_BITS_PER_CHANNEL","MAX_BITS_PER_GRANULE","LameInternalFlags_1","new_float$13","ATH_1","System$15","Arrays$15","GainAnalysis$1","YULE_ORDER","MAX_SAMP_FREQ","RMS_WINDOW_TIME_NUMERATOR","RMS_WINDOW_TIME_DENOMINATOR","ABYule","MAX_SAMPLES_PER_WINDOW","ABButter","filterYule","inputPos","output","outputPos","nSamples","kernel","filterButter","fsqr","InitGainAnalysis","rgData","samplefreq","MAX_ORDER","linprebuf","lstepbuf","loutbuf","rinprebuf","rstepbuf","routbuf","reqindex","INIT_GAIN_ANALYSIS_ERROR","sampleWindow","lsum","rsum","totsamp","ill","INIT_GAIN_ANALYSIS_OK","ResetSampleFrequency","linpre","rinpre","lstep","rstep","lout","rout","AnalyzeSamples","left_samples","left_samplesPos","right_samples","right_samplesPos","curleft","curleftBase","curright","currightBase","batchsamples","cursamples","cursamplepos","GAIN_ANALYSIS_OK","GAIN_ANALYSIS_ERROR","STEPS_per_dB","ival","GetTitleGain","retval","elems","GAIN_NOT_ENOUGH_SAMPLES","upper","analyzeResult","MAX_dB","GainAnalysis_1","new_float$14","new_int$14","ReplayGain_1","freqindex","first","MeanBits_1","meanBits","bits","new_float$16","new_int$16","assert$16","CBRNewIterationLoop_1","_quantize","quantize","max_bits","l3_xmin","xrpow","targ_bits","mean_bits","rv","ResvFrameBegin","on_pe","ms_convert","reduce_side","masking_lower_db","mask_adjust","mask_adjust_short","init_outer_loop","init_xrpow","calc_xmin","outer_loop","iteration_finish_one","ResvFrameEnd","HuffCodeTab","hl","xlen","linmax","table","hlen","Tables$1","ht","t1HB","t1l","t2HB","t2l","t3HB","t3l","t5HB","t5l","t6HB","t6l","t7HB","t7l","t8HB","t8l","t9HB","t9l","t10HB","t10l","t11HB","t11l","t12HB","t12l","t13HB","t13l","t16_5l","t15HB","t15l","t16HB","t16l","t24HB","t24l","t32HB","t32l","t33HB","t33l","largetbl","table23","table56","bitrate_table","samplerate_table","scfsi_band","Tables_1","VbrMode$19","Float$19","Util$19","new_float$19","new_int$19","assert$19","QuantizePVT$1","tak","_tk","_rv","IPOW20","Q_MAX","ipow20","PRECALC_SIZE","IXMAX_VAL","Q_MAX2","LARGE_BITS","nr_of_sfb_block","pretab","sfBandIndex","pow20","pow43","adj43","ATHmdct","StartLine","iteration_init","ATH_l","ATH_psfb21","ATH_s","ATH_psfb12","samp_freq","ATH_f","compute_ath","bass","alto","treble","sfb21","huffman_init","cbr","tbits","add_bits","extra_bits","ResvMaxBits","fac","move_bits","athAdjust","athFloor","pxmin","gsfb","pxminPos","ath_over","enable_athaa_fix","rh1","xmin","rh2","en0","max_nonzero","BitStream","EQ","tmpATH","calc_noise_core","startline","step","noise","ix","ix01","calc_noise","distort","res","prev_noise","distortPos","l3_xminPos","over","over_noise_db","tot_noise_db","max_noise","scalefacPos","over_SSD","tmp","noise_log","usefullsize","sl","over_count","tot_noise","over_noise","set_pinfo","sfb2","en1","ifqstep","L3Side","xfsf","CalcNoiseResult","bw","LAMEsfb","en_s","xfsf_s","thr_s","LAMEsfb_s","LAMEqss","LAMEmainbits","LAMEsfbits","QuantizePVT_1","System$18","Arrays$18","new_int$18","assert$18","Takehiro_1","Takehiro$1","Bits","subdv_table","quantize_lines_xrpow_01","istep","xrPos","ixPos","compareval0","quantize_lines_xrpow","remaining","x0","x3","rx0","rx1","rx2","rx3","huf_tbl_noESC","choose_table","endPos","max1","max2","ix_max","hlen1","count_bit_noESC","t1","count_bit_noESC_from2","sum3","hlen2","hlen3","count_bit_noESC_from3","choice2","choice","t2","linbits","count_bit_ESC","recalc_divide_sub","cod_info2","r01_bits","r01_div","r0_tbl","r1_tbl","bigv","r2","a2","r2t","noquant_count_bits","sfb_count1","a1","best_huffman_divide","count_bits","xp","codInfo","prevNoise","prev_data_use","accumulate","accumulate01","xpPos","iData","iDataPos","acc_iData","acc_iDataPos","acc_xp","acc_xpPos","quantize_xrpow","gain","roundfac","r0","r0bits","r0t","r1","r1t","recalc_divide_init","slen1_n","slen2_n","slen1_tab","slen2_tab","best_scalefac_store","recalc","scfsi_calc","scale_bitcount","scale_bitcount_lsf","scale_short","scale_mixed","scale_long","max_slen1","max_slen2","all_scalefactors_not_negative","max_range_sfac_tab","table_number","row_in_table","nr_sfb","max_sfac","partition_table","slen1","slen2","slen3","slen4","log2tab","printf","bv_index","scfb_anz","System$17","Arrays$17","new_byte$17","new_float_n$17","new_int$17","assert$17","BitStream$1","ga","mpg","ver","_ga","_mpg","_ver","totbit","bufByteIdx","bufBitIdx","putheader_bits","putbits2","MAX_LENGTH","Lame","LAME_MAXMP3BUFFER","putbits_noheaders","drain_into_ancillary","remainingBits","getLameShortVersion","writeheader","CRC_update","crc","huffman_coder_count1","huffbits","Huffmancode","tableindex","cbits","xbits","ext","linbits_x1","linbits_x2","ShortHuffmancodebits","region1Start","LongHuffmancodebits","bigvalues","region2Start","TotalBytes","total","compute_flushbits","total_bytes_output","flushbits","remaining_headers","bitsPerFrame","last_ptr","first_ptr","getframebits","println","bit_rate","CRC_writeheader","byte","flush_bitstream","NEQ","GainAnalysis","add_dummy_byte","old","encodeSideInfo2","data_bits","tot_bits","sfb_partition","scale_bits","sfbs","writeMainData","bufferPos","mp3data","minimum","updateMusicCRC","pcm_buf","mp3_in","samples_out","hip_decode1_unclipped","init_bit_stream_w","BitStream_1","System$2","VbrMode$2","ShortBlock$2","new_float$2","new_int_n$2","new_short_n$1","assert$2","Lame_1","Lame$1","qu","V9","V8","V7","V6","V5","V4","V3","V2","V1","V0","R3MIX","STANDARD","EXTREME","INSANE","STANDARD_FAST","EXTREME_FAST","MEDIUM","MEDIUM_FAST","id3","mpglib","LowPassHighPass","lowerlimit","BandPass","bitrate","lPass","lowpass","filter_coef","SmpFrqIndex","sample_freq","gpf","FindNearestBitrate","bRate","samplerate","BitrateIndex","optimum_bandwidth","freq_map","table_index","nearestBitrateFullIndex","calcNeeded","mf_needed","lame_encode_frame","ret","enc","InOut","n_in","n_out","NumUsed","num_used","blackman","fcn","wcn","bkwn","sin","fill_buffer_resample","outbuf","outbufPos","desired_len","in_bufferPos","bpc","gcd","intratio","filter_l","BLACKSIZE","time0","joff","xvalue","n_shift","fill_buffer","in_buffer","nsamples","io","numUsed","_p","_qu","_id3","_mpglib","lame_init","lame_init_old","full_bitrate_table","lower_range","lower_range_kbps","upper_range","upper_range_kbps","lame_init_params","map2MP3Frequency","linear_int","input_samplefreq","suggested_samplefreq","optimum_samplefreq","hip_decode_exit","hip_decode_init","lowpass_band","highpass_band","minband","maxband","fc1","fc2","lame_init_params_ppflt","id3tag_write_v2","InitVbrTag","lame_init_bitstream","apply_preset","LAME_DEFAULT_QUALITY","VBRNewIterationLoop","VBROldIterationLoop","vbrmode","ABRIterationLoop","lame_init_qval","NSATTACKTHRE","NSATTACKTHRE_S","lame_encode_flush","mp3buffer","mp3bufferPos","mp3buffer_size","mp3buffer_size_remaining","end_padding","frames_left","imp3","samples_to_encode","bunch","frame_num","lame_encode_buffer","id3tag_write_v1","buffer_l","buffer_r","update_inbuffer_size","mp3out","mp3size","in_buffer_ptr","inOut","buf_size","lame_encode_buffer_sample","VbrMode$20","Presets_1","VBRPresets","qual","comp","compS","shThreshold","shThresholdS","adj","adjShort","lower","curve","sens","inter","joint","mod","fix","vbr_q","quant_comp_s","expY","st_lrm","st_s","masking_adj","masking_adj_short","ath_lower","ath_curve","ath_sensitivity","interch","safejoint","sfb21mod","ABRPresets","kbps","mask","interCh","sfScale","nsmsfix","nsbass","sfscale","lame","_lame","vbr_old_switch_map","vbr_psy_switch_map","apply_vbr_preset","enforce","vbr_preset","lame_set_VBR_q","abr_switch_map","apply_abr_preset","actual_bitrate","VBRQuantize_1","CalcNoiseResult_1","new_float$22","new_int$22","CalcNoiseData_1","System$21","VbrMode$21","Util$21","Arrays$21","new_float$21","assert$21","Quantize_1","BinSearchDirection","loop_break","quant_compare","best","calc","better","klemm_noise","get_klemm_noise","balance_noise","bRefine","ifqstep34","trigger","amp_scalefac_bands","inc_scalefac_scale","amp","inc_subblock_gain","init_xrpow_core","ixwork","stop","ath21","block","ath12","psfb21_analogsilence","BINSEARCH_NONE","BINSEARCH_UP","BINSEARCH_DOWN","trancate_smallspectrums","allowedNoise","trancateThreshold","nsame","sort","cod_info_w","save_xrpow","best_noise_info","best_part2_3_length","bEndOfSearch","best_ggain_pass1","desired_rate","nBits","flagGoneOver","Direction","bin_search_StepSize","age","search_limit","noise_info","maxggain","huff_bits","ResvAdjust","VBR_encode_granule","min_bits","dbits","bst_cod_info","bst_xrpow","Max_bits","real_bits","this_bits","found","LameInternalFlags","get_framebits","frameBits","MeanBits","VBR_old_prepare","bands","analog_silence","mxb","bitpressure_strategy","VBR_new_prepare","maximum_framebits","calc_target_bits","analog_silence_bits","max_frame_bits","res_factor","totbits","assert$23","Reservoir_1","maxmp3buf","frameLength","resvLimit","fullFrameBits","resvsize","over_bits","stuffingBits","mdb_bytes","Version_1","getLameVersion","LAME_MAJOR_VERSION","getLameVeryShortVersion","getPsyVersion","PSY_MAJOR_VERSION","getLameUrl","getLameOsBitness","System$22","VbrMode$22","ShortBlock$22","Arrays$22","new_byte$22","assert$24","VBRTag","_v","NUMTOCENTRIES","MAXFRAMESIZE","LAMEHEADERSIZE","crc16Lookup","extractInteger","createInteger","createShort","shiftInBitsValue","setLameTagFrameHeader","bbyte","abyte","crcUpdateLookup","Tables","addVbr","getVbrTag","pTagData","VBRTagData","hId","hSrIndex","hMode","hBitrate","samprate","equals","isVbrTag","head_flags","frames","bytes","toc","vbrScale","headersize","encDelay","encPadding","kbps_header","totalFrameSize","headerSize","getLameTagFrame","LAME_ID","indx","seek_point","xingSeekTable","streamIndex","FRAMES_FLAG","streamSize","musicLength","streamBuffer","streamBufferPos","revMethod","misc","musicCRC","abrBitrate","bytesWritten","vbrTypeTranslator","peakSignalAmplitude","radioReplayGain","noiseShaping","stereoMode","nonOptimal","sourceFreq","expNPsyTune","safeJoint","noGapMore","noGapPrevious","noGapCount","noGapCurr","athType","putLameVBR","putVbrTag","stream","seek","id3v2TagSize","fpStream","id3v2Header","readFully","startsWith","skipId3v2","write","VBRTag_1","GetAudio","parse2","mpg2","Parse","ver2","id32","pre2","MPGLib","ID3Tag","_bits","WavHeader","dataOffset","dataLen","channels","sampleRate","fourccToInt","fourcc","charCodeAt","Presets","QuantizePVT","Quantize","Takehiro","Reservoir","RIFF","WAVE","fmt_","readHeader","dataView","getUint32","fmtLen","getUint16","Mp3Encoder_1","gaud","parse","retcode","maxSamples","encodeBuffer","right","_sz","subarray","flush","classCallCheck","Constructor","createClass","defineProperties","descriptor","writable","protoProps","staticProps","Encoder","config","bitRate","mp3Encoder","samplesMono","clearBuffer","dataBuffer","arrayBuffer","floatTo16BitPCM","convertBuffer","appendToBuffer","MicRecorder","startRecordingAt","deviceId","activeStream","microphone","processor","_this","timerToStart","createMediaStreamSource","createScriptProcessor","onaudioprocess","lameEncoder","encode","inputBuffer","getChannelData","connect","destination","disconnect","close","getAudioTracks","_this2","AudioContext","webkitAudioContext","audio","exact","Promise","resolve","reject","mediaDevices","getUserMedia","addMicrophoneListener","catch","_this3","finalBuffer","finish","factory"],"mappings":"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A,mBACA,mBACA,mBACA,mBACA,iBACA,kBACA,mBACA,mBACA,mBACA,kBACA,kBAAuB,mBAEvB,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,mBACA,kBACA,mBACA,mBACA,oBACA,oBACA,kBACA,kBAAuB,mBAEvB,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,oBACA,oBACA,kBACA,kBAAuB,mBAEvB,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,kBACA,oBACA,mBACA,mBACA,kBAAuB,mBAEvB,mBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,oBACA,oBACA,kBACA,kBAAuB,mBAEvB,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,iBACA,kBAAuB,mBAEvB,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,oBACA,mBACA,oBACA,oBACA,mBACA,mBACA,mBAEA,mBACA,mBACA,oBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,oBACA,mBACA,mBACA,mBACA,kBAAuB,mBAEvB,kBACA,iBACA,oBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,kBACA,mBACA,oBACA,oBACA,oBACA,iBACA,mBACA,kBAAuB,kBAEvB,kBACA,kBACA,oBACA,kBACA,kBACA,mBACA,kBACA,mBACA,oBACA,iBACA,kBACA,mBACA,oBACA,oBACA,mBACA,kBACA,kBAAuB,kBAEvB,kBACA,kBACA,oBACA,kBACA,mBACA,mBACA,kBACA,mBACA,oBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,kBACA,iBAAuB,mBAEvB,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,mBACA,mBACA,oBACA,oBACA,mBACA,mBACA,kBACA,kBAAuB,mBAEvB,kBACA,iBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,oBACA,mBACA,mBACA,mBACA,oBACA,oBACA,mBACA,kBACA,mBAAuB,mBAEvB,iBACA,kBACA,oBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,oBACA,oBACA,oBACA,kBACA,mBAAuB,kBAEvB,WAAgBP,EAAO5B,MAAQ,GAAM,QACrC,WAAgB4B,EAAO5B,MAAQ,GAAM,QACrC,WAAe4B,EAAO5B,MAAQ,GAAM,QACpC,WAAe4B,EAAO5B,MAAQ,GAAM,QACpC,UAAc4B,EAAO5B,MAAQ,GAAM,QACnC,UAAc4B,EAAO5B,MAAQ,GAAM,QACnC,UAAc4B,EAAO5B,MAAQ,GAAM,QACnC,SAAa4B,EAAO5B,MAAQ,GAAM,QAElC,mBAA2B,mBAC3B,kBAAyB,mBACzB,mBAA0B,mBAC1B,mBAMEoC,EAAM,CACN,CACC,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,oBACA,qBACA,qBAEA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,sBAEC,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBAEA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,qBACA,sBAEF,CACC,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBAEA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,sBAEC,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,qBACA,qBAED,EACA,EACA,EACA,EACA,EACA,GACC,sBACA,sBACA,sBAEF,CACC,kBACA,iBACA,kBAEA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBAEA,iBACA,kBACA,kBACA,mBACC,mBACA,kBACD,kBACA,IAEC,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA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GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC1D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAGhEA,KAAgB,CACZ,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACtD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACtD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACtD,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACvD,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACxD,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACzD,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC3D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAGhEA,OAAkB,CACd,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACxD,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACxD,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACzD,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC1D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAGhEA,KAAgB,CACZ,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACxD,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACxD,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACzD,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC1D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,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","file":"static/js/2.6d3ae878.chunk.js","sourcesContent":["'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","/*\n* FileSaver.js\n* A saveAs() FileSaver implementation.\n*\n* By Eli Grey, http://eligrey.com\n*\n* License : https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md (MIT)\n* source  : http://purl.eligrey.com/github/FileSaver.js\n*/\n\n// The one and only way of getting global scope in all environments\n// https://stackoverflow.com/q/3277182/1008999\nvar _global = typeof window === 'object' && window.window === window\n  ? window : typeof self === 'object' && self.self === self\n  ? self : typeof global === 'object' && global.global === global\n  ? global\n  : this\n\nfunction bom (blob, opts) {\n  if (typeof opts === 'undefined') opts = { autoBom: false }\n  else if (typeof opts !== 'object') {\n    console.warn('Deprecated: Expected third argument to be a object')\n    opts = { autoBom: !opts }\n  }\n\n  // prepend BOM for UTF-8 XML and text/* types (including HTML)\n  // note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n  if (opts.autoBom && /^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n    return new Blob([String.fromCharCode(0xFEFF), blob], { type: blob.type })\n  }\n  return blob\n}\n\nfunction download (url, name, opts) {\n  var xhr = new XMLHttpRequest()\n  xhr.open('GET', url)\n  xhr.responseType = 'blob'\n  xhr.onload = function () {\n    saveAs(xhr.response, name, opts)\n  }\n  xhr.onerror = function () {\n    console.error('could not download file')\n  }\n  xhr.send()\n}\n\nfunction corsEnabled (url) {\n  var xhr = new XMLHttpRequest()\n  // use sync to avoid popup blocker\n  xhr.open('HEAD', url, false)\n  try {\n    xhr.send()\n  } catch (e) {}\n  return xhr.status >= 200 && xhr.status <= 299\n}\n\n// `a.click()` doesn't work for all browsers (#465)\nfunction click (node) {\n  try {\n    node.dispatchEvent(new MouseEvent('click'))\n  } catch (e) {\n    var evt = document.createEvent('MouseEvents')\n    evt.initMouseEvent('click', true, true, window, 0, 0, 0, 80,\n                          20, false, false, false, false, 0, null)\n    node.dispatchEvent(evt)\n  }\n}\n\n// Detect WebView inside a native macOS app by ruling out all browsers\n// We just need to check for 'Safari' because all other browsers (besides Firefox) include that too\n// https://www.whatismybrowser.com/guides/the-latest-user-agent/macos\nvar isMacOSWebView = _global.navigator && /Macintosh/.test(navigator.userAgent) && /AppleWebKit/.test(navigator.userAgent) && !/Safari/.test(navigator.userAgent)\n\nvar saveAs = _global.saveAs || (\n  // probably in some web worker\n  (typeof window !== 'object' || window !== _global)\n    ? function saveAs () { /* noop */ }\n\n  // Use download attribute first if possible (#193 Lumia mobile) unless this is a macOS WebView\n  : ('download' in HTMLAnchorElement.prototype && !isMacOSWebView)\n  ? function saveAs (blob, name, opts) {\n    var URL = _global.URL || _global.webkitURL\n    var a = document.createElement('a')\n    name = name || blob.name || 'download'\n\n    a.download = name\n    a.rel = 'noopener' // tabnabbing\n\n    // TODO: detect chrome extensions & packaged apps\n    // a.target = '_blank'\n\n    if (typeof blob === 'string') {\n      // Support regular links\n      a.href = blob\n      if (a.origin !== location.origin) {\n        corsEnabled(a.href)\n          ? download(blob, name, opts)\n          : click(a, a.target = '_blank')\n      } else {\n        click(a)\n      }\n    } else {\n      // Support blobs\n      a.href = URL.createObjectURL(blob)\n      setTimeout(function () { URL.revokeObjectURL(a.href) }, 4E4) // 40s\n      setTimeout(function () { click(a) }, 0)\n    }\n  }\n\n  // Use msSaveOrOpenBlob as a second approach\n  : 'msSaveOrOpenBlob' in navigator\n  ? function saveAs (blob, name, opts) {\n    name = name || blob.name || 'download'\n\n    if (typeof blob === 'string') {\n      if (corsEnabled(blob)) {\n        download(blob, name, opts)\n      } else {\n        var a = document.createElement('a')\n        a.href = blob\n        a.target = '_blank'\n        setTimeout(function () { click(a) })\n      }\n    } else {\n      navigator.msSaveOrOpenBlob(bom(blob, opts), name)\n    }\n  }\n\n  // Fallback to using FileReader and a popup\n  : function saveAs (blob, name, opts, popup) {\n    // Open a popup immediately do go around popup blocker\n    // Mostly only available on user interaction and the fileReader is async so...\n    popup = popup || open('', '_blank')\n    if (popup) {\n      popup.document.title =\n      popup.document.body.innerText = 'downloading...'\n    }\n\n    if (typeof blob === 'string') return download(blob, name, opts)\n\n    var force = blob.type === 'application/octet-stream'\n    var isSafari = /constructor/i.test(_global.HTMLElement) || _global.safari\n    var isChromeIOS = /CriOS\\/[\\d]+/.test(navigator.userAgent)\n\n    if ((isChromeIOS || (force && isSafari) || isMacOSWebView) && typeof FileReader !== 'undefined') {\n      // Safari doesn't allow downloading of blob URLs\n      var reader = new FileReader()\n      reader.onloadend = function () {\n        var url = reader.result\n        url = isChromeIOS ? url : url.replace(/^data:[^;]*;/, 'data:attachment/file;')\n        if (popup) popup.location.href = url\n        else location = url\n        popup = null // reverse-tabnabbing #460\n      }\n      reader.readAsDataURL(blob)\n    } else {\n      var URL = _global.URL || _global.webkitURL\n      var url = URL.createObjectURL(blob)\n      if (popup) popup.location = url\n      else location.href = url\n      popup = null // reverse-tabnabbing #460\n      setTimeout(function () { URL.revokeObjectURL(url) }, 4E4) // 40s\n    }\n  }\n)\n\n_global.saveAs = saveAs.saveAs = saveAs\n\nif (typeof module !== 'undefined') {\n  module.exports = saveAs;\n}\n","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","/** @license React v17.0.2\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var l=require(\"object-assign\"),n=60103,p=60106;exports.Fragment=60107;exports.StrictMode=60108;exports.Profiler=60114;var q=60109,r=60110,t=60112;exports.Suspense=60113;var u=60115,v=60116;\nif(\"function\"===typeof Symbol&&Symbol.for){var w=Symbol.for;n=w(\"react.element\");p=w(\"react.portal\");exports.Fragment=w(\"react.fragment\");exports.StrictMode=w(\"react.strict_mode\");exports.Profiler=w(\"react.profiler\");q=w(\"react.provider\");r=w(\"react.context\");t=w(\"react.forward_ref\");exports.Suspense=w(\"react.suspense\");u=w(\"react.memo\");v=w(\"react.lazy\")}var x=\"function\"===typeof Symbol&&Symbol.iterator;\nfunction y(a){if(null===a||\"object\"!==typeof a)return null;a=x&&a[x]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}function z(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}\nvar A={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},B={};function C(a,b,c){this.props=a;this.context=b;this.refs=B;this.updater=c||A}C.prototype.isReactComponent={};C.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(z(85));this.updater.enqueueSetState(this,a,b,\"setState\")};C.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};\nfunction D(){}D.prototype=C.prototype;function E(a,b,c){this.props=a;this.context=b;this.refs=B;this.updater=c||A}var F=E.prototype=new D;F.constructor=E;l(F,C.prototype);F.isPureReactComponent=!0;var G={current:null},H=Object.prototype.hasOwnProperty,I={key:!0,ref:!0,__self:!0,__source:!0};\nfunction J(a,b,c){var e,d={},k=null,h=null;if(null!=b)for(e in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(k=\"\"+b.key),b)H.call(b,e)&&!I.hasOwnProperty(e)&&(d[e]=b[e]);var g=arguments.length-2;if(1===g)d.children=c;else if(1<g){for(var f=Array(g),m=0;m<g;m++)f[m]=arguments[m+2];d.children=f}if(a&&a.defaultProps)for(e in g=a.defaultProps,g)void 0===d[e]&&(d[e]=g[e]);return{$$typeof:n,type:a,key:k,ref:h,props:d,_owner:G.current}}\nfunction K(a,b){return{$$typeof:n,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function L(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===n}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+a.replace(/[=:]/g,function(a){return b[a]})}var M=/\\/+/g;function N(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(\"\"+a.key):b.toString(36)}\nfunction O(a,b,c,e,d){var k=typeof a;if(\"undefined\"===k||\"boolean\"===k)a=null;var h=!1;if(null===a)h=!0;else switch(k){case \"string\":case \"number\":h=!0;break;case \"object\":switch(a.$$typeof){case n:case p:h=!0}}if(h)return h=a,d=d(h),a=\"\"===e?\".\"+N(h,0):e,Array.isArray(d)?(c=\"\",null!=a&&(c=a.replace(M,\"$&/\")+\"/\"),O(d,b,c,\"\",function(a){return a})):null!=d&&(L(d)&&(d=K(d,c+(!d.key||h&&h.key===d.key?\"\":(\"\"+d.key).replace(M,\"$&/\")+\"/\")+a)),b.push(d)),1;h=0;e=\"\"===e?\".\":e+\":\";if(Array.isArray(a))for(var g=\n0;g<a.length;g++){k=a[g];var f=e+N(k,g);h+=O(k,b,c,f,d)}else if(f=y(a),\"function\"===typeof f)for(a=f.call(a),g=0;!(k=a.next()).done;)k=k.value,f=e+N(k,g++),h+=O(k,b,c,f,d);else if(\"object\"===k)throw b=\"\"+a,Error(z(31,\"[object Object]\"===b?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":b));return h}function P(a,b,c){if(null==a)return a;var e=[],d=0;O(a,e,\"\",\"\",function(a){return b.call(c,a,d++)});return e}\nfunction Q(a){if(-1===a._status){var b=a._result;b=b();a._status=0;a._result=b;b.then(function(b){0===a._status&&(b=b.default,a._status=1,a._result=b)},function(b){0===a._status&&(a._status=2,a._result=b)})}if(1===a._status)return a._result;throw a._result;}var R={current:null};function S(){var a=R.current;if(null===a)throw Error(z(321));return a}var T={ReactCurrentDispatcher:R,ReactCurrentBatchConfig:{transition:0},ReactCurrentOwner:G,IsSomeRendererActing:{current:!1},assign:l};\nexports.Children={map:P,forEach:function(a,b,c){P(a,function(){b.apply(this,arguments)},c)},count:function(a){var b=0;P(a,function(){b++});return b},toArray:function(a){return P(a,function(a){return a})||[]},only:function(a){if(!L(a))throw Error(z(143));return a}};exports.Component=C;exports.PureComponent=E;exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=T;\nexports.cloneElement=function(a,b,c){if(null===a||void 0===a)throw Error(z(267,a));var e=l({},a.props),d=a.key,k=a.ref,h=a._owner;if(null!=b){void 0!==b.ref&&(k=b.ref,h=G.current);void 0!==b.key&&(d=\"\"+b.key);if(a.type&&a.type.defaultProps)var g=a.type.defaultProps;for(f in b)H.call(b,f)&&!I.hasOwnProperty(f)&&(e[f]=void 0===b[f]&&void 0!==g?g[f]:b[f])}var f=arguments.length-2;if(1===f)e.children=c;else if(1<f){g=Array(f);for(var m=0;m<f;m++)g[m]=arguments[m+2];e.children=g}return{$$typeof:n,type:a.type,\nkey:d,ref:k,props:e,_owner:h}};exports.createContext=function(a,b){void 0===b&&(b=null);a={$$typeof:r,_calculateChangedBits:b,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null};a.Provider={$$typeof:q,_context:a};return a.Consumer=a};exports.createElement=J;exports.createFactory=function(a){var b=J.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};exports.forwardRef=function(a){return{$$typeof:t,render:a}};exports.isValidElement=L;\nexports.lazy=function(a){return{$$typeof:v,_payload:{_status:-1,_result:a},_init:Q}};exports.memo=function(a,b){return{$$typeof:u,type:a,compare:void 0===b?null:b}};exports.useCallback=function(a,b){return S().useCallback(a,b)};exports.useContext=function(a,b){return S().useContext(a,b)};exports.useDebugValue=function(){};exports.useEffect=function(a,b){return S().useEffect(a,b)};exports.useImperativeHandle=function(a,b,c){return S().useImperativeHandle(a,b,c)};\nexports.useLayoutEffect=function(a,b){return S().useLayoutEffect(a,b)};exports.useMemo=function(a,b){return S().useMemo(a,b)};exports.useReducer=function(a,b,c){return S().useReducer(a,b,c)};exports.useRef=function(a){return S().useRef(a)};exports.useState=function(a){return S().useState(a)};exports.version=\"17.0.2\";\n","/** @license React v17.0.2\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';var aa=require(\"react\"),m=require(\"object-assign\"),r=require(\"scheduler\");function y(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}if(!aa)throw Error(y(227));var ba=new Set,ca={};function da(a,b){ea(a,b);ea(a+\"Capture\",b)}\nfunction ea(a,b){ca[a]=b;for(a=0;a<b.length;a++)ba.add(b[a])}\nvar fa=!(\"undefined\"===typeof window||\"undefined\"===typeof window.document||\"undefined\"===typeof window.document.createElement),ha=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,ia=Object.prototype.hasOwnProperty,\nja={},ka={};function la(a){if(ia.call(ka,a))return!0;if(ia.call(ja,a))return!1;if(ha.test(a))return ka[a]=!0;ja[a]=!0;return!1}function ma(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}\nfunction na(a,b,c,d){if(null===b||\"undefined\"===typeof b||ma(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function B(a,b,c,d,e,f,g){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b;this.sanitizeURL=f;this.removeEmptyString=g}var D={};\n\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){D[a]=new B(a,0,!1,a,null,!1,!1)});[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];D[b]=new B(b,1,!1,a[1],null,!1,!1)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){D[a]=new B(a,2,!1,a.toLowerCase(),null,!1,!1)});\n[\"autoReverse\",\"externalResourcesRequired\",\"focusable\",\"preserveAlpha\"].forEach(function(a){D[a]=new B(a,2,!1,a,null,!1,!1)});\"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){D[a]=new B(a,3,!1,a.toLowerCase(),null,!1,!1)});\n[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){D[a]=new B(a,3,!0,a,null,!1,!1)});[\"capture\",\"download\"].forEach(function(a){D[a]=new B(a,4,!1,a,null,!1,!1)});[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){D[a]=new B(a,6,!1,a,null,!1,!1)});[\"rowSpan\",\"start\"].forEach(function(a){D[a]=new B(a,5,!1,a.toLowerCase(),null,!1,!1)});var oa=/[\\-:]([a-z])/g;function pa(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(oa,\npa);D[b]=new B(b,1,!1,a,null,!1,!1)});\"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(oa,pa);D[b]=new B(b,1,!1,a,\"http://www.w3.org/1999/xlink\",!1,!1)});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(oa,pa);D[b]=new B(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\",!1,!1)});[\"tabIndex\",\"crossOrigin\"].forEach(function(a){D[a]=new B(a,1,!1,a.toLowerCase(),null,!1,!1)});\nD.xlinkHref=new B(\"xlinkHref\",1,!1,\"xlink:href\",\"http://www.w3.org/1999/xlink\",!0,!1);[\"src\",\"href\",\"action\",\"formAction\"].forEach(function(a){D[a]=new B(a,1,!1,a.toLowerCase(),null,!0,!0)});\nfunction qa(a,b,c,d){var e=D.hasOwnProperty(b)?D[b]:null;var f=null!==e?0===e.type:d?!1:!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1]?!1:!0;f||(na(b,c,e,d)&&(c=null),d||null===e?la(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c))))}\nvar ra=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,sa=60103,ta=60106,ua=60107,wa=60108,xa=60114,ya=60109,za=60110,Aa=60112,Ba=60113,Ca=60120,Da=60115,Ea=60116,Fa=60121,Ga=60128,Ha=60129,Ia=60130,Ja=60131;\nif(\"function\"===typeof Symbol&&Symbol.for){var E=Symbol.for;sa=E(\"react.element\");ta=E(\"react.portal\");ua=E(\"react.fragment\");wa=E(\"react.strict_mode\");xa=E(\"react.profiler\");ya=E(\"react.provider\");za=E(\"react.context\");Aa=E(\"react.forward_ref\");Ba=E(\"react.suspense\");Ca=E(\"react.suspense_list\");Da=E(\"react.memo\");Ea=E(\"react.lazy\");Fa=E(\"react.block\");E(\"react.scope\");Ga=E(\"react.opaque.id\");Ha=E(\"react.debug_trace_mode\");Ia=E(\"react.offscreen\");Ja=E(\"react.legacy_hidden\")}\nvar Ka=\"function\"===typeof Symbol&&Symbol.iterator;function La(a){if(null===a||\"object\"!==typeof a)return null;a=Ka&&a[Ka]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}var Ma;function Na(a){if(void 0===Ma)try{throw Error();}catch(c){var b=c.stack.trim().match(/\\n( *(at )?)/);Ma=b&&b[1]||\"\"}return\"\\n\"+Ma+a}var Oa=!1;\nfunction Pa(a,b){if(!a||Oa)return\"\";Oa=!0;var c=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(b)if(b=function(){throw Error();},Object.defineProperty(b.prototype,\"props\",{set:function(){throw Error();}}),\"object\"===typeof Reflect&&Reflect.construct){try{Reflect.construct(b,[])}catch(k){var d=k}Reflect.construct(a,[],b)}else{try{b.call()}catch(k){d=k}a.call(b.prototype)}else{try{throw Error();}catch(k){d=k}a()}}catch(k){if(k&&d&&\"string\"===typeof k.stack){for(var e=k.stack.split(\"\\n\"),\nf=d.stack.split(\"\\n\"),g=e.length-1,h=f.length-1;1<=g&&0<=h&&e[g]!==f[h];)h--;for(;1<=g&&0<=h;g--,h--)if(e[g]!==f[h]){if(1!==g||1!==h){do if(g--,h--,0>h||e[g]!==f[h])return\"\\n\"+e[g].replace(\" at new \",\" at \");while(1<=g&&0<=h)}break}}}finally{Oa=!1,Error.prepareStackTrace=c}return(a=a?a.displayName||a.name:\"\")?Na(a):\"\"}\nfunction Qa(a){switch(a.tag){case 5:return Na(a.type);case 16:return Na(\"Lazy\");case 13:return Na(\"Suspense\");case 19:return Na(\"SuspenseList\");case 0:case 2:case 15:return a=Pa(a.type,!1),a;case 11:return a=Pa(a.type.render,!1),a;case 22:return a=Pa(a.type._render,!1),a;case 1:return a=Pa(a.type,!0),a;default:return\"\"}}\nfunction Ra(a){if(null==a)return null;if(\"function\"===typeof a)return a.displayName||a.name||null;if(\"string\"===typeof a)return a;switch(a){case ua:return\"Fragment\";case ta:return\"Portal\";case xa:return\"Profiler\";case wa:return\"StrictMode\";case Ba:return\"Suspense\";case Ca:return\"SuspenseList\"}if(\"object\"===typeof a)switch(a.$$typeof){case za:return(a.displayName||\"Context\")+\".Consumer\";case ya:return(a._context.displayName||\"Context\")+\".Provider\";case Aa:var b=a.render;b=b.displayName||b.name||\"\";\nreturn a.displayName||(\"\"!==b?\"ForwardRef(\"+b+\")\":\"ForwardRef\");case Da:return Ra(a.type);case Fa:return Ra(a._render);case Ea:b=a._payload;a=a._init;try{return Ra(a(b))}catch(c){}}return null}function Sa(a){switch(typeof a){case \"boolean\":case \"number\":case \"object\":case \"string\":case \"undefined\":return a;default:return\"\"}}function Ta(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction Ua(a){var b=Ta(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=\nnull;delete a[b]}}}}function Va(a){a._valueTracker||(a._valueTracker=Ua(a))}function Wa(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=Ta(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}function Xa(a){a=a||(\"undefined\"!==typeof document?document:void 0);if(\"undefined\"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}\nfunction Ya(a,b){var c=b.checked;return m({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}function Za(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=Sa(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function $a(a,b){b=b.checked;null!=b&&qa(a,\"checked\",b,!1)}\nfunction ab(a,b){$a(a,b);var c=Sa(b.value),d=b.type;if(null!=c)if(\"number\"===d){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);else if(\"submit\"===d||\"reset\"===d){a.removeAttribute(\"value\");return}b.hasOwnProperty(\"value\")?bb(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&bb(a,b.type,Sa(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction cb(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){var d=b.type;if(!(\"submit\"!==d&&\"reset\"!==d||void 0!==b.value&&null!==b.value))return;b=\"\"+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!!a._wrapperState.initialChecked;\"\"!==c&&(a.name=c)}\nfunction bb(a,b,c){if(\"number\"!==b||Xa(a.ownerDocument)!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}function db(a){var b=\"\";aa.Children.forEach(a,function(a){null!=a&&(b+=a)});return b}function eb(a,b){a=m({children:void 0},b);if(b=db(b.children))a.children=b;return a}\nfunction fb(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+Sa(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction gb(a,b){if(null!=b.dangerouslySetInnerHTML)throw Error(y(91));return m({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function hb(a,b){var c=b.value;if(null==c){c=b.children;b=b.defaultValue;if(null!=c){if(null!=b)throw Error(y(92));if(Array.isArray(c)){if(!(1>=c.length))throw Error(y(93));c=c[0]}b=c}null==b&&(b=\"\");c=b}a._wrapperState={initialValue:Sa(c)}}\nfunction ib(a,b){var c=Sa(b.value),d=Sa(b.defaultValue);null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=\"\"+d)}function jb(a){var b=a.textContent;b===a._wrapperState.initialValue&&\"\"!==b&&null!==b&&(a.value=b)}var kb={html:\"http://www.w3.org/1999/xhtml\",mathml:\"http://www.w3.org/1998/Math/MathML\",svg:\"http://www.w3.org/2000/svg\"};\nfunction lb(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}function mb(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?lb(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\nvar nb,ob=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(a.namespaceURI!==kb.svg||\"innerHTML\"in a)a.innerHTML=b;else{nb=nb||document.createElement(\"div\");nb.innerHTML=\"<svg>\"+b.valueOf().toString()+\"</svg>\";for(b=nb.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction pb(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\nvar qb={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,\nfloodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},rb=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(qb).forEach(function(a){rb.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);qb[b]=qb[a]})});function sb(a,b,c){return null==b||\"boolean\"===typeof b||\"\"===b?\"\":c||\"number\"!==typeof b||0===b||qb.hasOwnProperty(a)&&qb[a]?(\"\"+b).trim():b+\"px\"}\nfunction tb(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\"),e=sb(c,b[c],d);\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var ub=m({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction vb(a,b){if(b){if(ub[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML))throw Error(y(137,a));if(null!=b.dangerouslySetInnerHTML){if(null!=b.children)throw Error(y(60));if(!(\"object\"===typeof b.dangerouslySetInnerHTML&&\"__html\"in b.dangerouslySetInnerHTML))throw Error(y(61));}if(null!=b.style&&\"object\"!==typeof b.style)throw Error(y(62));}}\nfunction wb(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}function xb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}var yb=null,zb=null,Ab=null;\nfunction Bb(a){if(a=Cb(a)){if(\"function\"!==typeof yb)throw Error(y(280));var b=a.stateNode;b&&(b=Db(b),yb(a.stateNode,a.type,b))}}function Eb(a){zb?Ab?Ab.push(a):Ab=[a]:zb=a}function Fb(){if(zb){var a=zb,b=Ab;Ab=zb=null;Bb(a);if(b)for(a=0;a<b.length;a++)Bb(b[a])}}function Gb(a,b){return a(b)}function Hb(a,b,c,d,e){return a(b,c,d,e)}function Ib(){}var Jb=Gb,Kb=!1,Lb=!1;function Mb(){if(null!==zb||null!==Ab)Ib(),Fb()}\nfunction Nb(a,b,c){if(Lb)return a(b,c);Lb=!0;try{return Jb(a,b,c)}finally{Lb=!1,Mb()}}\nfunction Ob(a,b){var c=a.stateNode;if(null===c)return null;var d=Db(c);if(null===d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":case \"onMouseEnter\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;if(c&&\"function\"!==\ntypeof c)throw Error(y(231,b,typeof c));return c}var Pb=!1;if(fa)try{var Qb={};Object.defineProperty(Qb,\"passive\",{get:function(){Pb=!0}});window.addEventListener(\"test\",Qb,Qb);window.removeEventListener(\"test\",Qb,Qb)}catch(a){Pb=!1}function Rb(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(n){this.onError(n)}}var Sb=!1,Tb=null,Ub=!1,Vb=null,Wb={onError:function(a){Sb=!0;Tb=a}};function Xb(a,b,c,d,e,f,g,h,k){Sb=!1;Tb=null;Rb.apply(Wb,arguments)}\nfunction Yb(a,b,c,d,e,f,g,h,k){Xb.apply(this,arguments);if(Sb){if(Sb){var l=Tb;Sb=!1;Tb=null}else throw Error(y(198));Ub||(Ub=!0,Vb=l)}}function Zb(a){var b=a,c=a;if(a.alternate)for(;b.return;)b=b.return;else{a=b;do b=a,0!==(b.flags&1026)&&(c=b.return),a=b.return;while(a)}return 3===b.tag?c:null}function $b(a){if(13===a.tag){var b=a.memoizedState;null===b&&(a=a.alternate,null!==a&&(b=a.memoizedState));if(null!==b)return b.dehydrated}return null}function ac(a){if(Zb(a)!==a)throw Error(y(188));}\nfunction bc(a){var b=a.alternate;if(!b){b=Zb(a);if(null===b)throw Error(y(188));return b!==a?null:a}for(var c=a,d=b;;){var e=c.return;if(null===e)break;var f=e.alternate;if(null===f){d=e.return;if(null!==d){c=d;continue}break}if(e.child===f.child){for(f=e.child;f;){if(f===c)return ac(e),a;if(f===d)return ac(e),b;f=f.sibling}throw Error(y(188));}if(c.return!==d.return)c=e,d=f;else{for(var g=!1,h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===\nc){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}if(!g)throw Error(y(189));}}if(c.alternate!==d)throw Error(y(190));}if(3!==c.tag)throw Error(y(188));return c.stateNode.current===c?a:b}function cc(a){a=bc(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child)b.child.return=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}}return null}\nfunction dc(a,b){for(var c=a.alternate;null!==b;){if(b===a||b===c)return!0;b=b.return}return!1}var ec,fc,gc,hc,ic=!1,jc=[],kc=null,lc=null,mc=null,nc=new Map,oc=new Map,pc=[],qc=\"mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit\".split(\" \");\nfunction rc(a,b,c,d,e){return{blockedOn:a,domEventName:b,eventSystemFlags:c|16,nativeEvent:e,targetContainers:[d]}}function sc(a,b){switch(a){case \"focusin\":case \"focusout\":kc=null;break;case \"dragenter\":case \"dragleave\":lc=null;break;case \"mouseover\":case \"mouseout\":mc=null;break;case \"pointerover\":case \"pointerout\":nc.delete(b.pointerId);break;case \"gotpointercapture\":case \"lostpointercapture\":oc.delete(b.pointerId)}}\nfunction tc(a,b,c,d,e,f){if(null===a||a.nativeEvent!==f)return a=rc(b,c,d,e,f),null!==b&&(b=Cb(b),null!==b&&fc(b)),a;a.eventSystemFlags|=d;b=a.targetContainers;null!==e&&-1===b.indexOf(e)&&b.push(e);return a}\nfunction uc(a,b,c,d,e){switch(b){case \"focusin\":return kc=tc(kc,a,b,c,d,e),!0;case \"dragenter\":return lc=tc(lc,a,b,c,d,e),!0;case \"mouseover\":return mc=tc(mc,a,b,c,d,e),!0;case \"pointerover\":var f=e.pointerId;nc.set(f,tc(nc.get(f)||null,a,b,c,d,e));return!0;case \"gotpointercapture\":return f=e.pointerId,oc.set(f,tc(oc.get(f)||null,a,b,c,d,e)),!0}return!1}\nfunction vc(a){var b=wc(a.target);if(null!==b){var c=Zb(b);if(null!==c)if(b=c.tag,13===b){if(b=$b(c),null!==b){a.blockedOn=b;hc(a.lanePriority,function(){r.unstable_runWithPriority(a.priority,function(){gc(c)})});return}}else if(3===b&&c.stateNode.hydrate){a.blockedOn=3===c.tag?c.stateNode.containerInfo:null;return}}a.blockedOn=null}\nfunction xc(a){if(null!==a.blockedOn)return!1;for(var b=a.targetContainers;0<b.length;){var c=yc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null!==c)return b=Cb(c),null!==b&&fc(b),a.blockedOn=c,!1;b.shift()}return!0}function zc(a,b,c){xc(a)&&c.delete(b)}\nfunction Ac(){for(ic=!1;0<jc.length;){var a=jc[0];if(null!==a.blockedOn){a=Cb(a.blockedOn);null!==a&&ec(a);break}for(var b=a.targetContainers;0<b.length;){var c=yc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null!==c){a.blockedOn=c;break}b.shift()}null===a.blockedOn&&jc.shift()}null!==kc&&xc(kc)&&(kc=null);null!==lc&&xc(lc)&&(lc=null);null!==mc&&xc(mc)&&(mc=null);nc.forEach(zc);oc.forEach(zc)}\nfunction Bc(a,b){a.blockedOn===b&&(a.blockedOn=null,ic||(ic=!0,r.unstable_scheduleCallback(r.unstable_NormalPriority,Ac)))}\nfunction Cc(a){function b(b){return Bc(b,a)}if(0<jc.length){Bc(jc[0],a);for(var c=1;c<jc.length;c++){var d=jc[c];d.blockedOn===a&&(d.blockedOn=null)}}null!==kc&&Bc(kc,a);null!==lc&&Bc(lc,a);null!==mc&&Bc(mc,a);nc.forEach(b);oc.forEach(b);for(c=0;c<pc.length;c++)d=pc[c],d.blockedOn===a&&(d.blockedOn=null);for(;0<pc.length&&(c=pc[0],null===c.blockedOn);)vc(c),null===c.blockedOn&&pc.shift()}\nfunction Dc(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;return c}var Ec={animationend:Dc(\"Animation\",\"AnimationEnd\"),animationiteration:Dc(\"Animation\",\"AnimationIteration\"),animationstart:Dc(\"Animation\",\"AnimationStart\"),transitionend:Dc(\"Transition\",\"TransitionEnd\")},Fc={},Gc={};\nfa&&(Gc=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete Ec.animationend.animation,delete Ec.animationiteration.animation,delete Ec.animationstart.animation),\"TransitionEvent\"in window||delete Ec.transitionend.transition);function Hc(a){if(Fc[a])return Fc[a];if(!Ec[a])return a;var b=Ec[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Gc)return Fc[a]=b[c];return a}\nvar Ic=Hc(\"animationend\"),Jc=Hc(\"animationiteration\"),Kc=Hc(\"animationstart\"),Lc=Hc(\"transitionend\"),Mc=new Map,Nc=new Map,Oc=[\"abort\",\"abort\",Ic,\"animationEnd\",Jc,\"animationIteration\",Kc,\"animationStart\",\"canplay\",\"canPlay\",\"canplaythrough\",\"canPlayThrough\",\"durationchange\",\"durationChange\",\"emptied\",\"emptied\",\"encrypted\",\"encrypted\",\"ended\",\"ended\",\"error\",\"error\",\"gotpointercapture\",\"gotPointerCapture\",\"load\",\"load\",\"loadeddata\",\"loadedData\",\"loadedmetadata\",\"loadedMetadata\",\"loadstart\",\"loadStart\",\n\"lostpointercapture\",\"lostPointerCapture\",\"playing\",\"playing\",\"progress\",\"progress\",\"seeking\",\"seeking\",\"stalled\",\"stalled\",\"suspend\",\"suspend\",\"timeupdate\",\"timeUpdate\",Lc,\"transitionEnd\",\"waiting\",\"waiting\"];function Pc(a,b){for(var c=0;c<a.length;c+=2){var d=a[c],e=a[c+1];e=\"on\"+(e[0].toUpperCase()+e.slice(1));Nc.set(d,b);Mc.set(d,e);da(e,[d])}}var Qc=r.unstable_now;Qc();var F=8;\nfunction Rc(a){if(0!==(1&a))return F=15,1;if(0!==(2&a))return F=14,2;if(0!==(4&a))return F=13,4;var b=24&a;if(0!==b)return F=12,b;if(0!==(a&32))return F=11,32;b=192&a;if(0!==b)return F=10,b;if(0!==(a&256))return F=9,256;b=3584&a;if(0!==b)return F=8,b;if(0!==(a&4096))return F=7,4096;b=4186112&a;if(0!==b)return F=6,b;b=62914560&a;if(0!==b)return F=5,b;if(a&67108864)return F=4,67108864;if(0!==(a&134217728))return F=3,134217728;b=805306368&a;if(0!==b)return F=2,b;if(0!==(1073741824&a))return F=1,1073741824;\nF=8;return a}function Sc(a){switch(a){case 99:return 15;case 98:return 10;case 97:case 96:return 8;case 95:return 2;default:return 0}}function Tc(a){switch(a){case 15:case 14:return 99;case 13:case 12:case 11:case 10:return 98;case 9:case 8:case 7:case 6:case 4:case 5:return 97;case 3:case 2:case 1:return 95;case 0:return 90;default:throw Error(y(358,a));}}\nfunction Uc(a,b){var c=a.pendingLanes;if(0===c)return F=0;var d=0,e=0,f=a.expiredLanes,g=a.suspendedLanes,h=a.pingedLanes;if(0!==f)d=f,e=F=15;else if(f=c&134217727,0!==f){var k=f&~g;0!==k?(d=Rc(k),e=F):(h&=f,0!==h&&(d=Rc(h),e=F))}else f=c&~g,0!==f?(d=Rc(f),e=F):0!==h&&(d=Rc(h),e=F);if(0===d)return 0;d=31-Vc(d);d=c&((0>d?0:1<<d)<<1)-1;if(0!==b&&b!==d&&0===(b&g)){Rc(b);if(e<=F)return b;F=e}b=a.entangledLanes;if(0!==b)for(a=a.entanglements,b&=d;0<b;)c=31-Vc(b),e=1<<c,d|=a[c],b&=~e;return d}\nfunction Wc(a){a=a.pendingLanes&-1073741825;return 0!==a?a:a&1073741824?1073741824:0}function Xc(a,b){switch(a){case 15:return 1;case 14:return 2;case 12:return a=Yc(24&~b),0===a?Xc(10,b):a;case 10:return a=Yc(192&~b),0===a?Xc(8,b):a;case 8:return a=Yc(3584&~b),0===a&&(a=Yc(4186112&~b),0===a&&(a=512)),a;case 2:return b=Yc(805306368&~b),0===b&&(b=268435456),b}throw Error(y(358,a));}function Yc(a){return a&-a}function Zc(a){for(var b=[],c=0;31>c;c++)b.push(a);return b}\nfunction $c(a,b,c){a.pendingLanes|=b;var d=b-1;a.suspendedLanes&=d;a.pingedLanes&=d;a=a.eventTimes;b=31-Vc(b);a[b]=c}var Vc=Math.clz32?Math.clz32:ad,bd=Math.log,cd=Math.LN2;function ad(a){return 0===a?32:31-(bd(a)/cd|0)|0}var dd=r.unstable_UserBlockingPriority,ed=r.unstable_runWithPriority,fd=!0;function gd(a,b,c,d){Kb||Ib();var e=hd,f=Kb;Kb=!0;try{Hb(e,a,b,c,d)}finally{(Kb=f)||Mb()}}function id(a,b,c,d){ed(dd,hd.bind(null,a,b,c,d))}\nfunction hd(a,b,c,d){if(fd){var e;if((e=0===(b&4))&&0<jc.length&&-1<qc.indexOf(a))a=rc(null,a,b,c,d),jc.push(a);else{var f=yc(a,b,c,d);if(null===f)e&&sc(a,d);else{if(e){if(-1<qc.indexOf(a)){a=rc(f,a,b,c,d);jc.push(a);return}if(uc(f,a,b,c,d))return;sc(a,d)}jd(a,b,d,null,c)}}}}\nfunction yc(a,b,c,d){var e=xb(d);e=wc(e);if(null!==e){var f=Zb(e);if(null===f)e=null;else{var g=f.tag;if(13===g){e=$b(f);if(null!==e)return e;e=null}else if(3===g){if(f.stateNode.hydrate)return 3===f.tag?f.stateNode.containerInfo:null;e=null}else f!==e&&(e=null)}}jd(a,b,d,e,c);return null}var kd=null,ld=null,md=null;\nfunction nd(){if(md)return md;var a,b=ld,c=b.length,d,e=\"value\"in kd?kd.value:kd.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return md=e.slice(a,1<d?1-d:void 0)}function od(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}function pd(){return!0}function qd(){return!1}\nfunction rd(a){function b(b,d,e,f,g){this._reactName=b;this._targetInst=e;this.type=d;this.nativeEvent=f;this.target=g;this.currentTarget=null;for(var c in a)a.hasOwnProperty(c)&&(b=a[c],this[c]=b?b(f):f[c]);this.isDefaultPrevented=(null!=f.defaultPrevented?f.defaultPrevented:!1===f.returnValue)?pd:qd;this.isPropagationStopped=qd;return this}m(b.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&\n(a.returnValue=!1),this.isDefaultPrevented=pd)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=pd)},persist:function(){},isPersistent:pd});return b}\nvar sd={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},td=rd(sd),ud=m({},sd,{view:0,detail:0}),vd=rd(ud),wd,xd,yd,Ad=m({},ud,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:zd,button:0,buttons:0,relatedTarget:function(a){return void 0===a.relatedTarget?a.fromElement===a.srcElement?a.toElement:a.fromElement:a.relatedTarget},movementX:function(a){if(\"movementX\"in\na)return a.movementX;a!==yd&&(yd&&\"mousemove\"===a.type?(wd=a.screenX-yd.screenX,xd=a.screenY-yd.screenY):xd=wd=0,yd=a);return wd},movementY:function(a){return\"movementY\"in a?a.movementY:xd}}),Bd=rd(Ad),Cd=m({},Ad,{dataTransfer:0}),Dd=rd(Cd),Ed=m({},ud,{relatedTarget:0}),Fd=rd(Ed),Gd=m({},sd,{animationName:0,elapsedTime:0,pseudoElement:0}),Hd=rd(Gd),Id=m({},sd,{clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),Jd=rd(Id),Kd=m({},sd,{data:0}),Ld=rd(Kd),Md={Esc:\"Escape\",\nSpacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},Nd={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",116:\"F5\",117:\"F6\",118:\"F7\",\n119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},Od={Alt:\"altKey\",Control:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function Pd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Od[a])?!!b[a]:!1}function zd(){return Pd}\nvar Qd=m({},ud,{key:function(a){if(a.key){var b=Md[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=od(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?Nd[a.keyCode]||\"Unidentified\":\"\"},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:zd,charCode:function(a){return\"keypress\"===a.type?od(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===\na.type?od(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),Rd=rd(Qd),Sd=m({},Ad,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Td=rd(Sd),Ud=m({},ud,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:zd}),Vd=rd(Ud),Wd=m({},sd,{propertyName:0,elapsedTime:0,pseudoElement:0}),Xd=rd(Wd),Yd=m({},Ad,{deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in a?-a.wheelDeltaX:0},\ndeltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:0,deltaMode:0}),Zd=rd(Yd),$d=[9,13,27,32],ae=fa&&\"CompositionEvent\"in window,be=null;fa&&\"documentMode\"in document&&(be=document.documentMode);var ce=fa&&\"TextEvent\"in window&&!be,de=fa&&(!ae||be&&8<be&&11>=be),ee=String.fromCharCode(32),fe=!1;\nfunction ge(a,b){switch(a){case \"keyup\":return-1!==$d.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"focusout\":return!0;default:return!1}}function he(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var ie=!1;function je(a,b){switch(a){case \"compositionend\":return he(b);case \"keypress\":if(32!==b.which)return null;fe=!0;return ee;case \"textInput\":return a=b.data,a===ee&&fe?null:a;default:return null}}\nfunction ke(a,b){if(ie)return\"compositionend\"===a||!ae&&ge(a,b)?(a=nd(),md=ld=kd=null,ie=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return de&&\"ko\"!==b.locale?null:b.data;default:return null}}\nvar le={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function me(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!le[a.type]:\"textarea\"===b?!0:!1}function ne(a,b,c,d){Eb(d);b=oe(b,\"onChange\");0<b.length&&(c=new td(\"onChange\",\"change\",null,c,d),a.push({event:c,listeners:b}))}var pe=null,qe=null;function re(a){se(a,0)}function te(a){var b=ue(a);if(Wa(b))return a}\nfunction ve(a,b){if(\"change\"===a)return b}var we=!1;if(fa){var xe;if(fa){var ye=\"oninput\"in document;if(!ye){var ze=document.createElement(\"div\");ze.setAttribute(\"oninput\",\"return;\");ye=\"function\"===typeof ze.oninput}xe=ye}else xe=!1;we=xe&&(!document.documentMode||9<document.documentMode)}function Ae(){pe&&(pe.detachEvent(\"onpropertychange\",Be),qe=pe=null)}function Be(a){if(\"value\"===a.propertyName&&te(qe)){var b=[];ne(b,qe,a,xb(a));a=re;if(Kb)a(b);else{Kb=!0;try{Gb(a,b)}finally{Kb=!1,Mb()}}}}\nfunction Ce(a,b,c){\"focusin\"===a?(Ae(),pe=b,qe=c,pe.attachEvent(\"onpropertychange\",Be)):\"focusout\"===a&&Ae()}function De(a){if(\"selectionchange\"===a||\"keyup\"===a||\"keydown\"===a)return te(qe)}function Ee(a,b){if(\"click\"===a)return te(b)}function Fe(a,b){if(\"input\"===a||\"change\"===a)return te(b)}function Ge(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var He=\"function\"===typeof Object.is?Object.is:Ge,Ie=Object.prototype.hasOwnProperty;\nfunction Je(a,b){if(He(a,b))return!0;if(\"object\"!==typeof a||null===a||\"object\"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++)if(!Ie.call(b,c[d])||!He(a[c[d]],b[c[d]]))return!1;return!0}function Ke(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\nfunction Le(a,b){var c=Ke(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Ke(c)}}function Me(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?Me(a,b.parentNode):\"contains\"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}\nfunction Ne(){for(var a=window,b=Xa();b instanceof a.HTMLIFrameElement;){try{var c=\"string\"===typeof b.contentWindow.location.href}catch(d){c=!1}if(c)a=b.contentWindow;else break;b=Xa(a.document)}return b}function Oe(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}\nvar Pe=fa&&\"documentMode\"in document&&11>=document.documentMode,Qe=null,Re=null,Se=null,Te=!1;\nfunction Ue(a,b,c){var d=c.window===c?c.document:9===c.nodeType?c:c.ownerDocument;Te||null==Qe||Qe!==Xa(d)||(d=Qe,\"selectionStart\"in d&&Oe(d)?d={start:d.selectionStart,end:d.selectionEnd}:(d=(d.ownerDocument&&d.ownerDocument.defaultView||window).getSelection(),d={anchorNode:d.anchorNode,anchorOffset:d.anchorOffset,focusNode:d.focusNode,focusOffset:d.focusOffset}),Se&&Je(Se,d)||(Se=d,d=oe(Re,\"onSelect\"),0<d.length&&(b=new td(\"onSelect\",\"select\",null,b,c),a.push({event:b,listeners:d}),b.target=Qe)))}\nPc(\"cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focusin focus focusout blur input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange\".split(\" \"),\n0);Pc(\"drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel\".split(\" \"),1);Pc(Oc,2);for(var Ve=\"change selectionchange textInput compositionstart compositionend compositionupdate\".split(\" \"),We=0;We<Ve.length;We++)Nc.set(Ve[We],0);ea(\"onMouseEnter\",[\"mouseout\",\"mouseover\"]);\nea(\"onMouseLeave\",[\"mouseout\",\"mouseover\"]);ea(\"onPointerEnter\",[\"pointerout\",\"pointerover\"]);ea(\"onPointerLeave\",[\"pointerout\",\"pointerover\"]);da(\"onChange\",\"change click focusin focusout input keydown keyup selectionchange\".split(\" \"));da(\"onSelect\",\"focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange\".split(\" \"));da(\"onBeforeInput\",[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]);da(\"onCompositionEnd\",\"compositionend focusout keydown keypress keyup mousedown\".split(\" \"));\nda(\"onCompositionStart\",\"compositionstart focusout keydown keypress keyup mousedown\".split(\" \"));da(\"onCompositionUpdate\",\"compositionupdate focusout keydown keypress keyup mousedown\".split(\" \"));var Xe=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),Ye=new Set(\"cancel close invalid load scroll toggle\".split(\" \").concat(Xe));\nfunction Ze(a,b,c){var d=a.type||\"unknown-event\";a.currentTarget=c;Yb(d,b,void 0,a);a.currentTarget=null}\nfunction se(a,b){b=0!==(b&4);for(var c=0;c<a.length;c++){var d=a[c],e=d.event;d=d.listeners;a:{var f=void 0;if(b)for(var g=d.length-1;0<=g;g--){var h=d[g],k=h.instance,l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;Ze(e,h,l);f=k}else for(g=0;g<d.length;g++){h=d[g];k=h.instance;l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;Ze(e,h,l);f=k}}}if(Ub)throw a=Vb,Ub=!1,Vb=null,a;}\nfunction G(a,b){var c=$e(b),d=a+\"__bubble\";c.has(d)||(af(b,a,2,!1),c.add(d))}var bf=\"_reactListening\"+Math.random().toString(36).slice(2);function cf(a){a[bf]||(a[bf]=!0,ba.forEach(function(b){Ye.has(b)||df(b,!1,a,null);df(b,!0,a,null)}))}\nfunction df(a,b,c,d){var e=4<arguments.length&&void 0!==arguments[4]?arguments[4]:0,f=c;\"selectionchange\"===a&&9!==c.nodeType&&(f=c.ownerDocument);if(null!==d&&!b&&Ye.has(a)){if(\"scroll\"!==a)return;e|=2;f=d}var g=$e(f),h=a+\"__\"+(b?\"capture\":\"bubble\");g.has(h)||(b&&(e|=4),af(f,a,e,b),g.add(h))}\nfunction af(a,b,c,d){var e=Nc.get(b);switch(void 0===e?2:e){case 0:e=gd;break;case 1:e=id;break;default:e=hd}c=e.bind(null,b,c,a);e=void 0;!Pb||\"touchstart\"!==b&&\"touchmove\"!==b&&\"wheel\"!==b||(e=!0);d?void 0!==e?a.addEventListener(b,c,{capture:!0,passive:e}):a.addEventListener(b,c,!0):void 0!==e?a.addEventListener(b,c,{passive:e}):a.addEventListener(b,c,!1)}\nfunction jd(a,b,c,d,e){var f=d;if(0===(b&1)&&0===(b&2)&&null!==d)a:for(;;){if(null===d)return;var g=d.tag;if(3===g||4===g){var h=d.stateNode.containerInfo;if(h===e||8===h.nodeType&&h.parentNode===e)break;if(4===g)for(g=d.return;null!==g;){var k=g.tag;if(3===k||4===k)if(k=g.stateNode.containerInfo,k===e||8===k.nodeType&&k.parentNode===e)return;g=g.return}for(;null!==h;){g=wc(h);if(null===g)return;k=g.tag;if(5===k||6===k){d=f=g;continue a}h=h.parentNode}}d=d.return}Nb(function(){var d=f,e=xb(c),g=[];\na:{var h=Mc.get(a);if(void 0!==h){var k=td,x=a;switch(a){case \"keypress\":if(0===od(c))break a;case \"keydown\":case \"keyup\":k=Rd;break;case \"focusin\":x=\"focus\";k=Fd;break;case \"focusout\":x=\"blur\";k=Fd;break;case \"beforeblur\":case \"afterblur\":k=Fd;break;case \"click\":if(2===c.button)break a;case \"auxclick\":case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":k=Bd;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":k=\nDd;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":k=Vd;break;case Ic:case Jc:case Kc:k=Hd;break;case Lc:k=Xd;break;case \"scroll\":k=vd;break;case \"wheel\":k=Zd;break;case \"copy\":case \"cut\":case \"paste\":k=Jd;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":k=Td}var w=0!==(b&4),z=!w&&\"scroll\"===a,u=w?null!==h?h+\"Capture\":null:h;w=[];for(var t=d,q;null!==\nt;){q=t;var v=q.stateNode;5===q.tag&&null!==v&&(q=v,null!==u&&(v=Ob(t,u),null!=v&&w.push(ef(t,v,q))));if(z)break;t=t.return}0<w.length&&(h=new k(h,x,null,c,e),g.push({event:h,listeners:w}))}}if(0===(b&7)){a:{h=\"mouseover\"===a||\"pointerover\"===a;k=\"mouseout\"===a||\"pointerout\"===a;if(h&&0===(b&16)&&(x=c.relatedTarget||c.fromElement)&&(wc(x)||x[ff]))break a;if(k||h){h=e.window===e?e:(h=e.ownerDocument)?h.defaultView||h.parentWindow:window;if(k){if(x=c.relatedTarget||c.toElement,k=d,x=x?wc(x):null,null!==\nx&&(z=Zb(x),x!==z||5!==x.tag&&6!==x.tag))x=null}else k=null,x=d;if(k!==x){w=Bd;v=\"onMouseLeave\";u=\"onMouseEnter\";t=\"mouse\";if(\"pointerout\"===a||\"pointerover\"===a)w=Td,v=\"onPointerLeave\",u=\"onPointerEnter\",t=\"pointer\";z=null==k?h:ue(k);q=null==x?h:ue(x);h=new w(v,t+\"leave\",k,c,e);h.target=z;h.relatedTarget=q;v=null;wc(e)===d&&(w=new w(u,t+\"enter\",x,c,e),w.target=q,w.relatedTarget=z,v=w);z=v;if(k&&x)b:{w=k;u=x;t=0;for(q=w;q;q=gf(q))t++;q=0;for(v=u;v;v=gf(v))q++;for(;0<t-q;)w=gf(w),t--;for(;0<q-t;)u=\ngf(u),q--;for(;t--;){if(w===u||null!==u&&w===u.alternate)break b;w=gf(w);u=gf(u)}w=null}else w=null;null!==k&&hf(g,h,k,w,!1);null!==x&&null!==z&&hf(g,z,x,w,!0)}}}a:{h=d?ue(d):window;k=h.nodeName&&h.nodeName.toLowerCase();if(\"select\"===k||\"input\"===k&&\"file\"===h.type)var J=ve;else if(me(h))if(we)J=Fe;else{J=De;var K=Ce}else(k=h.nodeName)&&\"input\"===k.toLowerCase()&&(\"checkbox\"===h.type||\"radio\"===h.type)&&(J=Ee);if(J&&(J=J(a,d))){ne(g,J,c,e);break a}K&&K(a,h,d);\"focusout\"===a&&(K=h._wrapperState)&&\nK.controlled&&\"number\"===h.type&&bb(h,\"number\",h.value)}K=d?ue(d):window;switch(a){case \"focusin\":if(me(K)||\"true\"===K.contentEditable)Qe=K,Re=d,Se=null;break;case \"focusout\":Se=Re=Qe=null;break;case \"mousedown\":Te=!0;break;case \"contextmenu\":case \"mouseup\":case \"dragend\":Te=!1;Ue(g,c,e);break;case \"selectionchange\":if(Pe)break;case \"keydown\":case \"keyup\":Ue(g,c,e)}var Q;if(ae)b:{switch(a){case \"compositionstart\":var L=\"onCompositionStart\";break b;case \"compositionend\":L=\"onCompositionEnd\";break b;\ncase \"compositionupdate\":L=\"onCompositionUpdate\";break b}L=void 0}else ie?ge(a,c)&&(L=\"onCompositionEnd\"):\"keydown\"===a&&229===c.keyCode&&(L=\"onCompositionStart\");L&&(de&&\"ko\"!==c.locale&&(ie||\"onCompositionStart\"!==L?\"onCompositionEnd\"===L&&ie&&(Q=nd()):(kd=e,ld=\"value\"in kd?kd.value:kd.textContent,ie=!0)),K=oe(d,L),0<K.length&&(L=new Ld(L,a,null,c,e),g.push({event:L,listeners:K}),Q?L.data=Q:(Q=he(c),null!==Q&&(L.data=Q))));if(Q=ce?je(a,c):ke(a,c))d=oe(d,\"onBeforeInput\"),0<d.length&&(e=new Ld(\"onBeforeInput\",\n\"beforeinput\",null,c,e),g.push({event:e,listeners:d}),e.data=Q)}se(g,b)})}function ef(a,b,c){return{instance:a,listener:b,currentTarget:c}}function oe(a,b){for(var c=b+\"Capture\",d=[];null!==a;){var e=a,f=e.stateNode;5===e.tag&&null!==f&&(e=f,f=Ob(a,c),null!=f&&d.unshift(ef(a,f,e)),f=Ob(a,b),null!=f&&d.push(ef(a,f,e)));a=a.return}return d}function gf(a){if(null===a)return null;do a=a.return;while(a&&5!==a.tag);return a?a:null}\nfunction hf(a,b,c,d,e){for(var f=b._reactName,g=[];null!==c&&c!==d;){var h=c,k=h.alternate,l=h.stateNode;if(null!==k&&k===d)break;5===h.tag&&null!==l&&(h=l,e?(k=Ob(c,f),null!=k&&g.unshift(ef(c,k,h))):e||(k=Ob(c,f),null!=k&&g.push(ef(c,k,h))));c=c.return}0!==g.length&&a.push({event:b,listeners:g})}function jf(){}var kf=null,lf=null;function mf(a,b){switch(a){case \"button\":case \"input\":case \"select\":case \"textarea\":return!!b.autoFocus}return!1}\nfunction nf(a,b){return\"textarea\"===a||\"option\"===a||\"noscript\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}var of=\"function\"===typeof setTimeout?setTimeout:void 0,pf=\"function\"===typeof clearTimeout?clearTimeout:void 0;function qf(a){1===a.nodeType?a.textContent=\"\":9===a.nodeType&&(a=a.body,null!=a&&(a.textContent=\"\"))}\nfunction rf(a){for(;null!=a;a=a.nextSibling){var b=a.nodeType;if(1===b||3===b)break}return a}function sf(a){a=a.previousSibling;for(var b=0;a;){if(8===a.nodeType){var c=a.data;if(\"$\"===c||\"$!\"===c||\"$?\"===c){if(0===b)return a;b--}else\"/$\"===c&&b++}a=a.previousSibling}return null}var tf=0;function uf(a){return{$$typeof:Ga,toString:a,valueOf:a}}var vf=Math.random().toString(36).slice(2),wf=\"__reactFiber$\"+vf,xf=\"__reactProps$\"+vf,ff=\"__reactContainer$\"+vf,yf=\"__reactEvents$\"+vf;\nfunction wc(a){var b=a[wf];if(b)return b;for(var c=a.parentNode;c;){if(b=c[ff]||c[wf]){c=b.alternate;if(null!==b.child||null!==c&&null!==c.child)for(a=sf(a);null!==a;){if(c=a[wf])return c;a=sf(a)}return b}a=c;c=a.parentNode}return null}function Cb(a){a=a[wf]||a[ff];return!a||5!==a.tag&&6!==a.tag&&13!==a.tag&&3!==a.tag?null:a}function ue(a){if(5===a.tag||6===a.tag)return a.stateNode;throw Error(y(33));}function Db(a){return a[xf]||null}\nfunction $e(a){var b=a[yf];void 0===b&&(b=a[yf]=new Set);return b}var zf=[],Af=-1;function Bf(a){return{current:a}}function H(a){0>Af||(a.current=zf[Af],zf[Af]=null,Af--)}function I(a,b){Af++;zf[Af]=a.current;a.current=b}var Cf={},M=Bf(Cf),N=Bf(!1),Df=Cf;\nfunction Ef(a,b){var c=a.type.contextTypes;if(!c)return Cf;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}function Ff(a){a=a.childContextTypes;return null!==a&&void 0!==a}function Gf(){H(N);H(M)}function Hf(a,b,c){if(M.current!==Cf)throw Error(y(168));I(M,b);I(N,c)}\nfunction If(a,b,c){var d=a.stateNode;a=b.childContextTypes;if(\"function\"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)if(!(e in a))throw Error(y(108,Ra(b)||\"Unknown\",e));return m({},c,d)}function Jf(a){a=(a=a.stateNode)&&a.__reactInternalMemoizedMergedChildContext||Cf;Df=M.current;I(M,a);I(N,N.current);return!0}function Kf(a,b,c){var d=a.stateNode;if(!d)throw Error(y(169));c?(a=If(a,b,Df),d.__reactInternalMemoizedMergedChildContext=a,H(N),H(M),I(M,a)):H(N);I(N,c)}\nvar Lf=null,Mf=null,Nf=r.unstable_runWithPriority,Of=r.unstable_scheduleCallback,Pf=r.unstable_cancelCallback,Qf=r.unstable_shouldYield,Rf=r.unstable_requestPaint,Sf=r.unstable_now,Tf=r.unstable_getCurrentPriorityLevel,Uf=r.unstable_ImmediatePriority,Vf=r.unstable_UserBlockingPriority,Wf=r.unstable_NormalPriority,Xf=r.unstable_LowPriority,Yf=r.unstable_IdlePriority,Zf={},$f=void 0!==Rf?Rf:function(){},ag=null,bg=null,cg=!1,dg=Sf(),O=1E4>dg?Sf:function(){return Sf()-dg};\nfunction eg(){switch(Tf()){case Uf:return 99;case Vf:return 98;case Wf:return 97;case Xf:return 96;case Yf:return 95;default:throw Error(y(332));}}function fg(a){switch(a){case 99:return Uf;case 98:return Vf;case 97:return Wf;case 96:return Xf;case 95:return Yf;default:throw Error(y(332));}}function gg(a,b){a=fg(a);return Nf(a,b)}function hg(a,b,c){a=fg(a);return Of(a,b,c)}function ig(){if(null!==bg){var a=bg;bg=null;Pf(a)}jg()}\nfunction jg(){if(!cg&&null!==ag){cg=!0;var a=0;try{var b=ag;gg(99,function(){for(;a<b.length;a++){var c=b[a];do c=c(!0);while(null!==c)}});ag=null}catch(c){throw null!==ag&&(ag=ag.slice(a+1)),Of(Uf,ig),c;}finally{cg=!1}}}var kg=ra.ReactCurrentBatchConfig;function lg(a,b){if(a&&a.defaultProps){b=m({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c]);return b}return b}var mg=Bf(null),ng=null,og=null,pg=null;function qg(){pg=og=ng=null}\nfunction rg(a){var b=mg.current;H(mg);a.type._context._currentValue=b}function sg(a,b){for(;null!==a;){var c=a.alternate;if((a.childLanes&b)===b)if(null===c||(c.childLanes&b)===b)break;else c.childLanes|=b;else a.childLanes|=b,null!==c&&(c.childLanes|=b);a=a.return}}function tg(a,b){ng=a;pg=og=null;a=a.dependencies;null!==a&&null!==a.firstContext&&(0!==(a.lanes&b)&&(ug=!0),a.firstContext=null)}\nfunction vg(a,b){if(pg!==a&&!1!==b&&0!==b){if(\"number\"!==typeof b||1073741823===b)pg=a,b=1073741823;b={context:a,observedBits:b,next:null};if(null===og){if(null===ng)throw Error(y(308));og=b;ng.dependencies={lanes:0,firstContext:b,responders:null}}else og=og.next=b}return a._currentValue}var wg=!1;function xg(a){a.updateQueue={baseState:a.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null},effects:null}}\nfunction yg(a,b){a=a.updateQueue;b.updateQueue===a&&(b.updateQueue={baseState:a.baseState,firstBaseUpdate:a.firstBaseUpdate,lastBaseUpdate:a.lastBaseUpdate,shared:a.shared,effects:a.effects})}function zg(a,b){return{eventTime:a,lane:b,tag:0,payload:null,callback:null,next:null}}function Ag(a,b){a=a.updateQueue;if(null!==a){a=a.shared;var c=a.pending;null===c?b.next=b:(b.next=c.next,c.next=b);a.pending=b}}\nfunction Bg(a,b){var c=a.updateQueue,d=a.alternate;if(null!==d&&(d=d.updateQueue,c===d)){var e=null,f=null;c=c.firstBaseUpdate;if(null!==c){do{var g={eventTime:c.eventTime,lane:c.lane,tag:c.tag,payload:c.payload,callback:c.callback,next:null};null===f?e=f=g:f=f.next=g;c=c.next}while(null!==c);null===f?e=f=b:f=f.next=b}else e=f=b;c={baseState:d.baseState,firstBaseUpdate:e,lastBaseUpdate:f,shared:d.shared,effects:d.effects};a.updateQueue=c;return}a=c.lastBaseUpdate;null===a?c.firstBaseUpdate=b:a.next=\nb;c.lastBaseUpdate=b}\nfunction Cg(a,b,c,d){var e=a.updateQueue;wg=!1;var f=e.firstBaseUpdate,g=e.lastBaseUpdate,h=e.shared.pending;if(null!==h){e.shared.pending=null;var k=h,l=k.next;k.next=null;null===g?f=l:g.next=l;g=k;var n=a.alternate;if(null!==n){n=n.updateQueue;var A=n.lastBaseUpdate;A!==g&&(null===A?n.firstBaseUpdate=l:A.next=l,n.lastBaseUpdate=k)}}if(null!==f){A=e.baseState;g=0;n=l=k=null;do{h=f.lane;var p=f.eventTime;if((d&h)===h){null!==n&&(n=n.next={eventTime:p,lane:0,tag:f.tag,payload:f.payload,callback:f.callback,\nnext:null});a:{var C=a,x=f;h=b;p=c;switch(x.tag){case 1:C=x.payload;if(\"function\"===typeof C){A=C.call(p,A,h);break a}A=C;break a;case 3:C.flags=C.flags&-4097|64;case 0:C=x.payload;h=\"function\"===typeof C?C.call(p,A,h):C;if(null===h||void 0===h)break a;A=m({},A,h);break a;case 2:wg=!0}}null!==f.callback&&(a.flags|=32,h=e.effects,null===h?e.effects=[f]:h.push(f))}else p={eventTime:p,lane:h,tag:f.tag,payload:f.payload,callback:f.callback,next:null},null===n?(l=n=p,k=A):n=n.next=p,g|=h;f=f.next;if(null===\nf)if(h=e.shared.pending,null===h)break;else f=h.next,h.next=null,e.lastBaseUpdate=h,e.shared.pending=null}while(1);null===n&&(k=A);e.baseState=k;e.firstBaseUpdate=l;e.lastBaseUpdate=n;Dg|=g;a.lanes=g;a.memoizedState=A}}function Eg(a,b,c){a=b.effects;b.effects=null;if(null!==a)for(b=0;b<a.length;b++){var d=a[b],e=d.callback;if(null!==e){d.callback=null;d=c;if(\"function\"!==typeof e)throw Error(y(191,e));e.call(d)}}}var Fg=(new aa.Component).refs;\nfunction Gg(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:m({},b,c);a.memoizedState=c;0===a.lanes&&(a.updateQueue.baseState=c)}\nvar Kg={isMounted:function(a){return(a=a._reactInternals)?Zb(a)===a:!1},enqueueSetState:function(a,b,c){a=a._reactInternals;var d=Hg(),e=Ig(a),f=zg(d,e);f.payload=b;void 0!==c&&null!==c&&(f.callback=c);Ag(a,f);Jg(a,e,d)},enqueueReplaceState:function(a,b,c){a=a._reactInternals;var d=Hg(),e=Ig(a),f=zg(d,e);f.tag=1;f.payload=b;void 0!==c&&null!==c&&(f.callback=c);Ag(a,f);Jg(a,e,d)},enqueueForceUpdate:function(a,b){a=a._reactInternals;var c=Hg(),d=Ig(a),e=zg(c,d);e.tag=2;void 0!==b&&null!==b&&(e.callback=\nb);Ag(a,e);Jg(a,d,c)}};function Lg(a,b,c,d,e,f,g){a=a.stateNode;return\"function\"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!Je(c,d)||!Je(e,f):!0}\nfunction Mg(a,b,c){var d=!1,e=Cf;var f=b.contextType;\"object\"===typeof f&&null!==f?f=vg(f):(e=Ff(b)?Df:M.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Ef(a,e):Cf);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=Kg;a.stateNode=b;b._reactInternals=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}\nfunction Ng(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&Kg.enqueueReplaceState(b,b.state,null)}\nfunction Og(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs=Fg;xg(a);var f=b.contextType;\"object\"===typeof f&&null!==f?e.context=vg(f):(f=Ff(b)?Df:M.current,e.context=Ef(a,f));Cg(a,c,e,d);e.state=a.memoizedState;f=b.getDerivedStateFromProps;\"function\"===typeof f&&(Gg(a,b,f,c),e.state=a.memoizedState);\"function\"===typeof b.getDerivedStateFromProps||\"function\"===typeof e.getSnapshotBeforeUpdate||\"function\"!==typeof e.UNSAFE_componentWillMount&&\"function\"!==typeof e.componentWillMount||\n(b=e.state,\"function\"===typeof e.componentWillMount&&e.componentWillMount(),\"function\"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&Kg.enqueueReplaceState(e,e.state,null),Cg(a,c,e,d),e.state=a.memoizedState);\"function\"===typeof e.componentDidMount&&(a.flags|=4)}var Pg=Array.isArray;\nfunction Qg(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;if(c){if(1!==c.tag)throw Error(y(309));var d=c.stateNode}if(!d)throw Error(y(147,a));var e=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===e)return b.ref;b=function(a){var b=d.refs;b===Fg&&(b=d.refs={});null===a?delete b[e]:b[e]=a};b._stringRef=e;return b}if(\"string\"!==typeof a)throw Error(y(284));if(!c._owner)throw Error(y(290,a));}return a}\nfunction Rg(a,b){if(\"textarea\"!==a.type)throw Error(y(31,\"[object Object]\"===Object.prototype.toString.call(b)?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":b));}\nfunction Sg(a){function b(b,c){if(a){var d=b.lastEffect;null!==d?(d.nextEffect=c,b.lastEffect=c):b.firstEffect=b.lastEffect=c;c.nextEffect=null;c.flags=8}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b){a=Tg(a,b);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.flags=2,\nc):d;b.flags=2;return c}function g(b){a&&null===b.alternate&&(b.flags=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=Ug(c,a.mode,d),b.return=a,b;b=e(b,c);b.return=a;return b}function k(a,b,c,d){if(null!==b&&b.elementType===c.type)return d=e(b,c.props),d.ref=Qg(a,b,c),d.return=a,d;d=Vg(c.type,c.key,c.props,null,a.mode,d);d.ref=Qg(a,b,c);d.return=a;return d}function l(a,b,c,d){if(null===b||4!==b.tag||b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=\nWg(c,a.mode,d),b.return=a,b;b=e(b,c.children||[]);b.return=a;return b}function n(a,b,c,d,f){if(null===b||7!==b.tag)return b=Xg(c,a.mode,d,f),b.return=a,b;b=e(b,c);b.return=a;return b}function A(a,b,c){if(\"string\"===typeof b||\"number\"===typeof b)return b=Ug(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case sa:return c=Vg(b.type,b.key,b.props,null,a.mode,c),c.ref=Qg(a,null,b),c.return=a,c;case ta:return b=Wg(b,a.mode,c),b.return=a,b}if(Pg(b)||La(b))return b=Xg(b,\na.mode,c,null),b.return=a,b;Rg(a,b)}return null}function p(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case sa:return c.key===e?c.type===ua?n(a,b,c.props.children,d,e):k(a,b,c,d):null;case ta:return c.key===e?l(a,b,c,d):null}if(Pg(c)||La(c))return null!==e?null:n(a,b,c,d,null);Rg(a,c)}return null}function C(a,b,c,d,e){if(\"string\"===typeof d||\"number\"===typeof d)return a=a.get(c)||\nnull,h(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case sa:return a=a.get(null===d.key?c:d.key)||null,d.type===ua?n(b,a,d.props.children,e,d.key):k(b,a,d,e);case ta:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e)}if(Pg(d)||La(d))return a=a.get(c)||null,n(b,a,d,e,null);Rg(b,d)}return null}function x(e,g,h,k){for(var l=null,t=null,u=g,z=g=0,q=null;null!==u&&z<h.length;z++){u.index>z?(q=u,u=null):q=u.sibling;var n=p(e,u,h[z],k);if(null===n){null===u&&(u=q);break}a&&u&&null===\nn.alternate&&b(e,u);g=f(n,g,z);null===t?l=n:t.sibling=n;t=n;u=q}if(z===h.length)return c(e,u),l;if(null===u){for(;z<h.length;z++)u=A(e,h[z],k),null!==u&&(g=f(u,g,z),null===t?l=u:t.sibling=u,t=u);return l}for(u=d(e,u);z<h.length;z++)q=C(u,e,z,h[z],k),null!==q&&(a&&null!==q.alternate&&u.delete(null===q.key?z:q.key),g=f(q,g,z),null===t?l=q:t.sibling=q,t=q);a&&u.forEach(function(a){return b(e,a)});return l}function w(e,g,h,k){var l=La(h);if(\"function\"!==typeof l)throw Error(y(150));h=l.call(h);if(null==\nh)throw Error(y(151));for(var t=l=null,u=g,z=g=0,q=null,n=h.next();null!==u&&!n.done;z++,n=h.next()){u.index>z?(q=u,u=null):q=u.sibling;var w=p(e,u,n.value,k);if(null===w){null===u&&(u=q);break}a&&u&&null===w.alternate&&b(e,u);g=f(w,g,z);null===t?l=w:t.sibling=w;t=w;u=q}if(n.done)return c(e,u),l;if(null===u){for(;!n.done;z++,n=h.next())n=A(e,n.value,k),null!==n&&(g=f(n,g,z),null===t?l=n:t.sibling=n,t=n);return l}for(u=d(e,u);!n.done;z++,n=h.next())n=C(u,e,z,n.value,k),null!==n&&(a&&null!==n.alternate&&\nu.delete(null===n.key?z:n.key),g=f(n,g,z),null===t?l=n:t.sibling=n,t=n);a&&u.forEach(function(a){return b(e,a)});return l}return function(a,d,f,h){var k=\"object\"===typeof f&&null!==f&&f.type===ua&&null===f.key;k&&(f=f.props.children);var l=\"object\"===typeof f&&null!==f;if(l)switch(f.$$typeof){case sa:a:{l=f.key;for(k=d;null!==k;){if(k.key===l){switch(k.tag){case 7:if(f.type===ua){c(a,k.sibling);d=e(k,f.props.children);d.return=a;a=d;break a}break;default:if(k.elementType===f.type){c(a,k.sibling);\nd=e(k,f.props);d.ref=Qg(a,k,f);d.return=a;a=d;break a}}c(a,k);break}else b(a,k);k=k.sibling}f.type===ua?(d=Xg(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=Vg(f.type,f.key,f.props,null,a.mode,h),h.ref=Qg(a,d,f),h.return=a,a=h)}return g(a);case ta:a:{for(k=f.key;null!==d;){if(d.key===k)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[]);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=\nWg(f,a.mode,h);d.return=a;a=d}return g(a)}if(\"string\"===typeof f||\"number\"===typeof f)return f=\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f),d.return=a,a=d):(c(a,d),d=Ug(f,a.mode,h),d.return=a,a=d),g(a);if(Pg(f))return x(a,d,f,h);if(La(f))return w(a,d,f,h);l&&Rg(a,f);if(\"undefined\"===typeof f&&!k)switch(a.tag){case 1:case 22:case 0:case 11:case 15:throw Error(y(152,Ra(a.type)||\"Component\"));}return c(a,d)}}var Yg=Sg(!0),Zg=Sg(!1),$g={},ah=Bf($g),bh=Bf($g),ch=Bf($g);\nfunction dh(a){if(a===$g)throw Error(y(174));return a}function eh(a,b){I(ch,b);I(bh,a);I(ah,$g);a=b.nodeType;switch(a){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:mb(null,\"\");break;default:a=8===a?b.parentNode:b,b=a.namespaceURI||null,a=a.tagName,b=mb(b,a)}H(ah);I(ah,b)}function fh(){H(ah);H(bh);H(ch)}function gh(a){dh(ch.current);var b=dh(ah.current);var c=mb(b,a.type);b!==c&&(I(bh,a),I(ah,c))}function hh(a){bh.current===a&&(H(ah),H(bh))}var P=Bf(0);\nfunction ih(a){for(var b=a;null!==b;){if(13===b.tag){var c=b.memoizedState;if(null!==c&&(c=c.dehydrated,null===c||\"$?\"===c.data||\"$!\"===c.data))return b}else if(19===b.tag&&void 0!==b.memoizedProps.revealOrder){if(0!==(b.flags&64))return b}else if(null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}return null}var jh=null,kh=null,lh=!1;\nfunction mh(a,b){var c=nh(5,null,null,0);c.elementType=\"DELETED\";c.type=\"DELETED\";c.stateNode=b;c.return=a;c.flags=8;null!==a.lastEffect?(a.lastEffect.nextEffect=c,a.lastEffect=c):a.firstEffect=a.lastEffect=c}function oh(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,!0):!1;case 6:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,!0):!1;case 13:return!1;default:return!1}}\nfunction ph(a){if(lh){var b=kh;if(b){var c=b;if(!oh(a,b)){b=rf(c.nextSibling);if(!b||!oh(a,b)){a.flags=a.flags&-1025|2;lh=!1;jh=a;return}mh(jh,c)}jh=a;kh=rf(b.firstChild)}else a.flags=a.flags&-1025|2,lh=!1,jh=a}}function qh(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&13!==a.tag;)a=a.return;jh=a}\nfunction rh(a){if(a!==jh)return!1;if(!lh)return qh(a),lh=!0,!1;var b=a.type;if(5!==a.tag||\"head\"!==b&&\"body\"!==b&&!nf(b,a.memoizedProps))for(b=kh;b;)mh(a,b),b=rf(b.nextSibling);qh(a);if(13===a.tag){a=a.memoizedState;a=null!==a?a.dehydrated:null;if(!a)throw Error(y(317));a:{a=a.nextSibling;for(b=0;a;){if(8===a.nodeType){var c=a.data;if(\"/$\"===c){if(0===b){kh=rf(a.nextSibling);break a}b--}else\"$\"!==c&&\"$!\"!==c&&\"$?\"!==c||b++}a=a.nextSibling}kh=null}}else kh=jh?rf(a.stateNode.nextSibling):null;return!0}\nfunction sh(){kh=jh=null;lh=!1}var th=[];function uh(){for(var a=0;a<th.length;a++)th[a]._workInProgressVersionPrimary=null;th.length=0}var vh=ra.ReactCurrentDispatcher,wh=ra.ReactCurrentBatchConfig,xh=0,R=null,S=null,T=null,yh=!1,zh=!1;function Ah(){throw Error(y(321));}function Bh(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!He(a[c],b[c]))return!1;return!0}\nfunction Ch(a,b,c,d,e,f){xh=f;R=b;b.memoizedState=null;b.updateQueue=null;b.lanes=0;vh.current=null===a||null===a.memoizedState?Dh:Eh;a=c(d,e);if(zh){f=0;do{zh=!1;if(!(25>f))throw Error(y(301));f+=1;T=S=null;b.updateQueue=null;vh.current=Fh;a=c(d,e)}while(zh)}vh.current=Gh;b=null!==S&&null!==S.next;xh=0;T=S=R=null;yh=!1;if(b)throw Error(y(300));return a}function Hh(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};null===T?R.memoizedState=T=a:T=T.next=a;return T}\nfunction Ih(){if(null===S){var a=R.alternate;a=null!==a?a.memoizedState:null}else a=S.next;var b=null===T?R.memoizedState:T.next;if(null!==b)T=b,S=a;else{if(null===a)throw Error(y(310));S=a;a={memoizedState:S.memoizedState,baseState:S.baseState,baseQueue:S.baseQueue,queue:S.queue,next:null};null===T?R.memoizedState=T=a:T=T.next=a}return T}function Jh(a,b){return\"function\"===typeof b?b(a):b}\nfunction Kh(a){var b=Ih(),c=b.queue;if(null===c)throw Error(y(311));c.lastRenderedReducer=a;var d=S,e=d.baseQueue,f=c.pending;if(null!==f){if(null!==e){var g=e.next;e.next=f.next;f.next=g}d.baseQueue=e=f;c.pending=null}if(null!==e){e=e.next;d=d.baseState;var h=g=f=null,k=e;do{var l=k.lane;if((xh&l)===l)null!==h&&(h=h.next={lane:0,action:k.action,eagerReducer:k.eagerReducer,eagerState:k.eagerState,next:null}),d=k.eagerReducer===a?k.eagerState:a(d,k.action);else{var n={lane:l,action:k.action,eagerReducer:k.eagerReducer,\neagerState:k.eagerState,next:null};null===h?(g=h=n,f=d):h=h.next=n;R.lanes|=l;Dg|=l}k=k.next}while(null!==k&&k!==e);null===h?f=d:h.next=g;He(d,b.memoizedState)||(ug=!0);b.memoizedState=d;b.baseState=f;b.baseQueue=h;c.lastRenderedState=d}return[b.memoizedState,c.dispatch]}\nfunction Lh(a){var b=Ih(),c=b.queue;if(null===c)throw Error(y(311));c.lastRenderedReducer=a;var d=c.dispatch,e=c.pending,f=b.memoizedState;if(null!==e){c.pending=null;var g=e=e.next;do f=a(f,g.action),g=g.next;while(g!==e);He(f,b.memoizedState)||(ug=!0);b.memoizedState=f;null===b.baseQueue&&(b.baseState=f);c.lastRenderedState=f}return[f,d]}\nfunction Mh(a,b,c){var d=b._getVersion;d=d(b._source);var e=b._workInProgressVersionPrimary;if(null!==e)a=e===d;else if(a=a.mutableReadLanes,a=(xh&a)===a)b._workInProgressVersionPrimary=d,th.push(b);if(a)return c(b._source);th.push(b);throw Error(y(350));}\nfunction Nh(a,b,c,d){var e=U;if(null===e)throw Error(y(349));var f=b._getVersion,g=f(b._source),h=vh.current,k=h.useState(function(){return Mh(e,b,c)}),l=k[1],n=k[0];k=T;var A=a.memoizedState,p=A.refs,C=p.getSnapshot,x=A.source;A=A.subscribe;var w=R;a.memoizedState={refs:p,source:b,subscribe:d};h.useEffect(function(){p.getSnapshot=c;p.setSnapshot=l;var a=f(b._source);if(!He(g,a)){a=c(b._source);He(n,a)||(l(a),a=Ig(w),e.mutableReadLanes|=a&e.pendingLanes);a=e.mutableReadLanes;e.entangledLanes|=a;for(var d=\ne.entanglements,h=a;0<h;){var k=31-Vc(h),v=1<<k;d[k]|=a;h&=~v}}},[c,b,d]);h.useEffect(function(){return d(b._source,function(){var a=p.getSnapshot,c=p.setSnapshot;try{c(a(b._source));var d=Ig(w);e.mutableReadLanes|=d&e.pendingLanes}catch(q){c(function(){throw q;})}})},[b,d]);He(C,c)&&He(x,b)&&He(A,d)||(a={pending:null,dispatch:null,lastRenderedReducer:Jh,lastRenderedState:n},a.dispatch=l=Oh.bind(null,R,a),k.queue=a,k.baseQueue=null,n=Mh(e,b,c),k.memoizedState=k.baseState=n);return n}\nfunction Ph(a,b,c){var d=Ih();return Nh(d,a,b,c)}function Qh(a){var b=Hh();\"function\"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a=b.queue={pending:null,dispatch:null,lastRenderedReducer:Jh,lastRenderedState:a};a=a.dispatch=Oh.bind(null,R,a);return[b.memoizedState,a]}\nfunction Rh(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};b=R.updateQueue;null===b?(b={lastEffect:null},R.updateQueue=b,b.lastEffect=a.next=a):(c=b.lastEffect,null===c?b.lastEffect=a.next=a:(d=c.next,c.next=a,a.next=d,b.lastEffect=a));return a}function Sh(a){var b=Hh();a={current:a};return b.memoizedState=a}function Th(){return Ih().memoizedState}function Uh(a,b,c,d){var e=Hh();R.flags|=a;e.memoizedState=Rh(1|b,c,void 0,void 0===d?null:d)}\nfunction Vh(a,b,c,d){var e=Ih();d=void 0===d?null:d;var f=void 0;if(null!==S){var g=S.memoizedState;f=g.destroy;if(null!==d&&Bh(d,g.deps)){Rh(b,c,f,d);return}}R.flags|=a;e.memoizedState=Rh(1|b,c,f,d)}function Wh(a,b){return Uh(516,4,a,b)}function Xh(a,b){return Vh(516,4,a,b)}function Yh(a,b){return Vh(4,2,a,b)}function Zh(a,b){if(\"function\"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}\nfunction $h(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return Vh(4,2,Zh.bind(null,b,a),c)}function ai(){}function bi(a,b){var c=Ih();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Bh(b,d[1]))return d[0];c.memoizedState=[a,b];return a}function ci(a,b){var c=Ih();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Bh(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a}\nfunction di(a,b){var c=eg();gg(98>c?98:c,function(){a(!0)});gg(97<c?97:c,function(){var c=wh.transition;wh.transition=1;try{a(!1),b()}finally{wh.transition=c}})}\nfunction Oh(a,b,c){var d=Hg(),e=Ig(a),f={lane:e,action:c,eagerReducer:null,eagerState:null,next:null},g=b.pending;null===g?f.next=f:(f.next=g.next,g.next=f);b.pending=f;g=a.alternate;if(a===R||null!==g&&g===R)zh=yh=!0;else{if(0===a.lanes&&(null===g||0===g.lanes)&&(g=b.lastRenderedReducer,null!==g))try{var h=b.lastRenderedState,k=g(h,c);f.eagerReducer=g;f.eagerState=k;if(He(k,h))return}catch(l){}finally{}Jg(a,e,d)}}\nvar Gh={readContext:vg,useCallback:Ah,useContext:Ah,useEffect:Ah,useImperativeHandle:Ah,useLayoutEffect:Ah,useMemo:Ah,useReducer:Ah,useRef:Ah,useState:Ah,useDebugValue:Ah,useDeferredValue:Ah,useTransition:Ah,useMutableSource:Ah,useOpaqueIdentifier:Ah,unstable_isNewReconciler:!1},Dh={readContext:vg,useCallback:function(a,b){Hh().memoizedState=[a,void 0===b?null:b];return a},useContext:vg,useEffect:Wh,useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return Uh(4,2,Zh.bind(null,\nb,a),c)},useLayoutEffect:function(a,b){return Uh(4,2,a,b)},useMemo:function(a,b){var c=Hh();b=void 0===b?null:b;a=a();c.memoizedState=[a,b];return a},useReducer:function(a,b,c){var d=Hh();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a=d.queue={pending:null,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};a=a.dispatch=Oh.bind(null,R,a);return[d.memoizedState,a]},useRef:Sh,useState:Qh,useDebugValue:ai,useDeferredValue:function(a){var b=Qh(a),c=b[0],d=b[1];Wh(function(){var b=wh.transition;\nwh.transition=1;try{d(a)}finally{wh.transition=b}},[a]);return c},useTransition:function(){var a=Qh(!1),b=a[0];a=di.bind(null,a[1]);Sh(a);return[a,b]},useMutableSource:function(a,b,c){var d=Hh();d.memoizedState={refs:{getSnapshot:b,setSnapshot:null},source:a,subscribe:c};return Nh(d,a,b,c)},useOpaqueIdentifier:function(){if(lh){var a=!1,b=uf(function(){a||(a=!0,c(\"r:\"+(tf++).toString(36)));throw Error(y(355));}),c=Qh(b)[1];0===(R.mode&2)&&(R.flags|=516,Rh(5,function(){c(\"r:\"+(tf++).toString(36))},\nvoid 0,null));return b}b=\"r:\"+(tf++).toString(36);Qh(b);return b},unstable_isNewReconciler:!1},Eh={readContext:vg,useCallback:bi,useContext:vg,useEffect:Xh,useImperativeHandle:$h,useLayoutEffect:Yh,useMemo:ci,useReducer:Kh,useRef:Th,useState:function(){return Kh(Jh)},useDebugValue:ai,useDeferredValue:function(a){var b=Kh(Jh),c=b[0],d=b[1];Xh(function(){var b=wh.transition;wh.transition=1;try{d(a)}finally{wh.transition=b}},[a]);return c},useTransition:function(){var a=Kh(Jh)[0];return[Th().current,\na]},useMutableSource:Ph,useOpaqueIdentifier:function(){return Kh(Jh)[0]},unstable_isNewReconciler:!1},Fh={readContext:vg,useCallback:bi,useContext:vg,useEffect:Xh,useImperativeHandle:$h,useLayoutEffect:Yh,useMemo:ci,useReducer:Lh,useRef:Th,useState:function(){return Lh(Jh)},useDebugValue:ai,useDeferredValue:function(a){var b=Lh(Jh),c=b[0],d=b[1];Xh(function(){var b=wh.transition;wh.transition=1;try{d(a)}finally{wh.transition=b}},[a]);return c},useTransition:function(){var a=Lh(Jh)[0];return[Th().current,\na]},useMutableSource:Ph,useOpaqueIdentifier:function(){return Lh(Jh)[0]},unstable_isNewReconciler:!1},ei=ra.ReactCurrentOwner,ug=!1;function fi(a,b,c,d){b.child=null===a?Zg(b,null,c,d):Yg(b,a.child,c,d)}function gi(a,b,c,d,e){c=c.render;var f=b.ref;tg(b,e);d=Ch(a,b,c,d,f,e);if(null!==a&&!ug)return b.updateQueue=a.updateQueue,b.flags&=-517,a.lanes&=~e,hi(a,b,e);b.flags|=1;fi(a,b,d,e);return b.child}\nfunction ii(a,b,c,d,e,f){if(null===a){var g=c.type;if(\"function\"===typeof g&&!ji(g)&&void 0===g.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=g,ki(a,b,g,d,e,f);a=Vg(c.type,null,d,b,b.mode,f);a.ref=b.ref;a.return=b;return b.child=a}g=a.child;if(0===(e&f)&&(e=g.memoizedProps,c=c.compare,c=null!==c?c:Je,c(e,d)&&a.ref===b.ref))return hi(a,b,f);b.flags|=1;a=Tg(g,d);a.ref=b.ref;a.return=b;return b.child=a}\nfunction ki(a,b,c,d,e,f){if(null!==a&&Je(a.memoizedProps,d)&&a.ref===b.ref)if(ug=!1,0!==(f&e))0!==(a.flags&16384)&&(ug=!0);else return b.lanes=a.lanes,hi(a,b,f);return li(a,b,c,d,f)}\nfunction mi(a,b,c){var d=b.pendingProps,e=d.children,f=null!==a?a.memoizedState:null;if(\"hidden\"===d.mode||\"unstable-defer-without-hiding\"===d.mode)if(0===(b.mode&4))b.memoizedState={baseLanes:0},ni(b,c);else if(0!==(c&1073741824))b.memoizedState={baseLanes:0},ni(b,null!==f?f.baseLanes:c);else return a=null!==f?f.baseLanes|c:c,b.lanes=b.childLanes=1073741824,b.memoizedState={baseLanes:a},ni(b,a),null;else null!==f?(d=f.baseLanes|c,b.memoizedState=null):d=c,ni(b,d);fi(a,b,e,c);return b.child}\nfunction oi(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.flags|=128}function li(a,b,c,d,e){var f=Ff(c)?Df:M.current;f=Ef(b,f);tg(b,e);c=Ch(a,b,c,d,f,e);if(null!==a&&!ug)return b.updateQueue=a.updateQueue,b.flags&=-517,a.lanes&=~e,hi(a,b,e);b.flags|=1;fi(a,b,c,e);return b.child}\nfunction pi(a,b,c,d,e){if(Ff(c)){var f=!0;Jf(b)}else f=!1;tg(b,e);if(null===b.stateNode)null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2),Mg(b,c,d),Og(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var k=g.context,l=c.contextType;\"object\"===typeof l&&null!==l?l=vg(l):(l=Ff(c)?Df:M.current,l=Ef(b,l));var n=c.getDerivedStateFromProps,A=\"function\"===typeof n||\"function\"===typeof g.getSnapshotBeforeUpdate;A||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\n\"function\"!==typeof g.componentWillReceiveProps||(h!==d||k!==l)&&Ng(b,g,d,l);wg=!1;var p=b.memoizedState;g.state=p;Cg(b,d,g,e);k=b.memoizedState;h!==d||p!==k||N.current||wg?(\"function\"===typeof n&&(Gg(b,c,n,d),k=b.memoizedState),(h=wg||Lg(b,c,h,d,p,k,l))?(A||\"function\"!==typeof g.UNSAFE_componentWillMount&&\"function\"!==typeof g.componentWillMount||(\"function\"===typeof g.componentWillMount&&g.componentWillMount(),\"function\"===typeof g.UNSAFE_componentWillMount&&g.UNSAFE_componentWillMount()),\"function\"===\ntypeof g.componentDidMount&&(b.flags|=4)):(\"function\"===typeof g.componentDidMount&&(b.flags|=4),b.memoizedProps=d,b.memoizedState=k),g.props=d,g.state=k,g.context=l,d=h):(\"function\"===typeof g.componentDidMount&&(b.flags|=4),d=!1)}else{g=b.stateNode;yg(a,b);h=b.memoizedProps;l=b.type===b.elementType?h:lg(b.type,h);g.props=l;A=b.pendingProps;p=g.context;k=c.contextType;\"object\"===typeof k&&null!==k?k=vg(k):(k=Ff(c)?Df:M.current,k=Ef(b,k));var C=c.getDerivedStateFromProps;(n=\"function\"===typeof C||\n\"function\"===typeof g.getSnapshotBeforeUpdate)||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||(h!==A||p!==k)&&Ng(b,g,d,k);wg=!1;p=b.memoizedState;g.state=p;Cg(b,d,g,e);var x=b.memoizedState;h!==A||p!==x||N.current||wg?(\"function\"===typeof C&&(Gg(b,c,C,d),x=b.memoizedState),(l=wg||Lg(b,c,l,d,p,x,k))?(n||\"function\"!==typeof g.UNSAFE_componentWillUpdate&&\"function\"!==typeof g.componentWillUpdate||(\"function\"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,\nx,k),\"function\"===typeof g.UNSAFE_componentWillUpdate&&g.UNSAFE_componentWillUpdate(d,x,k)),\"function\"===typeof g.componentDidUpdate&&(b.flags|=4),\"function\"===typeof g.getSnapshotBeforeUpdate&&(b.flags|=256)):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&p===a.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&p===a.memoizedState||(b.flags|=256),b.memoizedProps=d,b.memoizedState=x),g.props=d,g.state=x,g.context=k,d=l):(\"function\"!==typeof g.componentDidUpdate||\nh===a.memoizedProps&&p===a.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&p===a.memoizedState||(b.flags|=256),d=!1)}return qi(a,b,c,d,f,e)}\nfunction qi(a,b,c,d,e,f){oi(a,b);var g=0!==(b.flags&64);if(!d&&!g)return e&&Kf(b,c,!1),hi(a,b,f);d=b.stateNode;ei.current=b;var h=g&&\"function\"!==typeof c.getDerivedStateFromError?null:d.render();b.flags|=1;null!==a&&g?(b.child=Yg(b,a.child,null,f),b.child=Yg(b,null,h,f)):fi(a,b,h,f);b.memoizedState=d.state;e&&Kf(b,c,!0);return b.child}function ri(a){var b=a.stateNode;b.pendingContext?Hf(a,b.pendingContext,b.pendingContext!==b.context):b.context&&Hf(a,b.context,!1);eh(a,b.containerInfo)}\nvar si={dehydrated:null,retryLane:0};\nfunction ti(a,b,c){var d=b.pendingProps,e=P.current,f=!1,g;(g=0!==(b.flags&64))||(g=null!==a&&null===a.memoizedState?!1:0!==(e&2));g?(f=!0,b.flags&=-65):null!==a&&null===a.memoizedState||void 0===d.fallback||!0===d.unstable_avoidThisFallback||(e|=1);I(P,e&1);if(null===a){void 0!==d.fallback&&ph(b);a=d.children;e=d.fallback;if(f)return a=ui(b,a,e,c),b.child.memoizedState={baseLanes:c},b.memoizedState=si,a;if(\"number\"===typeof d.unstable_expectedLoadTime)return a=ui(b,a,e,c),b.child.memoizedState={baseLanes:c},\nb.memoizedState=si,b.lanes=33554432,a;c=vi({mode:\"visible\",children:a},b.mode,c,null);c.return=b;return b.child=c}if(null!==a.memoizedState){if(f)return d=wi(a,b,d.children,d.fallback,c),f=b.child,e=a.child.memoizedState,f.memoizedState=null===e?{baseLanes:c}:{baseLanes:e.baseLanes|c},f.childLanes=a.childLanes&~c,b.memoizedState=si,d;c=xi(a,b,d.children,c);b.memoizedState=null;return c}if(f)return d=wi(a,b,d.children,d.fallback,c),f=b.child,e=a.child.memoizedState,f.memoizedState=null===e?{baseLanes:c}:\n{baseLanes:e.baseLanes|c},f.childLanes=a.childLanes&~c,b.memoizedState=si,d;c=xi(a,b,d.children,c);b.memoizedState=null;return c}function ui(a,b,c,d){var e=a.mode,f=a.child;b={mode:\"hidden\",children:b};0===(e&2)&&null!==f?(f.childLanes=0,f.pendingProps=b):f=vi(b,e,0,null);c=Xg(c,e,d,null);f.return=a;c.return=a;f.sibling=c;a.child=f;return c}\nfunction xi(a,b,c,d){var e=a.child;a=e.sibling;c=Tg(e,{mode:\"visible\",children:c});0===(b.mode&2)&&(c.lanes=d);c.return=b;c.sibling=null;null!==a&&(a.nextEffect=null,a.flags=8,b.firstEffect=b.lastEffect=a);return b.child=c}\nfunction wi(a,b,c,d,e){var f=b.mode,g=a.child;a=g.sibling;var h={mode:\"hidden\",children:c};0===(f&2)&&b.child!==g?(c=b.child,c.childLanes=0,c.pendingProps=h,g=c.lastEffect,null!==g?(b.firstEffect=c.firstEffect,b.lastEffect=g,g.nextEffect=null):b.firstEffect=b.lastEffect=null):c=Tg(g,h);null!==a?d=Tg(a,d):(d=Xg(d,f,e,null),d.flags|=2);d.return=b;c.return=b;c.sibling=d;b.child=c;return d}function yi(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);sg(a.return,b)}\nfunction zi(a,b,c,d,e,f){var g=a.memoizedState;null===g?a.memoizedState={isBackwards:b,rendering:null,renderingStartTime:0,last:d,tail:c,tailMode:e,lastEffect:f}:(g.isBackwards=b,g.rendering=null,g.renderingStartTime=0,g.last=d,g.tail=c,g.tailMode=e,g.lastEffect=f)}\nfunction Ai(a,b,c){var d=b.pendingProps,e=d.revealOrder,f=d.tail;fi(a,b,d.children,c);d=P.current;if(0!==(d&2))d=d&1|2,b.flags|=64;else{if(null!==a&&0!==(a.flags&64))a:for(a=b.child;null!==a;){if(13===a.tag)null!==a.memoizedState&&yi(a,c);else if(19===a.tag)yi(a,c);else if(null!==a.child){a.child.return=a;a=a.child;continue}if(a===b)break a;for(;null===a.sibling;){if(null===a.return||a.return===b)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}d&=1}I(P,d);if(0===(b.mode&2))b.memoizedState=\nnull;else switch(e){case \"forwards\":c=b.child;for(e=null;null!==c;)a=c.alternate,null!==a&&null===ih(a)&&(e=c),c=c.sibling;c=e;null===c?(e=b.child,b.child=null):(e=c.sibling,c.sibling=null);zi(b,!1,e,c,f,b.lastEffect);break;case \"backwards\":c=null;e=b.child;for(b.child=null;null!==e;){a=e.alternate;if(null!==a&&null===ih(a)){b.child=e;break}a=e.sibling;e.sibling=c;c=e;e=a}zi(b,!0,c,null,f,b.lastEffect);break;case \"together\":zi(b,!1,null,null,void 0,b.lastEffect);break;default:b.memoizedState=null}return b.child}\nfunction hi(a,b,c){null!==a&&(b.dependencies=a.dependencies);Dg|=b.lanes;if(0!==(c&b.childLanes)){if(null!==a&&b.child!==a.child)throw Error(y(153));if(null!==b.child){a=b.child;c=Tg(a,a.pendingProps);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=Tg(a,a.pendingProps),c.return=b;c.sibling=null}return b.child}return null}var Bi,Ci,Di,Ei;\nBi=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};Ci=function(){};\nDi=function(a,b,c,d){var e=a.memoizedProps;if(e!==d){a=b.stateNode;dh(ah.current);var f=null;switch(c){case \"input\":e=Ya(a,e);d=Ya(a,d);f=[];break;case \"option\":e=eb(a,e);d=eb(a,d);f=[];break;case \"select\":e=m({},e,{value:void 0});d=m({},d,{value:void 0});f=[];break;case \"textarea\":e=gb(a,e);d=gb(a,d);f=[];break;default:\"function\"!==typeof e.onClick&&\"function\"===typeof d.onClick&&(a.onclick=jf)}vb(c,d);var g;c=null;for(l in e)if(!d.hasOwnProperty(l)&&e.hasOwnProperty(l)&&null!=e[l])if(\"style\"===\nl){var h=e[l];for(g in h)h.hasOwnProperty(g)&&(c||(c={}),c[g]=\"\")}else\"dangerouslySetInnerHTML\"!==l&&\"children\"!==l&&\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&\"autoFocus\"!==l&&(ca.hasOwnProperty(l)?f||(f=[]):(f=f||[]).push(l,null));for(l in d){var k=d[l];h=null!=e?e[l]:void 0;if(d.hasOwnProperty(l)&&k!==h&&(null!=k||null!=h))if(\"style\"===l)if(h){for(g in h)!h.hasOwnProperty(g)||k&&k.hasOwnProperty(g)||(c||(c={}),c[g]=\"\");for(g in k)k.hasOwnProperty(g)&&h[g]!==k[g]&&(c||\n(c={}),c[g]=k[g])}else c||(f||(f=[]),f.push(l,c)),c=k;else\"dangerouslySetInnerHTML\"===l?(k=k?k.__html:void 0,h=h?h.__html:void 0,null!=k&&h!==k&&(f=f||[]).push(l,k)):\"children\"===l?\"string\"!==typeof k&&\"number\"!==typeof k||(f=f||[]).push(l,\"\"+k):\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&(ca.hasOwnProperty(l)?(null!=k&&\"onScroll\"===l&&G(\"scroll\",a),f||h===k||(f=[])):\"object\"===typeof k&&null!==k&&k.$$typeof===Ga?k.toString():(f=f||[]).push(l,k))}c&&(f=f||[]).push(\"style\",\nc);var l=f;if(b.updateQueue=l)b.flags|=4}};Ei=function(a,b,c,d){c!==d&&(b.flags|=4)};function Fi(a,b){if(!lh)switch(a.tailMode){case \"hidden\":b=a.tail;for(var c=null;null!==b;)null!==b.alternate&&(c=b),b=b.sibling;null===c?a.tail=null:c.sibling=null;break;case \"collapsed\":c=a.tail;for(var d=null;null!==c;)null!==c.alternate&&(d=c),c=c.sibling;null===d?b||null===a.tail?a.tail=null:a.tail.sibling=null:d.sibling=null}}\nfunction Gi(a,b,c){var d=b.pendingProps;switch(b.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return Ff(b.type)&&Gf(),null;case 3:fh();H(N);H(M);uh();d=b.stateNode;d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null);if(null===a||null===a.child)rh(b)?b.flags|=4:d.hydrate||(b.flags|=256);Ci(b);return null;case 5:hh(b);var e=dh(ch.current);c=b.type;if(null!==a&&null!=b.stateNode)Di(a,b,c,d,e),a.ref!==b.ref&&(b.flags|=128);else{if(!d){if(null===\nb.stateNode)throw Error(y(166));return null}a=dh(ah.current);if(rh(b)){d=b.stateNode;c=b.type;var f=b.memoizedProps;d[wf]=b;d[xf]=f;switch(c){case \"dialog\":G(\"cancel\",d);G(\"close\",d);break;case \"iframe\":case \"object\":case \"embed\":G(\"load\",d);break;case \"video\":case \"audio\":for(a=0;a<Xe.length;a++)G(Xe[a],d);break;case \"source\":G(\"error\",d);break;case \"img\":case \"image\":case \"link\":G(\"error\",d);G(\"load\",d);break;case \"details\":G(\"toggle\",d);break;case \"input\":Za(d,f);G(\"invalid\",d);break;case \"select\":d._wrapperState=\n{wasMultiple:!!f.multiple};G(\"invalid\",d);break;case \"textarea\":hb(d,f),G(\"invalid\",d)}vb(c,f);a=null;for(var g in f)f.hasOwnProperty(g)&&(e=f[g],\"children\"===g?\"string\"===typeof e?d.textContent!==e&&(a=[\"children\",e]):\"number\"===typeof e&&d.textContent!==\"\"+e&&(a=[\"children\",\"\"+e]):ca.hasOwnProperty(g)&&null!=e&&\"onScroll\"===g&&G(\"scroll\",d));switch(c){case \"input\":Va(d);cb(d,f,!0);break;case \"textarea\":Va(d);jb(d);break;case \"select\":case \"option\":break;default:\"function\"===typeof f.onClick&&(d.onclick=\njf)}d=a;b.updateQueue=d;null!==d&&(b.flags|=4)}else{g=9===e.nodeType?e:e.ownerDocument;a===kb.html&&(a=lb(c));a===kb.html?\"script\"===c?(a=g.createElement(\"div\"),a.innerHTML=\"<script>\\x3c/script>\",a=a.removeChild(a.firstChild)):\"string\"===typeof d.is?a=g.createElement(c,{is:d.is}):(a=g.createElement(c),\"select\"===c&&(g=a,d.multiple?g.multiple=!0:d.size&&(g.size=d.size))):a=g.createElementNS(a,c);a[wf]=b;a[xf]=d;Bi(a,b,!1,!1);b.stateNode=a;g=wb(c,d);switch(c){case \"dialog\":G(\"cancel\",a);G(\"close\",a);\ne=d;break;case \"iframe\":case \"object\":case \"embed\":G(\"load\",a);e=d;break;case \"video\":case \"audio\":for(e=0;e<Xe.length;e++)G(Xe[e],a);e=d;break;case \"source\":G(\"error\",a);e=d;break;case \"img\":case \"image\":case \"link\":G(\"error\",a);G(\"load\",a);e=d;break;case \"details\":G(\"toggle\",a);e=d;break;case \"input\":Za(a,d);e=Ya(a,d);G(\"invalid\",a);break;case \"option\":e=eb(a,d);break;case \"select\":a._wrapperState={wasMultiple:!!d.multiple};e=m({},d,{value:void 0});G(\"invalid\",a);break;case \"textarea\":hb(a,d);e=\ngb(a,d);G(\"invalid\",a);break;default:e=d}vb(c,e);var h=e;for(f in h)if(h.hasOwnProperty(f)){var k=h[f];\"style\"===f?tb(a,k):\"dangerouslySetInnerHTML\"===f?(k=k?k.__html:void 0,null!=k&&ob(a,k)):\"children\"===f?\"string\"===typeof k?(\"textarea\"!==c||\"\"!==k)&&pb(a,k):\"number\"===typeof k&&pb(a,\"\"+k):\"suppressContentEditableWarning\"!==f&&\"suppressHydrationWarning\"!==f&&\"autoFocus\"!==f&&(ca.hasOwnProperty(f)?null!=k&&\"onScroll\"===f&&G(\"scroll\",a):null!=k&&qa(a,f,k,g))}switch(c){case \"input\":Va(a);cb(a,d,!1);\nbreak;case \"textarea\":Va(a);jb(a);break;case \"option\":null!=d.value&&a.setAttribute(\"value\",\"\"+Sa(d.value));break;case \"select\":a.multiple=!!d.multiple;f=d.value;null!=f?fb(a,!!d.multiple,f,!1):null!=d.defaultValue&&fb(a,!!d.multiple,d.defaultValue,!0);break;default:\"function\"===typeof e.onClick&&(a.onclick=jf)}mf(c,d)&&(b.flags|=4)}null!==b.ref&&(b.flags|=128)}return null;case 6:if(a&&null!=b.stateNode)Ei(a,b,a.memoizedProps,d);else{if(\"string\"!==typeof d&&null===b.stateNode)throw Error(y(166));\nc=dh(ch.current);dh(ah.current);rh(b)?(d=b.stateNode,c=b.memoizedProps,d[wf]=b,d.nodeValue!==c&&(b.flags|=4)):(d=(9===c.nodeType?c:c.ownerDocument).createTextNode(d),d[wf]=b,b.stateNode=d)}return null;case 13:H(P);d=b.memoizedState;if(0!==(b.flags&64))return b.lanes=c,b;d=null!==d;c=!1;null===a?void 0!==b.memoizedProps.fallback&&rh(b):c=null!==a.memoizedState;if(d&&!c&&0!==(b.mode&2))if(null===a&&!0!==b.memoizedProps.unstable_avoidThisFallback||0!==(P.current&1))0===V&&(V=3);else{if(0===V||3===V)V=\n4;null===U||0===(Dg&134217727)&&0===(Hi&134217727)||Ii(U,W)}if(d||c)b.flags|=4;return null;case 4:return fh(),Ci(b),null===a&&cf(b.stateNode.containerInfo),null;case 10:return rg(b),null;case 17:return Ff(b.type)&&Gf(),null;case 19:H(P);d=b.memoizedState;if(null===d)return null;f=0!==(b.flags&64);g=d.rendering;if(null===g)if(f)Fi(d,!1);else{if(0!==V||null!==a&&0!==(a.flags&64))for(a=b.child;null!==a;){g=ih(a);if(null!==g){b.flags|=64;Fi(d,!1);f=g.updateQueue;null!==f&&(b.updateQueue=f,b.flags|=4);\nnull===d.lastEffect&&(b.firstEffect=null);b.lastEffect=d.lastEffect;d=c;for(c=b.child;null!==c;)f=c,a=d,f.flags&=2,f.nextEffect=null,f.firstEffect=null,f.lastEffect=null,g=f.alternate,null===g?(f.childLanes=0,f.lanes=a,f.child=null,f.memoizedProps=null,f.memoizedState=null,f.updateQueue=null,f.dependencies=null,f.stateNode=null):(f.childLanes=g.childLanes,f.lanes=g.lanes,f.child=g.child,f.memoizedProps=g.memoizedProps,f.memoizedState=g.memoizedState,f.updateQueue=g.updateQueue,f.type=g.type,a=g.dependencies,\nf.dependencies=null===a?null:{lanes:a.lanes,firstContext:a.firstContext}),c=c.sibling;I(P,P.current&1|2);return b.child}a=a.sibling}null!==d.tail&&O()>Ji&&(b.flags|=64,f=!0,Fi(d,!1),b.lanes=33554432)}else{if(!f)if(a=ih(g),null!==a){if(b.flags|=64,f=!0,c=a.updateQueue,null!==c&&(b.updateQueue=c,b.flags|=4),Fi(d,!0),null===d.tail&&\"hidden\"===d.tailMode&&!g.alternate&&!lh)return b=b.lastEffect=d.lastEffect,null!==b&&(b.nextEffect=null),null}else 2*O()-d.renderingStartTime>Ji&&1073741824!==c&&(b.flags|=\n64,f=!0,Fi(d,!1),b.lanes=33554432);d.isBackwards?(g.sibling=b.child,b.child=g):(c=d.last,null!==c?c.sibling=g:b.child=g,d.last=g)}return null!==d.tail?(c=d.tail,d.rendering=c,d.tail=c.sibling,d.lastEffect=b.lastEffect,d.renderingStartTime=O(),c.sibling=null,b=P.current,I(P,f?b&1|2:b&1),c):null;case 23:case 24:return Ki(),null!==a&&null!==a.memoizedState!==(null!==b.memoizedState)&&\"unstable-defer-without-hiding\"!==d.mode&&(b.flags|=4),null}throw Error(y(156,b.tag));}\nfunction Li(a){switch(a.tag){case 1:Ff(a.type)&&Gf();var b=a.flags;return b&4096?(a.flags=b&-4097|64,a):null;case 3:fh();H(N);H(M);uh();b=a.flags;if(0!==(b&64))throw Error(y(285));a.flags=b&-4097|64;return a;case 5:return hh(a),null;case 13:return H(P),b=a.flags,b&4096?(a.flags=b&-4097|64,a):null;case 19:return H(P),null;case 4:return fh(),null;case 10:return rg(a),null;case 23:case 24:return Ki(),null;default:return null}}\nfunction Mi(a,b){try{var c=\"\",d=b;do c+=Qa(d),d=d.return;while(d);var e=c}catch(f){e=\"\\nError generating stack: \"+f.message+\"\\n\"+f.stack}return{value:a,source:b,stack:e}}function Ni(a,b){try{console.error(b.value)}catch(c){setTimeout(function(){throw c;})}}var Oi=\"function\"===typeof WeakMap?WeakMap:Map;function Pi(a,b,c){c=zg(-1,c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){Qi||(Qi=!0,Ri=d);Ni(a,b)};return c}\nfunction Si(a,b,c){c=zg(-1,c);c.tag=3;var d=a.type.getDerivedStateFromError;if(\"function\"===typeof d){var e=b.value;c.payload=function(){Ni(a,b);return d(e)}}var f=a.stateNode;null!==f&&\"function\"===typeof f.componentDidCatch&&(c.callback=function(){\"function\"!==typeof d&&(null===Ti?Ti=new Set([this]):Ti.add(this),Ni(a,b));var c=b.stack;this.componentDidCatch(b.value,{componentStack:null!==c?c:\"\"})});return c}var Ui=\"function\"===typeof WeakSet?WeakSet:Set;\nfunction Vi(a){var b=a.ref;if(null!==b)if(\"function\"===typeof b)try{b(null)}catch(c){Wi(a,c)}else b.current=null}function Xi(a,b){switch(b.tag){case 0:case 11:case 15:case 22:return;case 1:if(b.flags&256&&null!==a){var c=a.memoizedProps,d=a.memoizedState;a=b.stateNode;b=a.getSnapshotBeforeUpdate(b.elementType===b.type?c:lg(b.type,c),d);a.__reactInternalSnapshotBeforeUpdate=b}return;case 3:b.flags&256&&qf(b.stateNode.containerInfo);return;case 5:case 6:case 4:case 17:return}throw Error(y(163));}\nfunction Yi(a,b,c){switch(c.tag){case 0:case 11:case 15:case 22:b=c.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){a=b=b.next;do{if(3===(a.tag&3)){var d=a.create;a.destroy=d()}a=a.next}while(a!==b)}b=c.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){a=b=b.next;do{var e=a;d=e.next;e=e.tag;0!==(e&4)&&0!==(e&1)&&(Zi(c,a),$i(c,a));a=d}while(a!==b)}return;case 1:a=c.stateNode;c.flags&4&&(null===b?a.componentDidMount():(d=c.elementType===c.type?b.memoizedProps:lg(c.type,b.memoizedProps),a.componentDidUpdate(d,\nb.memoizedState,a.__reactInternalSnapshotBeforeUpdate)));b=c.updateQueue;null!==b&&Eg(c,b,a);return;case 3:b=c.updateQueue;if(null!==b){a=null;if(null!==c.child)switch(c.child.tag){case 5:a=c.child.stateNode;break;case 1:a=c.child.stateNode}Eg(c,b,a)}return;case 5:a=c.stateNode;null===b&&c.flags&4&&mf(c.type,c.memoizedProps)&&a.focus();return;case 6:return;case 4:return;case 12:return;case 13:null===c.memoizedState&&(c=c.alternate,null!==c&&(c=c.memoizedState,null!==c&&(c=c.dehydrated,null!==c&&Cc(c))));\nreturn;case 19:case 17:case 20:case 21:case 23:case 24:return}throw Error(y(163));}\nfunction aj(a,b){for(var c=a;;){if(5===c.tag){var d=c.stateNode;if(b)d=d.style,\"function\"===typeof d.setProperty?d.setProperty(\"display\",\"none\",\"important\"):d.display=\"none\";else{d=c.stateNode;var e=c.memoizedProps.style;e=void 0!==e&&null!==e&&e.hasOwnProperty(\"display\")?e.display:null;d.style.display=sb(\"display\",e)}}else if(6===c.tag)c.stateNode.nodeValue=b?\"\":c.memoizedProps;else if((23!==c.tag&&24!==c.tag||null===c.memoizedState||c===a)&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===\na)break;for(;null===c.sibling;){if(null===c.return||c.return===a)return;c=c.return}c.sibling.return=c.return;c=c.sibling}}\nfunction bj(a,b){if(Mf&&\"function\"===typeof Mf.onCommitFiberUnmount)try{Mf.onCommitFiberUnmount(Lf,b)}catch(f){}switch(b.tag){case 0:case 11:case 14:case 15:case 22:a=b.updateQueue;if(null!==a&&(a=a.lastEffect,null!==a)){var c=a=a.next;do{var d=c,e=d.destroy;d=d.tag;if(void 0!==e)if(0!==(d&4))Zi(b,c);else{d=b;try{e()}catch(f){Wi(d,f)}}c=c.next}while(c!==a)}break;case 1:Vi(b);a=b.stateNode;if(\"function\"===typeof a.componentWillUnmount)try{a.props=b.memoizedProps,a.state=b.memoizedState,a.componentWillUnmount()}catch(f){Wi(b,\nf)}break;case 5:Vi(b);break;case 4:cj(a,b)}}function dj(a){a.alternate=null;a.child=null;a.dependencies=null;a.firstEffect=null;a.lastEffect=null;a.memoizedProps=null;a.memoizedState=null;a.pendingProps=null;a.return=null;a.updateQueue=null}function ej(a){return 5===a.tag||3===a.tag||4===a.tag}\nfunction fj(a){a:{for(var b=a.return;null!==b;){if(ej(b))break a;b=b.return}throw Error(y(160));}var c=b;b=c.stateNode;switch(c.tag){case 5:var d=!1;break;case 3:b=b.containerInfo;d=!0;break;case 4:b=b.containerInfo;d=!0;break;default:throw Error(y(161));}c.flags&16&&(pb(b,\"\"),c.flags&=-17);a:b:for(c=a;;){for(;null===c.sibling;){if(null===c.return||ej(c.return)){c=null;break a}c=c.return}c.sibling.return=c.return;for(c=c.sibling;5!==c.tag&&6!==c.tag&&18!==c.tag;){if(c.flags&2)continue b;if(null===\nc.child||4===c.tag)continue b;else c.child.return=c,c=c.child}if(!(c.flags&2)){c=c.stateNode;break a}}d?gj(a,c,b):hj(a,c,b)}\nfunction gj(a,b,c){var d=a.tag,e=5===d||6===d;if(e)a=e?a.stateNode:a.stateNode.instance,b?8===c.nodeType?c.parentNode.insertBefore(a,b):c.insertBefore(a,b):(8===c.nodeType?(b=c.parentNode,b.insertBefore(a,c)):(b=c,b.appendChild(a)),c=c._reactRootContainer,null!==c&&void 0!==c||null!==b.onclick||(b.onclick=jf));else if(4!==d&&(a=a.child,null!==a))for(gj(a,b,c),a=a.sibling;null!==a;)gj(a,b,c),a=a.sibling}\nfunction hj(a,b,c){var d=a.tag,e=5===d||6===d;if(e)a=e?a.stateNode:a.stateNode.instance,b?c.insertBefore(a,b):c.appendChild(a);else if(4!==d&&(a=a.child,null!==a))for(hj(a,b,c),a=a.sibling;null!==a;)hj(a,b,c),a=a.sibling}\nfunction cj(a,b){for(var c=b,d=!1,e,f;;){if(!d){d=c.return;a:for(;;){if(null===d)throw Error(y(160));e=d.stateNode;switch(d.tag){case 5:f=!1;break a;case 3:e=e.containerInfo;f=!0;break a;case 4:e=e.containerInfo;f=!0;break a}d=d.return}d=!0}if(5===c.tag||6===c.tag){a:for(var g=a,h=c,k=h;;)if(bj(g,k),null!==k.child&&4!==k.tag)k.child.return=k,k=k.child;else{if(k===h)break a;for(;null===k.sibling;){if(null===k.return||k.return===h)break a;k=k.return}k.sibling.return=k.return;k=k.sibling}f?(g=e,h=c.stateNode,\n8===g.nodeType?g.parentNode.removeChild(h):g.removeChild(h)):e.removeChild(c.stateNode)}else if(4===c.tag){if(null!==c.child){e=c.stateNode.containerInfo;f=!0;c.child.return=c;c=c.child;continue}}else if(bj(a,c),null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return;4===c.tag&&(d=!1)}c.sibling.return=c.return;c=c.sibling}}\nfunction ij(a,b){switch(b.tag){case 0:case 11:case 14:case 15:case 22:var c=b.updateQueue;c=null!==c?c.lastEffect:null;if(null!==c){var d=c=c.next;do 3===(d.tag&3)&&(a=d.destroy,d.destroy=void 0,void 0!==a&&a()),d=d.next;while(d!==c)}return;case 1:return;case 5:c=b.stateNode;if(null!=c){d=b.memoizedProps;var e=null!==a?a.memoizedProps:d;a=b.type;var f=b.updateQueue;b.updateQueue=null;if(null!==f){c[xf]=d;\"input\"===a&&\"radio\"===d.type&&null!=d.name&&$a(c,d);wb(a,e);b=wb(a,d);for(e=0;e<f.length;e+=\n2){var g=f[e],h=f[e+1];\"style\"===g?tb(c,h):\"dangerouslySetInnerHTML\"===g?ob(c,h):\"children\"===g?pb(c,h):qa(c,g,h,b)}switch(a){case \"input\":ab(c,d);break;case \"textarea\":ib(c,d);break;case \"select\":a=c._wrapperState.wasMultiple,c._wrapperState.wasMultiple=!!d.multiple,f=d.value,null!=f?fb(c,!!d.multiple,f,!1):a!==!!d.multiple&&(null!=d.defaultValue?fb(c,!!d.multiple,d.defaultValue,!0):fb(c,!!d.multiple,d.multiple?[]:\"\",!1))}}}return;case 6:if(null===b.stateNode)throw Error(y(162));b.stateNode.nodeValue=\nb.memoizedProps;return;case 3:c=b.stateNode;c.hydrate&&(c.hydrate=!1,Cc(c.containerInfo));return;case 12:return;case 13:null!==b.memoizedState&&(jj=O(),aj(b.child,!0));kj(b);return;case 19:kj(b);return;case 17:return;case 23:case 24:aj(b,null!==b.memoizedState);return}throw Error(y(163));}function kj(a){var b=a.updateQueue;if(null!==b){a.updateQueue=null;var c=a.stateNode;null===c&&(c=a.stateNode=new Ui);b.forEach(function(b){var d=lj.bind(null,a,b);c.has(b)||(c.add(b),b.then(d,d))})}}\nfunction mj(a,b){return null!==a&&(a=a.memoizedState,null===a||null!==a.dehydrated)?(b=b.memoizedState,null!==b&&null===b.dehydrated):!1}var nj=Math.ceil,oj=ra.ReactCurrentDispatcher,pj=ra.ReactCurrentOwner,X=0,U=null,Y=null,W=0,qj=0,rj=Bf(0),V=0,sj=null,tj=0,Dg=0,Hi=0,uj=0,vj=null,jj=0,Ji=Infinity;function wj(){Ji=O()+500}var Z=null,Qi=!1,Ri=null,Ti=null,xj=!1,yj=null,zj=90,Aj=[],Bj=[],Cj=null,Dj=0,Ej=null,Fj=-1,Gj=0,Hj=0,Ij=null,Jj=!1;function Hg(){return 0!==(X&48)?O():-1!==Fj?Fj:Fj=O()}\nfunction Ig(a){a=a.mode;if(0===(a&2))return 1;if(0===(a&4))return 99===eg()?1:2;0===Gj&&(Gj=tj);if(0!==kg.transition){0!==Hj&&(Hj=null!==vj?vj.pendingLanes:0);a=Gj;var b=4186112&~Hj;b&=-b;0===b&&(a=4186112&~a,b=a&-a,0===b&&(b=8192));return b}a=eg();0!==(X&4)&&98===a?a=Xc(12,Gj):(a=Sc(a),a=Xc(a,Gj));return a}\nfunction Jg(a,b,c){if(50<Dj)throw Dj=0,Ej=null,Error(y(185));a=Kj(a,b);if(null===a)return null;$c(a,b,c);a===U&&(Hi|=b,4===V&&Ii(a,W));var d=eg();1===b?0!==(X&8)&&0===(X&48)?Lj(a):(Mj(a,c),0===X&&(wj(),ig())):(0===(X&4)||98!==d&&99!==d||(null===Cj?Cj=new Set([a]):Cj.add(a)),Mj(a,c));vj=a}function Kj(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);c=a;for(a=a.return;null!==a;)a.childLanes|=b,c=a.alternate,null!==c&&(c.childLanes|=b),c=a,a=a.return;return 3===c.tag?c.stateNode:null}\nfunction Mj(a,b){for(var c=a.callbackNode,d=a.suspendedLanes,e=a.pingedLanes,f=a.expirationTimes,g=a.pendingLanes;0<g;){var h=31-Vc(g),k=1<<h,l=f[h];if(-1===l){if(0===(k&d)||0!==(k&e)){l=b;Rc(k);var n=F;f[h]=10<=n?l+250:6<=n?l+5E3:-1}}else l<=b&&(a.expiredLanes|=k);g&=~k}d=Uc(a,a===U?W:0);b=F;if(0===d)null!==c&&(c!==Zf&&Pf(c),a.callbackNode=null,a.callbackPriority=0);else{if(null!==c){if(a.callbackPriority===b)return;c!==Zf&&Pf(c)}15===b?(c=Lj.bind(null,a),null===ag?(ag=[c],bg=Of(Uf,jg)):ag.push(c),\nc=Zf):14===b?c=hg(99,Lj.bind(null,a)):(c=Tc(b),c=hg(c,Nj.bind(null,a)));a.callbackPriority=b;a.callbackNode=c}}\nfunction Nj(a){Fj=-1;Hj=Gj=0;if(0!==(X&48))throw Error(y(327));var b=a.callbackNode;if(Oj()&&a.callbackNode!==b)return null;var c=Uc(a,a===U?W:0);if(0===c)return null;var d=c;var e=X;X|=16;var f=Pj();if(U!==a||W!==d)wj(),Qj(a,d);do try{Rj();break}catch(h){Sj(a,h)}while(1);qg();oj.current=f;X=e;null!==Y?d=0:(U=null,W=0,d=V);if(0!==(tj&Hi))Qj(a,0);else if(0!==d){2===d&&(X|=64,a.hydrate&&(a.hydrate=!1,qf(a.containerInfo)),c=Wc(a),0!==c&&(d=Tj(a,c)));if(1===d)throw b=sj,Qj(a,0),Ii(a,c),Mj(a,O()),b;a.finishedWork=\na.current.alternate;a.finishedLanes=c;switch(d){case 0:case 1:throw Error(y(345));case 2:Uj(a);break;case 3:Ii(a,c);if((c&62914560)===c&&(d=jj+500-O(),10<d)){if(0!==Uc(a,0))break;e=a.suspendedLanes;if((e&c)!==c){Hg();a.pingedLanes|=a.suspendedLanes&e;break}a.timeoutHandle=of(Uj.bind(null,a),d);break}Uj(a);break;case 4:Ii(a,c);if((c&4186112)===c)break;d=a.eventTimes;for(e=-1;0<c;){var g=31-Vc(c);f=1<<g;g=d[g];g>e&&(e=g);c&=~f}c=e;c=O()-c;c=(120>c?120:480>c?480:1080>c?1080:1920>c?1920:3E3>c?3E3:4320>\nc?4320:1960*nj(c/1960))-c;if(10<c){a.timeoutHandle=of(Uj.bind(null,a),c);break}Uj(a);break;case 5:Uj(a);break;default:throw Error(y(329));}}Mj(a,O());return a.callbackNode===b?Nj.bind(null,a):null}function Ii(a,b){b&=~uj;b&=~Hi;a.suspendedLanes|=b;a.pingedLanes&=~b;for(a=a.expirationTimes;0<b;){var c=31-Vc(b),d=1<<c;a[c]=-1;b&=~d}}\nfunction Lj(a){if(0!==(X&48))throw Error(y(327));Oj();if(a===U&&0!==(a.expiredLanes&W)){var b=W;var c=Tj(a,b);0!==(tj&Hi)&&(b=Uc(a,b),c=Tj(a,b))}else b=Uc(a,0),c=Tj(a,b);0!==a.tag&&2===c&&(X|=64,a.hydrate&&(a.hydrate=!1,qf(a.containerInfo)),b=Wc(a),0!==b&&(c=Tj(a,b)));if(1===c)throw c=sj,Qj(a,0),Ii(a,b),Mj(a,O()),c;a.finishedWork=a.current.alternate;a.finishedLanes=b;Uj(a);Mj(a,O());return null}\nfunction Vj(){if(null!==Cj){var a=Cj;Cj=null;a.forEach(function(a){a.expiredLanes|=24&a.pendingLanes;Mj(a,O())})}ig()}function Wj(a,b){var c=X;X|=1;try{return a(b)}finally{X=c,0===X&&(wj(),ig())}}function Xj(a,b){var c=X;X&=-2;X|=8;try{return a(b)}finally{X=c,0===X&&(wj(),ig())}}function ni(a,b){I(rj,qj);qj|=b;tj|=b}function Ki(){qj=rj.current;H(rj)}\nfunction Qj(a,b){a.finishedWork=null;a.finishedLanes=0;var c=a.timeoutHandle;-1!==c&&(a.timeoutHandle=-1,pf(c));if(null!==Y)for(c=Y.return;null!==c;){var d=c;switch(d.tag){case 1:d=d.type.childContextTypes;null!==d&&void 0!==d&&Gf();break;case 3:fh();H(N);H(M);uh();break;case 5:hh(d);break;case 4:fh();break;case 13:H(P);break;case 19:H(P);break;case 10:rg(d);break;case 23:case 24:Ki()}c=c.return}U=a;Y=Tg(a.current,null);W=qj=tj=b;V=0;sj=null;uj=Hi=Dg=0}\nfunction Sj(a,b){do{var c=Y;try{qg();vh.current=Gh;if(yh){for(var d=R.memoizedState;null!==d;){var e=d.queue;null!==e&&(e.pending=null);d=d.next}yh=!1}xh=0;T=S=R=null;zh=!1;pj.current=null;if(null===c||null===c.return){V=1;sj=b;Y=null;break}a:{var f=a,g=c.return,h=c,k=b;b=W;h.flags|=2048;h.firstEffect=h.lastEffect=null;if(null!==k&&\"object\"===typeof k&&\"function\"===typeof k.then){var l=k;if(0===(h.mode&2)){var n=h.alternate;n?(h.updateQueue=n.updateQueue,h.memoizedState=n.memoizedState,h.lanes=n.lanes):\n(h.updateQueue=null,h.memoizedState=null)}var A=0!==(P.current&1),p=g;do{var C;if(C=13===p.tag){var x=p.memoizedState;if(null!==x)C=null!==x.dehydrated?!0:!1;else{var w=p.memoizedProps;C=void 0===w.fallback?!1:!0!==w.unstable_avoidThisFallback?!0:A?!1:!0}}if(C){var z=p.updateQueue;if(null===z){var u=new Set;u.add(l);p.updateQueue=u}else z.add(l);if(0===(p.mode&2)){p.flags|=64;h.flags|=16384;h.flags&=-2981;if(1===h.tag)if(null===h.alternate)h.tag=17;else{var t=zg(-1,1);t.tag=2;Ag(h,t)}h.lanes|=1;break a}k=\nvoid 0;h=b;var q=f.pingCache;null===q?(q=f.pingCache=new Oi,k=new Set,q.set(l,k)):(k=q.get(l),void 0===k&&(k=new Set,q.set(l,k)));if(!k.has(h)){k.add(h);var v=Yj.bind(null,f,l,h);l.then(v,v)}p.flags|=4096;p.lanes=b;break a}p=p.return}while(null!==p);k=Error((Ra(h.type)||\"A React component\")+\" suspended while rendering, but no fallback UI was specified.\\n\\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.\")}5!==V&&(V=2);k=Mi(k,h);p=\ng;do{switch(p.tag){case 3:f=k;p.flags|=4096;b&=-b;p.lanes|=b;var J=Pi(p,f,b);Bg(p,J);break a;case 1:f=k;var K=p.type,Q=p.stateNode;if(0===(p.flags&64)&&(\"function\"===typeof K.getDerivedStateFromError||null!==Q&&\"function\"===typeof Q.componentDidCatch&&(null===Ti||!Ti.has(Q)))){p.flags|=4096;b&=-b;p.lanes|=b;var L=Si(p,f,b);Bg(p,L);break a}}p=p.return}while(null!==p)}Zj(c)}catch(va){b=va;Y===c&&null!==c&&(Y=c=c.return);continue}break}while(1)}\nfunction Pj(){var a=oj.current;oj.current=Gh;return null===a?Gh:a}function Tj(a,b){var c=X;X|=16;var d=Pj();U===a&&W===b||Qj(a,b);do try{ak();break}catch(e){Sj(a,e)}while(1);qg();X=c;oj.current=d;if(null!==Y)throw Error(y(261));U=null;W=0;return V}function ak(){for(;null!==Y;)bk(Y)}function Rj(){for(;null!==Y&&!Qf();)bk(Y)}function bk(a){var b=ck(a.alternate,a,qj);a.memoizedProps=a.pendingProps;null===b?Zj(a):Y=b;pj.current=null}\nfunction Zj(a){var b=a;do{var c=b.alternate;a=b.return;if(0===(b.flags&2048)){c=Gi(c,b,qj);if(null!==c){Y=c;return}c=b;if(24!==c.tag&&23!==c.tag||null===c.memoizedState||0!==(qj&1073741824)||0===(c.mode&4)){for(var d=0,e=c.child;null!==e;)d|=e.lanes|e.childLanes,e=e.sibling;c.childLanes=d}null!==a&&0===(a.flags&2048)&&(null===a.firstEffect&&(a.firstEffect=b.firstEffect),null!==b.lastEffect&&(null!==a.lastEffect&&(a.lastEffect.nextEffect=b.firstEffect),a.lastEffect=b.lastEffect),1<b.flags&&(null!==\na.lastEffect?a.lastEffect.nextEffect=b:a.firstEffect=b,a.lastEffect=b))}else{c=Li(b);if(null!==c){c.flags&=2047;Y=c;return}null!==a&&(a.firstEffect=a.lastEffect=null,a.flags|=2048)}b=b.sibling;if(null!==b){Y=b;return}Y=b=a}while(null!==b);0===V&&(V=5)}function Uj(a){var b=eg();gg(99,dk.bind(null,a,b));return null}\nfunction dk(a,b){do Oj();while(null!==yj);if(0!==(X&48))throw Error(y(327));var c=a.finishedWork;if(null===c)return null;a.finishedWork=null;a.finishedLanes=0;if(c===a.current)throw Error(y(177));a.callbackNode=null;var d=c.lanes|c.childLanes,e=d,f=a.pendingLanes&~e;a.pendingLanes=e;a.suspendedLanes=0;a.pingedLanes=0;a.expiredLanes&=e;a.mutableReadLanes&=e;a.entangledLanes&=e;e=a.entanglements;for(var g=a.eventTimes,h=a.expirationTimes;0<f;){var k=31-Vc(f),l=1<<k;e[k]=0;g[k]=-1;h[k]=-1;f&=~l}null!==\nCj&&0===(d&24)&&Cj.has(a)&&Cj.delete(a);a===U&&(Y=U=null,W=0);1<c.flags?null!==c.lastEffect?(c.lastEffect.nextEffect=c,d=c.firstEffect):d=c:d=c.firstEffect;if(null!==d){e=X;X|=32;pj.current=null;kf=fd;g=Ne();if(Oe(g)){if(\"selectionStart\"in g)h={start:g.selectionStart,end:g.selectionEnd};else a:if(h=(h=g.ownerDocument)&&h.defaultView||window,(l=h.getSelection&&h.getSelection())&&0!==l.rangeCount){h=l.anchorNode;f=l.anchorOffset;k=l.focusNode;l=l.focusOffset;try{h.nodeType,k.nodeType}catch(va){h=null;\nbreak a}var n=0,A=-1,p=-1,C=0,x=0,w=g,z=null;b:for(;;){for(var u;;){w!==h||0!==f&&3!==w.nodeType||(A=n+f);w!==k||0!==l&&3!==w.nodeType||(p=n+l);3===w.nodeType&&(n+=w.nodeValue.length);if(null===(u=w.firstChild))break;z=w;w=u}for(;;){if(w===g)break b;z===h&&++C===f&&(A=n);z===k&&++x===l&&(p=n);if(null!==(u=w.nextSibling))break;w=z;z=w.parentNode}w=u}h=-1===A||-1===p?null:{start:A,end:p}}else h=null;h=h||{start:0,end:0}}else h=null;lf={focusedElem:g,selectionRange:h};fd=!1;Ij=null;Jj=!1;Z=d;do try{ek()}catch(va){if(null===\nZ)throw Error(y(330));Wi(Z,va);Z=Z.nextEffect}while(null!==Z);Ij=null;Z=d;do try{for(g=a;null!==Z;){var t=Z.flags;t&16&&pb(Z.stateNode,\"\");if(t&128){var q=Z.alternate;if(null!==q){var v=q.ref;null!==v&&(\"function\"===typeof v?v(null):v.current=null)}}switch(t&1038){case 2:fj(Z);Z.flags&=-3;break;case 6:fj(Z);Z.flags&=-3;ij(Z.alternate,Z);break;case 1024:Z.flags&=-1025;break;case 1028:Z.flags&=-1025;ij(Z.alternate,Z);break;case 4:ij(Z.alternate,Z);break;case 8:h=Z;cj(g,h);var J=h.alternate;dj(h);null!==\nJ&&dj(J)}Z=Z.nextEffect}}catch(va){if(null===Z)throw Error(y(330));Wi(Z,va);Z=Z.nextEffect}while(null!==Z);v=lf;q=Ne();t=v.focusedElem;g=v.selectionRange;if(q!==t&&t&&t.ownerDocument&&Me(t.ownerDocument.documentElement,t)){null!==g&&Oe(t)&&(q=g.start,v=g.end,void 0===v&&(v=q),\"selectionStart\"in t?(t.selectionStart=q,t.selectionEnd=Math.min(v,t.value.length)):(v=(q=t.ownerDocument||document)&&q.defaultView||window,v.getSelection&&(v=v.getSelection(),h=t.textContent.length,J=Math.min(g.start,h),g=void 0===\ng.end?J:Math.min(g.end,h),!v.extend&&J>g&&(h=g,g=J,J=h),h=Le(t,J),f=Le(t,g),h&&f&&(1!==v.rangeCount||v.anchorNode!==h.node||v.anchorOffset!==h.offset||v.focusNode!==f.node||v.focusOffset!==f.offset)&&(q=q.createRange(),q.setStart(h.node,h.offset),v.removeAllRanges(),J>g?(v.addRange(q),v.extend(f.node,f.offset)):(q.setEnd(f.node,f.offset),v.addRange(q))))));q=[];for(v=t;v=v.parentNode;)1===v.nodeType&&q.push({element:v,left:v.scrollLeft,top:v.scrollTop});\"function\"===typeof t.focus&&t.focus();for(t=\n0;t<q.length;t++)v=q[t],v.element.scrollLeft=v.left,v.element.scrollTop=v.top}fd=!!kf;lf=kf=null;a.current=c;Z=d;do try{for(t=a;null!==Z;){var K=Z.flags;K&36&&Yi(t,Z.alternate,Z);if(K&128){q=void 0;var Q=Z.ref;if(null!==Q){var L=Z.stateNode;switch(Z.tag){case 5:q=L;break;default:q=L}\"function\"===typeof Q?Q(q):Q.current=q}}Z=Z.nextEffect}}catch(va){if(null===Z)throw Error(y(330));Wi(Z,va);Z=Z.nextEffect}while(null!==Z);Z=null;$f();X=e}else a.current=c;if(xj)xj=!1,yj=a,zj=b;else for(Z=d;null!==Z;)b=\nZ.nextEffect,Z.nextEffect=null,Z.flags&8&&(K=Z,K.sibling=null,K.stateNode=null),Z=b;d=a.pendingLanes;0===d&&(Ti=null);1===d?a===Ej?Dj++:(Dj=0,Ej=a):Dj=0;c=c.stateNode;if(Mf&&\"function\"===typeof Mf.onCommitFiberRoot)try{Mf.onCommitFiberRoot(Lf,c,void 0,64===(c.current.flags&64))}catch(va){}Mj(a,O());if(Qi)throw Qi=!1,a=Ri,Ri=null,a;if(0!==(X&8))return null;ig();return null}\nfunction ek(){for(;null!==Z;){var a=Z.alternate;Jj||null===Ij||(0!==(Z.flags&8)?dc(Z,Ij)&&(Jj=!0):13===Z.tag&&mj(a,Z)&&dc(Z,Ij)&&(Jj=!0));var b=Z.flags;0!==(b&256)&&Xi(a,Z);0===(b&512)||xj||(xj=!0,hg(97,function(){Oj();return null}));Z=Z.nextEffect}}function Oj(){if(90!==zj){var a=97<zj?97:zj;zj=90;return gg(a,fk)}return!1}function $i(a,b){Aj.push(b,a);xj||(xj=!0,hg(97,function(){Oj();return null}))}function Zi(a,b){Bj.push(b,a);xj||(xj=!0,hg(97,function(){Oj();return null}))}\nfunction fk(){if(null===yj)return!1;var a=yj;yj=null;if(0!==(X&48))throw Error(y(331));var b=X;X|=32;var c=Bj;Bj=[];for(var d=0;d<c.length;d+=2){var e=c[d],f=c[d+1],g=e.destroy;e.destroy=void 0;if(\"function\"===typeof g)try{g()}catch(k){if(null===f)throw Error(y(330));Wi(f,k)}}c=Aj;Aj=[];for(d=0;d<c.length;d+=2){e=c[d];f=c[d+1];try{var h=e.create;e.destroy=h()}catch(k){if(null===f)throw Error(y(330));Wi(f,k)}}for(h=a.current.firstEffect;null!==h;)a=h.nextEffect,h.nextEffect=null,h.flags&8&&(h.sibling=\nnull,h.stateNode=null),h=a;X=b;ig();return!0}function gk(a,b,c){b=Mi(c,b);b=Pi(a,b,1);Ag(a,b);b=Hg();a=Kj(a,1);null!==a&&($c(a,1,b),Mj(a,b))}\nfunction Wi(a,b){if(3===a.tag)gk(a,a,b);else for(var c=a.return;null!==c;){if(3===c.tag){gk(c,a,b);break}else if(1===c.tag){var d=c.stateNode;if(\"function\"===typeof c.type.getDerivedStateFromError||\"function\"===typeof d.componentDidCatch&&(null===Ti||!Ti.has(d))){a=Mi(b,a);var e=Si(c,a,1);Ag(c,e);e=Hg();c=Kj(c,1);if(null!==c)$c(c,1,e),Mj(c,e);else if(\"function\"===typeof d.componentDidCatch&&(null===Ti||!Ti.has(d)))try{d.componentDidCatch(b,a)}catch(f){}break}}c=c.return}}\nfunction Yj(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);b=Hg();a.pingedLanes|=a.suspendedLanes&c;U===a&&(W&c)===c&&(4===V||3===V&&(W&62914560)===W&&500>O()-jj?Qj(a,0):uj|=c);Mj(a,b)}function lj(a,b){var c=a.stateNode;null!==c&&c.delete(b);b=0;0===b&&(b=a.mode,0===(b&2)?b=1:0===(b&4)?b=99===eg()?1:2:(0===Gj&&(Gj=tj),b=Yc(62914560&~Gj),0===b&&(b=4194304)));c=Hg();a=Kj(a,b);null!==a&&($c(a,b,c),Mj(a,c))}var ck;\nck=function(a,b,c){var d=b.lanes;if(null!==a)if(a.memoizedProps!==b.pendingProps||N.current)ug=!0;else if(0!==(c&d))ug=0!==(a.flags&16384)?!0:!1;else{ug=!1;switch(b.tag){case 3:ri(b);sh();break;case 5:gh(b);break;case 1:Ff(b.type)&&Jf(b);break;case 4:eh(b,b.stateNode.containerInfo);break;case 10:d=b.memoizedProps.value;var e=b.type._context;I(mg,e._currentValue);e._currentValue=d;break;case 13:if(null!==b.memoizedState){if(0!==(c&b.child.childLanes))return ti(a,b,c);I(P,P.current&1);b=hi(a,b,c);return null!==\nb?b.sibling:null}I(P,P.current&1);break;case 19:d=0!==(c&b.childLanes);if(0!==(a.flags&64)){if(d)return Ai(a,b,c);b.flags|=64}e=b.memoizedState;null!==e&&(e.rendering=null,e.tail=null,e.lastEffect=null);I(P,P.current);if(d)break;else return null;case 23:case 24:return b.lanes=0,mi(a,b,c)}return hi(a,b,c)}else ug=!1;b.lanes=0;switch(b.tag){case 2:d=b.type;null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2);a=b.pendingProps;e=Ef(b,M.current);tg(b,c);e=Ch(null,b,d,a,e,c);b.flags|=1;if(\"object\"===\ntypeof e&&null!==e&&\"function\"===typeof e.render&&void 0===e.$$typeof){b.tag=1;b.memoizedState=null;b.updateQueue=null;if(Ff(d)){var f=!0;Jf(b)}else f=!1;b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null;xg(b);var g=d.getDerivedStateFromProps;\"function\"===typeof g&&Gg(b,d,g,a);e.updater=Kg;b.stateNode=e;e._reactInternals=b;Og(b,d,a,c);b=qi(null,b,d,!0,f,c)}else b.tag=0,fi(null,b,e,c),b=b.child;return b;case 16:e=b.elementType;a:{null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2);\na=b.pendingProps;f=e._init;e=f(e._payload);b.type=e;f=b.tag=hk(e);a=lg(e,a);switch(f){case 0:b=li(null,b,e,a,c);break a;case 1:b=pi(null,b,e,a,c);break a;case 11:b=gi(null,b,e,a,c);break a;case 14:b=ii(null,b,e,lg(e.type,a),d,c);break a}throw Error(y(306,e,\"\"));}return b;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:lg(d,e),li(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:lg(d,e),pi(a,b,d,e,c);case 3:ri(b);d=b.updateQueue;if(null===a||null===d)throw Error(y(282));\nd=b.pendingProps;e=b.memoizedState;e=null!==e?e.element:null;yg(a,b);Cg(b,d,null,c);d=b.memoizedState.element;if(d===e)sh(),b=hi(a,b,c);else{e=b.stateNode;if(f=e.hydrate)kh=rf(b.stateNode.containerInfo.firstChild),jh=b,f=lh=!0;if(f){a=e.mutableSourceEagerHydrationData;if(null!=a)for(e=0;e<a.length;e+=2)f=a[e],f._workInProgressVersionPrimary=a[e+1],th.push(f);c=Zg(b,null,d,c);for(b.child=c;c;)c.flags=c.flags&-3|1024,c=c.sibling}else fi(a,b,d,c),sh();b=b.child}return b;case 5:return gh(b),null===a&&\nph(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,g=e.children,nf(d,e)?g=null:null!==f&&nf(d,f)&&(b.flags|=16),oi(a,b),fi(a,b,g,c),b.child;case 6:return null===a&&ph(b),null;case 13:return ti(a,b,c);case 4:return eh(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Yg(b,null,d,c):fi(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:lg(d,e),gi(a,b,d,e,c);case 7:return fi(a,b,b.pendingProps,c),b.child;case 8:return fi(a,b,b.pendingProps.children,\nc),b.child;case 12:return fi(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;g=b.memoizedProps;f=e.value;var h=b.type._context;I(mg,h._currentValue);h._currentValue=f;if(null!==g)if(h=g.value,f=He(h,f)?0:(\"function\"===typeof d._calculateChangedBits?d._calculateChangedBits(h,f):1073741823)|0,0===f){if(g.children===e.children&&!N.current){b=hi(a,b,c);break a}}else for(h=b.child,null!==h&&(h.return=b);null!==h;){var k=h.dependencies;if(null!==k){g=h.child;for(var l=\nk.firstContext;null!==l;){if(l.context===d&&0!==(l.observedBits&f)){1===h.tag&&(l=zg(-1,c&-c),l.tag=2,Ag(h,l));h.lanes|=c;l=h.alternate;null!==l&&(l.lanes|=c);sg(h.return,c);k.lanes|=c;break}l=l.next}}else g=10===h.tag?h.type===b.type?null:h.child:h.child;if(null!==g)g.return=h;else for(g=h;null!==g;){if(g===b){g=null;break}h=g.sibling;if(null!==h){h.return=g.return;g=h;break}g=g.return}h=g}fi(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,f=b.pendingProps,d=f.children,tg(b,c),e=vg(e,\nf.unstable_observedBits),d=d(e),b.flags|=1,fi(a,b,d,c),b.child;case 14:return e=b.type,f=lg(e,b.pendingProps),f=lg(e.type,f),ii(a,b,e,f,d,c);case 15:return ki(a,b,b.type,b.pendingProps,d,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:lg(d,e),null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2),b.tag=1,Ff(d)?(a=!0,Jf(b)):a=!1,tg(b,c),Mg(b,d,e),Og(b,d,e,c),qi(null,b,d,!0,a,c);case 19:return Ai(a,b,c);case 23:return mi(a,b,c);case 24:return mi(a,b,c)}throw Error(y(156,b.tag));\n};function ik(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.flags=0;this.lastEffect=this.firstEffect=this.nextEffect=null;this.childLanes=this.lanes=0;this.alternate=null}function nh(a,b,c,d){return new ik(a,b,c,d)}function ji(a){a=a.prototype;return!(!a||!a.isReactComponent)}\nfunction hk(a){if(\"function\"===typeof a)return ji(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===Aa)return 11;if(a===Da)return 14}return 2}\nfunction Tg(a,b){var c=a.alternate;null===c?(c=nh(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.type=a.type,c.flags=0,c.nextEffect=null,c.firstEffect=null,c.lastEffect=null);c.childLanes=a.childLanes;c.lanes=a.lanes;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;b=a.dependencies;c.dependencies=null===b?null:{lanes:b.lanes,firstContext:b.firstContext};\nc.sibling=a.sibling;c.index=a.index;c.ref=a.ref;return c}\nfunction Vg(a,b,c,d,e,f){var g=2;d=a;if(\"function\"===typeof a)ji(a)&&(g=1);else if(\"string\"===typeof a)g=5;else a:switch(a){case ua:return Xg(c.children,e,f,b);case Ha:g=8;e|=16;break;case wa:g=8;e|=1;break;case xa:return a=nh(12,c,b,e|8),a.elementType=xa,a.type=xa,a.lanes=f,a;case Ba:return a=nh(13,c,b,e),a.type=Ba,a.elementType=Ba,a.lanes=f,a;case Ca:return a=nh(19,c,b,e),a.elementType=Ca,a.lanes=f,a;case Ia:return vi(c,e,f,b);case Ja:return a=nh(24,c,b,e),a.elementType=Ja,a.lanes=f,a;default:if(\"object\"===\ntypeof a&&null!==a)switch(a.$$typeof){case ya:g=10;break a;case za:g=9;break a;case Aa:g=11;break a;case Da:g=14;break a;case Ea:g=16;d=null;break a;case Fa:g=22;break a}throw Error(y(130,null==a?a:typeof a,\"\"));}b=nh(g,c,b,e);b.elementType=a;b.type=d;b.lanes=f;return b}function Xg(a,b,c,d){a=nh(7,a,d,b);a.lanes=c;return a}function vi(a,b,c,d){a=nh(23,a,d,b);a.elementType=Ia;a.lanes=c;return a}function Ug(a,b,c){a=nh(6,a,null,b);a.lanes=c;return a}\nfunction Wg(a,b,c){b=nh(4,null!==a.children?a.children:[],a.key,b);b.lanes=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}\nfunction jk(a,b,c){this.tag=b;this.containerInfo=a;this.finishedWork=this.pingCache=this.current=this.pendingChildren=null;this.timeoutHandle=-1;this.pendingContext=this.context=null;this.hydrate=c;this.callbackNode=null;this.callbackPriority=0;this.eventTimes=Zc(0);this.expirationTimes=Zc(-1);this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0;this.entanglements=Zc(0);this.mutableSourceEagerHydrationData=null}\nfunction kk(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:ta,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}\nfunction lk(a,b,c,d){var e=b.current,f=Hg(),g=Ig(e);a:if(c){c=c._reactInternals;b:{if(Zb(c)!==c||1!==c.tag)throw Error(y(170));var h=c;do{switch(h.tag){case 3:h=h.stateNode.context;break b;case 1:if(Ff(h.type)){h=h.stateNode.__reactInternalMemoizedMergedChildContext;break b}}h=h.return}while(null!==h);throw Error(y(171));}if(1===c.tag){var k=c.type;if(Ff(k)){c=If(c,k,h);break a}}c=h}else c=Cf;null===b.context?b.context=c:b.pendingContext=c;b=zg(f,g);b.payload={element:a};d=void 0===d?null:d;null!==\nd&&(b.callback=d);Ag(e,b);Jg(e,g,f);return g}function mk(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function nk(a,b){a=a.memoizedState;if(null!==a&&null!==a.dehydrated){var c=a.retryLane;a.retryLane=0!==c&&c<b?c:b}}function ok(a,b){nk(a,b);(a=a.alternate)&&nk(a,b)}function pk(){return null}\nfunction qk(a,b,c){var d=null!=c&&null!=c.hydrationOptions&&c.hydrationOptions.mutableSources||null;c=new jk(a,b,null!=c&&!0===c.hydrate);b=nh(3,null,null,2===b?7:1===b?3:0);c.current=b;b.stateNode=c;xg(b);a[ff]=c.current;cf(8===a.nodeType?a.parentNode:a);if(d)for(a=0;a<d.length;a++){b=d[a];var e=b._getVersion;e=e(b._source);null==c.mutableSourceEagerHydrationData?c.mutableSourceEagerHydrationData=[b,e]:c.mutableSourceEagerHydrationData.push(b,e)}this._internalRoot=c}\nqk.prototype.render=function(a){lk(a,this._internalRoot,null,null)};qk.prototype.unmount=function(){var a=this._internalRoot,b=a.containerInfo;lk(null,a,null,function(){b[ff]=null})};function rk(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}\nfunction sk(a,b){b||(b=a?9===a.nodeType?a.documentElement:a.firstChild:null,b=!(!b||1!==b.nodeType||!b.hasAttribute(\"data-reactroot\")));if(!b)for(var c;c=a.lastChild;)a.removeChild(c);return new qk(a,0,b?{hydrate:!0}:void 0)}\nfunction tk(a,b,c,d,e){var f=c._reactRootContainer;if(f){var g=f._internalRoot;if(\"function\"===typeof e){var h=e;e=function(){var a=mk(g);h.call(a)}}lk(b,g,a,e)}else{f=c._reactRootContainer=sk(c,d);g=f._internalRoot;if(\"function\"===typeof e){var k=e;e=function(){var a=mk(g);k.call(a)}}Xj(function(){lk(b,g,a,e)})}return mk(g)}ec=function(a){if(13===a.tag){var b=Hg();Jg(a,4,b);ok(a,4)}};fc=function(a){if(13===a.tag){var b=Hg();Jg(a,67108864,b);ok(a,67108864)}};\ngc=function(a){if(13===a.tag){var b=Hg(),c=Ig(a);Jg(a,c,b);ok(a,c)}};hc=function(a,b){return b()};\nyb=function(a,b,c){switch(b){case \"input\":ab(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Db(d);if(!e)throw Error(y(90));Wa(d);ab(d,e)}}}break;case \"textarea\":ib(a,c);break;case \"select\":b=c.value,null!=b&&fb(a,!!c.multiple,b,!1)}};Gb=Wj;\nHb=function(a,b,c,d,e){var f=X;X|=4;try{return gg(98,a.bind(null,b,c,d,e))}finally{X=f,0===X&&(wj(),ig())}};Ib=function(){0===(X&49)&&(Vj(),Oj())};Jb=function(a,b){var c=X;X|=2;try{return a(b)}finally{X=c,0===X&&(wj(),ig())}};function uk(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!rk(b))throw Error(y(200));return kk(a,b,null,c)}var vk={Events:[Cb,ue,Db,Eb,Fb,Oj,{current:!1}]},wk={findFiberByHostInstance:wc,bundleType:0,version:\"17.0.2\",rendererPackageName:\"react-dom\"};\nvar xk={bundleType:wk.bundleType,version:wk.version,rendererPackageName:wk.rendererPackageName,rendererConfig:wk.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:ra.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=cc(a);return null===a?null:a.stateNode},findFiberByHostInstance:wk.findFiberByHostInstance||\npk,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null};if(\"undefined\"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var yk=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!yk.isDisabled&&yk.supportsFiber)try{Lf=yk.inject(xk),Mf=yk}catch(a){}}exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=vk;exports.createPortal=uk;\nexports.findDOMNode=function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternals;if(void 0===b){if(\"function\"===typeof a.render)throw Error(y(188));throw Error(y(268,Object.keys(a)));}a=cc(b);a=null===a?null:a.stateNode;return a};exports.flushSync=function(a,b){var c=X;if(0!==(c&48))return a(b);X|=1;try{if(a)return gg(99,a.bind(null,b))}finally{X=c,ig()}};exports.hydrate=function(a,b,c){if(!rk(b))throw Error(y(200));return tk(null,a,b,!0,c)};\nexports.render=function(a,b,c){if(!rk(b))throw Error(y(200));return tk(null,a,b,!1,c)};exports.unmountComponentAtNode=function(a){if(!rk(a))throw Error(y(40));return a._reactRootContainer?(Xj(function(){tk(null,null,a,!1,function(){a._reactRootContainer=null;a[ff]=null})}),!0):!1};exports.unstable_batchedUpdates=Wj;exports.unstable_createPortal=function(a,b){return uk(a,b,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)};\nexports.unstable_renderSubtreeIntoContainer=function(a,b,c,d){if(!rk(c))throw Error(y(200));if(null==a||void 0===a._reactInternals)throw Error(y(38));return tk(a,b,c,!1,d)};exports.version=\"17.0.2\";\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}\n","/** @license React v0.20.2\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f,g,h,k;if(\"object\"===typeof performance&&\"function\"===typeof performance.now){var l=performance;exports.unstable_now=function(){return l.now()}}else{var p=Date,q=p.now();exports.unstable_now=function(){return p.now()-q}}\nif(\"undefined\"===typeof window||\"function\"!==typeof MessageChannel){var t=null,u=null,w=function(){if(null!==t)try{var a=exports.unstable_now();t(!0,a);t=null}catch(b){throw setTimeout(w,0),b;}};f=function(a){null!==t?setTimeout(f,0,a):(t=a,setTimeout(w,0))};g=function(a,b){u=setTimeout(a,b)};h=function(){clearTimeout(u)};exports.unstable_shouldYield=function(){return!1};k=exports.unstable_forceFrameRate=function(){}}else{var x=window.setTimeout,y=window.clearTimeout;if(\"undefined\"!==typeof console){var z=\nwindow.cancelAnimationFrame;\"function\"!==typeof window.requestAnimationFrame&&console.error(\"This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills\");\"function\"!==typeof z&&console.error(\"This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills\")}var A=!1,B=null,C=-1,D=5,E=0;exports.unstable_shouldYield=function(){return exports.unstable_now()>=\nE};k=function(){};exports.unstable_forceFrameRate=function(a){0>a||125<a?console.error(\"forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported\"):D=0<a?Math.floor(1E3/a):5};var F=new MessageChannel,G=F.port2;F.port1.onmessage=function(){if(null!==B){var a=exports.unstable_now();E=a+D;try{B(!0,a)?G.postMessage(null):(A=!1,B=null)}catch(b){throw G.postMessage(null),b;}}else A=!1};f=function(a){B=a;A||(A=!0,G.postMessage(null))};g=function(a,b){C=\nx(function(){a(exports.unstable_now())},b)};h=function(){y(C);C=-1}}function H(a,b){var c=a.length;a.push(b);a:for(;;){var d=c-1>>>1,e=a[d];if(void 0!==e&&0<I(e,b))a[d]=b,a[c]=e,c=d;else break a}}function J(a){a=a[0];return void 0===a?null:a}\nfunction K(a){var b=a[0];if(void 0!==b){var c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length;d<e;){var m=2*(d+1)-1,n=a[m],v=m+1,r=a[v];if(void 0!==n&&0>I(n,c))void 0!==r&&0>I(r,n)?(a[d]=r,a[v]=c,d=v):(a[d]=n,a[m]=c,d=m);else if(void 0!==r&&0>I(r,c))a[d]=r,a[v]=c,d=v;else break a}}return b}return null}function I(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}var L=[],M=[],N=1,O=null,P=3,Q=!1,R=!1,S=!1;\nfunction T(a){for(var b=J(M);null!==b;){if(null===b.callback)K(M);else if(b.startTime<=a)K(M),b.sortIndex=b.expirationTime,H(L,b);else break;b=J(M)}}function U(a){S=!1;T(a);if(!R)if(null!==J(L))R=!0,f(V);else{var b=J(M);null!==b&&g(U,b.startTime-a)}}\nfunction V(a,b){R=!1;S&&(S=!1,h());Q=!0;var c=P;try{T(b);for(O=J(L);null!==O&&(!(O.expirationTime>b)||a&&!exports.unstable_shouldYield());){var d=O.callback;if(\"function\"===typeof d){O.callback=null;P=O.priorityLevel;var e=d(O.expirationTime<=b);b=exports.unstable_now();\"function\"===typeof e?O.callback=e:O===J(L)&&K(L);T(b)}else K(L);O=J(L)}if(null!==O)var m=!0;else{var n=J(M);null!==n&&g(U,n.startTime-b);m=!1}return m}finally{O=null,P=c,Q=!1}}var W=k;exports.unstable_IdlePriority=5;\nexports.unstable_ImmediatePriority=1;exports.unstable_LowPriority=4;exports.unstable_NormalPriority=3;exports.unstable_Profiling=null;exports.unstable_UserBlockingPriority=2;exports.unstable_cancelCallback=function(a){a.callback=null};exports.unstable_continueExecution=function(){R||Q||(R=!0,f(V))};exports.unstable_getCurrentPriorityLevel=function(){return P};exports.unstable_getFirstCallbackNode=function(){return J(L)};\nexports.unstable_next=function(a){switch(P){case 1:case 2:case 3:var b=3;break;default:b=P}var c=P;P=b;try{return a()}finally{P=c}};exports.unstable_pauseExecution=function(){};exports.unstable_requestPaint=W;exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=P;P=a;try{return b()}finally{P=c}};\nexports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();\"object\"===typeof c&&null!==c?(c=c.delay,c=\"number\"===typeof c&&0<c?d+c:d):c=d;switch(a){case 1:var e=-1;break;case 2:e=250;break;case 5:e=1073741823;break;case 4:e=1E4;break;default:e=5E3}e=c+e;a={id:N++,callback:b,priorityLevel:a,startTime:c,expirationTime:e,sortIndex:-1};c>d?(a.sortIndex=c,H(M,a),null===J(L)&&a===J(M)&&(S?h():S=!0,g(U,c-d))):(a.sortIndex=e,H(L,a),R||Q||(R=!0,f(V)));return a};\nexports.unstable_wrapCallback=function(a){var b=P;return function(){var c=P;P=b;try{return a.apply(this,arguments)}finally{P=c}}};\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.MicRecorder = factory());\n}(this, (function () {\n\nfunction new_byte$1(count) {\n    return new Int8Array(count);\n}\n\nfunction new_short(count) {\n    return new Int16Array(count);\n}\n\nfunction new_int$1(count) {\n    return new Int32Array(count);\n}\n\nfunction new_float$1(count) {\n    return new Float32Array(count);\n}\n\nfunction new_double$1(count) {\n    return new Float64Array(count);\n}\n\nfunction new_float_n$1(args) {\n    if (args.length == 1) {\n        return new_float$1(args[0]);\n    }\n    var sz = args[0];\n    args = args.slice(1);\n    var A = [];\n    for (var i = 0; i < sz; i++) {\n        A.push(new_float_n$1(args));\n    }\n    return A;\n}\nfunction new_int_n$1(args) {\n    if (args.length == 1) {\n        return new_int$1(args[0]);\n    }\n    var sz = args[0];\n    args = args.slice(1);\n    var A = [];\n    for (var i = 0; i < sz; i++) {\n        A.push(new_int_n$1(args));\n    }\n    return A;\n}\n\nfunction new_short_n(args) {\n    if (args.length == 1) {\n        return new_short(args[0]);\n    }\n    var sz = args[0];\n    args = args.slice(1);\n    var A = [];\n    for (var i = 0; i < sz; i++) {\n        A.push(new_short_n(args));\n    }\n    return A;\n}\n\nfunction new_array_n$1(args) {\n    if (args.length == 1) {\n        return new Array(args[0]);\n    }\n    var sz = args[0];\n    args = args.slice(1);\n    var A = [];\n    for (var i = 0; i < sz; i++) {\n        A.push(new_array_n$1(args));\n    }\n    return A;\n}\n\n\nvar Arrays$1 = {};\n\nArrays$1.fill = function (a, fromIndex, toIndex, val) {\n    if (arguments.length == 2) {\n        for (var i = 0; i < a.length; i++) {\n            a[i] = arguments[1];\n        }\n    } else {\n        for (var i = fromIndex; i < toIndex; i++) {\n            a[i] = val;\n        }\n    }\n};\n\nvar System$1 = {};\n\nSystem$1.arraycopy = function (src, srcPos, dest, destPos, length) {\n    var srcEnd = srcPos + length;\n    while (srcPos < srcEnd)\n        dest[destPos++] = src[srcPos++];\n};\n\n\nvar Util$1 = {};\nUtil$1.SQRT2 = 1.41421356237309504880;\nUtil$1.FAST_LOG10 = function (x) {\n    return Math.log10(x);\n};\n\nUtil$1.FAST_LOG10_X = function (x, y) {\n    return Math.log10(x) * y;\n};\n\nfunction ShortBlock$1(ordinal) {\n    this.ordinal = ordinal;\n}\n/**\n * LAME may use them, even different block types for L/R.\n */\nShortBlock$1.short_block_allowed = new ShortBlock$1(0);\n/**\n * LAME may use them, but always same block types in L/R.\n */\nShortBlock$1.short_block_coupled = new ShortBlock$1(1);\n/**\n * LAME will not use short blocks, long blocks only.\n */\nShortBlock$1.short_block_dispensed = new ShortBlock$1(2);\n/**\n * LAME will not use long blocks, short blocks only.\n */\nShortBlock$1.short_block_forced = new ShortBlock$1(3);\n\nvar Float$1 = {};\nFloat$1.MAX_VALUE = 3.4028235e+38;\n\nfunction VbrMode$1(ordinal) {\n    this.ordinal = ordinal;\n}\nVbrMode$1.vbr_off = new VbrMode$1(0);\nVbrMode$1.vbr_mt = new VbrMode$1(1);\nVbrMode$1.vbr_rh = new VbrMode$1(2);\nVbrMode$1.vbr_abr = new VbrMode$1(3);\nVbrMode$1.vbr_mtrh = new VbrMode$1(4);\nVbrMode$1.vbr_default = VbrMode$1.vbr_mtrh;\n\nvar assert$1 = function (x) {\n    //console.assert(x);\n};\n\nvar common = {\n    \"System\": System$1,\n    \"VbrMode\": VbrMode$1,\n    \"Float\": Float$1,\n    \"ShortBlock\": ShortBlock$1,\n    \"Util\": Util$1,\n    \"Arrays\": Arrays$1,\n    \"new_array_n\": new_array_n$1,\n    \"new_byte\": new_byte$1,\n    \"new_double\": new_double$1,\n    \"new_float\": new_float$1,\n    \"new_float_n\": new_float_n$1,\n    \"new_int\": new_int$1,\n    \"new_int_n\": new_int_n$1,\n    \"new_short\": new_short,\n    \"new_short_n\": new_short_n,\n    \"assert\": assert$1\n};\n\n/*\n *      MP3 window subband -> subband filtering -> mdct routine\n *\n *      Copyright (c) 1999-2000 Takehiro Tominaga\n *\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Library General Public License for more details.\n *\n * You should have received a copy of the GNU Library General Public\n * License along with this library; if not, write to the\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\n * Boston, MA 02111-1307, USA.\n */\n/*\n *         Special Thanks to Patrick De Smet for your advices.\n */\n\n/* $Id: NewMDCT.java,v 1.11 2011/05/24 20:48:06 kenchis Exp $ */\n\n//package mp3;\n\n//import java.util.Arrays;\n\nvar System$6 = common.System;\nvar Util$6 = common.Util;\nvar Arrays$6 = common.Arrays;\nvar new_float$6 = common.new_float;\nfunction NewMDCT() {\n\n\tvar enwindow = [\n\t\t\t-4.77e-07 * 0.740951125354959 / 2.384e-06,\n\t\t\t1.03951e-04 * 0.740951125354959 / 2.384e-06,\n\t\t\t9.53674e-04 * 0.740951125354959 / 2.384e-06,\n\t\t\t2.841473e-03 * 0.740951125354959 / 2.384e-06,\n\t\t\t3.5758972e-02 * 0.740951125354959 / 2.384e-06,\n\t\t\t3.401756e-03 * 0.740951125354959 / 2.384e-06,\n\t\t\t9.83715e-04 * 0.740951125354959 / 2.384e-06,\n\t\t\t9.9182e-05 * 0.740951125354959 / 2.384e-06, /* 15 */\n\t\t\t1.2398e-05 * 0.740951125354959 / 2.384e-06,\n\t\t\t1.91212e-04 * 0.740951125354959 / 2.384e-06,\n\t\t\t2.283096e-03 * 0.740951125354959 / 2.384e-06,\n\t\t\t1.6994476e-02 * 0.740951125354959 / 2.384e-06,\n\t\t\t-1.8756866e-02 * 0.740951125354959 / 2.384e-06,\n\t\t\t-2.630711e-03 * 0.740951125354959 / 2.384e-06,\n\t\t\t-2.47478e-04 * 0.740951125354959 / 2.384e-06,\n\t\t\t-1.4782e-05 * 0.740951125354959 / 2.384e-06,\n\t\t\t9.063471690191471e-01, 1.960342806591213e-01,\n\n\t\t\t-4.77e-07 * 0.773010453362737 / 2.384e-06,\n\t\t\t1.05858e-04 * 0.773010453362737 / 2.384e-06,\n\t\t\t9.30786e-04 * 0.773010453362737 / 2.384e-06,\n\t\t\t2.521515e-03 * 0.773010453362737 / 2.384e-06,\n\t\t\t3.5694122e-02 * 0.773010453362737 / 2.384e-06,\n\t\t\t3.643036e-03 * 0.773010453362737 / 2.384e-06,\n\t\t\t9.91821e-04 * 0.773010453362737 / 2.384e-06,\n\t\t\t9.6321e-05 * 0.773010453362737 / 2.384e-06, /* 14 */\n\t\t\t1.1444e-05 * 0.773010453362737 / 2.384e-06,\n\t\t\t1.65462e-04 * 0.773010453362737 / 2.384e-06,\n\t\t\t2.110004e-03 * 0.773010453362737 / 2.384e-06,\n\t\t\t1.6112804e-02 * 0.773010453362737 / 2.384e-06,\n\t\t\t-1.9634247e-02 * 0.773010453362737 / 2.384e-06,\n\t\t\t-2.803326e-03 * 0.773010453362737 / 2.384e-06,\n\t\t\t-2.77042e-04 * 0.773010453362737 / 2.384e-06,\n\t\t\t-1.6689e-05 * 0.773010453362737 / 2.384e-06,\n\t\t\t8.206787908286602e-01, 3.901806440322567e-01,\n\n\t\t\t-4.77e-07 * 0.803207531480645 / 2.384e-06,\n\t\t\t1.07288e-04 * 0.803207531480645 / 2.384e-06,\n\t\t\t9.02653e-04 * 0.803207531480645 / 2.384e-06,\n\t\t\t2.174854e-03 * 0.803207531480645 / 2.384e-06,\n\t\t\t3.5586357e-02 * 0.803207531480645 / 2.384e-06,\n\t\t\t3.858566e-03 * 0.803207531480645 / 2.384e-06,\n\t\t\t9.95159e-04 * 0.803207531480645 / 2.384e-06,\n\t\t\t9.3460e-05 * 0.803207531480645 / 2.384e-06, /* 13 */\n\t\t\t1.0014e-05 * 0.803207531480645 / 2.384e-06,\n\t\t\t1.40190e-04 * 0.803207531480645 / 2.384e-06,\n\t\t\t1.937389e-03 * 0.803207531480645 / 2.384e-06,\n\t\t\t1.5233517e-02 * 0.803207531480645 / 2.384e-06,\n\t\t\t-2.0506859e-02 * 0.803207531480645 / 2.384e-06,\n\t\t\t-2.974033e-03 * 0.803207531480645 / 2.384e-06,\n\t\t\t-3.07560e-04 * 0.803207531480645 / 2.384e-06,\n\t\t\t-1.8120e-05 * 0.803207531480645 / 2.384e-06,\n\t\t\t7.416505462720353e-01, 5.805693545089249e-01,\n\n\t\t\t-4.77e-07 * 0.831469612302545 / 2.384e-06,\n\t\t\t1.08242e-04 * 0.831469612302545 / 2.384e-06,\n\t\t\t8.68797e-04 * 0.831469612302545 / 2.384e-06,\n\t\t\t1.800537e-03 * 0.831469612302545 / 2.384e-06,\n\t\t\t3.5435200e-02 * 0.831469612302545 / 2.384e-06,\n\t\t\t4.049301e-03 * 0.831469612302545 / 2.384e-06,\n\t\t\t9.94205e-04 * 0.831469612302545 / 2.384e-06,\n\t\t\t9.0599e-05 * 0.831469612302545 / 2.384e-06, /* 12 */\n\t\t\t9.060e-06 * 0.831469612302545 / 2.384e-06,\n\t\t\t1.16348e-04 * 0.831469612302545 / 2.384e-06,\n\t\t\t1.766682e-03 * 0.831469612302545 / 2.384e-06,\n\t\t\t1.4358521e-02 * 0.831469612302545 / 2.384e-06,\n\t\t\t-2.1372318e-02 * 0.831469612302545 / 2.384e-06,\n\t\t\t-3.14188e-03 * 0.831469612302545 / 2.384e-06,\n\t\t\t-3.39031e-04 * 0.831469612302545 / 2.384e-06,\n\t\t\t-1.9550e-05 * 0.831469612302545 / 2.384e-06,\n\t\t\t6.681786379192989e-01, 7.653668647301797e-01,\n\n\t\t\t-4.77e-07 * 0.857728610000272 / 2.384e-06,\n\t\t\t1.08719e-04 * 0.857728610000272 / 2.384e-06,\n\t\t\t8.29220e-04 * 0.857728610000272 / 2.384e-06,\n\t\t\t1.399517e-03 * 0.857728610000272 / 2.384e-06,\n\t\t\t3.5242081e-02 * 0.857728610000272 / 2.384e-06,\n\t\t\t4.215240e-03 * 0.857728610000272 / 2.384e-06,\n\t\t\t9.89437e-04 * 0.857728610000272 / 2.384e-06,\n\t\t\t8.7261e-05 * 0.857728610000272 / 2.384e-06, /* 11 */\n\t\t\t8.106e-06 * 0.857728610000272 / 2.384e-06,\n\t\t\t9.3937e-05 * 0.857728610000272 / 2.384e-06,\n\t\t\t1.597881e-03 * 0.857728610000272 / 2.384e-06,\n\t\t\t1.3489246e-02 * 0.857728610000272 / 2.384e-06,\n\t\t\t-2.2228718e-02 * 0.857728610000272 / 2.384e-06,\n\t\t\t-3.306866e-03 * 0.857728610000272 / 2.384e-06,\n\t\t\t-3.71456e-04 * 0.857728610000272 / 2.384e-06,\n\t\t\t-2.1458e-05 * 0.857728610000272 / 2.384e-06,\n\t\t\t5.993769336819237e-01, 9.427934736519954e-01,\n\n\t\t\t-4.77e-07 * 0.881921264348355 / 2.384e-06,\n\t\t\t1.08719e-04 * 0.881921264348355 / 2.384e-06,\n\t\t\t7.8392e-04 * 0.881921264348355 / 2.384e-06,\n\t\t\t9.71317e-04 * 0.881921264348355 / 2.384e-06,\n\t\t\t3.5007000e-02 * 0.881921264348355 / 2.384e-06,\n\t\t\t4.357815e-03 * 0.881921264348355 / 2.384e-06,\n\t\t\t9.80854e-04 * 0.881921264348355 / 2.384e-06,\n\t\t\t8.3923e-05 * 0.881921264348355 / 2.384e-06, /* 10 */\n\t\t\t7.629e-06 * 0.881921264348355 / 2.384e-06,\n\t\t\t7.2956e-05 * 0.881921264348355 / 2.384e-06,\n\t\t\t1.432419e-03 * 0.881921264348355 / 2.384e-06,\n\t\t\t1.2627602e-02 * 0.881921264348355 / 2.384e-06,\n\t\t\t-2.3074150e-02 * 0.881921264348355 / 2.384e-06,\n\t\t\t-3.467083e-03 * 0.881921264348355 / 2.384e-06,\n\t\t\t-4.04358e-04 * 0.881921264348355 / 2.384e-06,\n\t\t\t-2.3365e-05 * 0.881921264348355 / 2.384e-06,\n\t\t\t5.345111359507916e-01, 1.111140466039205e+00,\n\n\t\t\t-9.54e-07 * 0.903989293123443 / 2.384e-06,\n\t\t\t1.08242e-04 * 0.903989293123443 / 2.384e-06,\n\t\t\t7.31945e-04 * 0.903989293123443 / 2.384e-06,\n\t\t\t5.15938e-04 * 0.903989293123443 / 2.384e-06,\n\t\t\t3.4730434e-02 * 0.903989293123443 / 2.384e-06,\n\t\t\t4.477024e-03 * 0.903989293123443 / 2.384e-06,\n\t\t\t9.68933e-04 * 0.903989293123443 / 2.384e-06,\n\t\t\t8.0585e-05 * 0.903989293123443 / 2.384e-06, /* 9 */\n\t\t\t6.676e-06 * 0.903989293123443 / 2.384e-06,\n\t\t\t5.2929e-05 * 0.903989293123443 / 2.384e-06,\n\t\t\t1.269817e-03 * 0.903989293123443 / 2.384e-06,\n\t\t\t1.1775017e-02 * 0.903989293123443 / 2.384e-06,\n\t\t\t-2.3907185e-02 * 0.903989293123443 / 2.384e-06,\n\t\t\t-3.622532e-03 * 0.903989293123443 / 2.384e-06,\n\t\t\t-4.38213e-04 * 0.903989293123443 / 2.384e-06,\n\t\t\t-2.5272e-05 * 0.903989293123443 / 2.384e-06,\n\t\t\t4.729647758913199e-01, 1.268786568327291e+00,\n\n\t\t\t-9.54e-07 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t1.06812e-04 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t6.74248e-04 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t3.3379e-05 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t3.4412861e-02 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t4.573822e-03 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t9.54151e-04 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t7.6771e-05 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t6.199e-06 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t3.4332e-05 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t1.111031e-03 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t1.0933399e-02 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t-2.4725437e-02 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t-3.771782e-03 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t-4.72546e-04 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t-2.7657e-05 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t4.1421356237309504879e-01, /* tan(PI/8) */\n\t\t\t1.414213562373095e+00,\n\n\t\t\t-9.54e-07 * 0.941544065183021 / 2.384e-06,\n\t\t\t1.05381e-04 * 0.941544065183021 / 2.384e-06,\n\t\t\t6.10352e-04 * 0.941544065183021 / 2.384e-06,\n\t\t\t-4.75883e-04 * 0.941544065183021 / 2.384e-06,\n\t\t\t3.4055710e-02 * 0.941544065183021 / 2.384e-06,\n\t\t\t4.649162e-03 * 0.941544065183021 / 2.384e-06,\n\t\t\t9.35555e-04 * 0.941544065183021 / 2.384e-06,\n\t\t\t7.3433e-05 * 0.941544065183021 / 2.384e-06, /* 7 */\n\t\t\t5.245e-06 * 0.941544065183021 / 2.384e-06,\n\t\t\t1.7166e-05 * 0.941544065183021 / 2.384e-06,\n\t\t\t9.56535e-04 * 0.941544065183021 / 2.384e-06,\n\t\t\t1.0103703e-02 * 0.941544065183021 / 2.384e-06,\n\t\t\t-2.5527000e-02 * 0.941544065183021 / 2.384e-06,\n\t\t\t-3.914356e-03 * 0.941544065183021 / 2.384e-06,\n\t\t\t-5.07355e-04 * 0.941544065183021 / 2.384e-06,\n\t\t\t-3.0041e-05 * 0.941544065183021 / 2.384e-06,\n\t\t\t3.578057213145241e-01, 1.546020906725474e+00,\n\n\t\t\t-9.54e-07 * 0.956940335732209 / 2.384e-06,\n\t\t\t1.02520e-04 * 0.956940335732209 / 2.384e-06,\n\t\t\t5.39303e-04 * 0.956940335732209 / 2.384e-06,\n\t\t\t-1.011848e-03 * 0.956940335732209 / 2.384e-06,\n\t\t\t3.3659935e-02 * 0.956940335732209 / 2.384e-06,\n\t\t\t4.703045e-03 * 0.956940335732209 / 2.384e-06,\n\t\t\t9.15051e-04 * 0.956940335732209 / 2.384e-06,\n\t\t\t7.0095e-05 * 0.956940335732209 / 2.384e-06, /* 6 */\n\t\t\t4.768e-06 * 0.956940335732209 / 2.384e-06,\n\t\t\t9.54e-07 * 0.956940335732209 / 2.384e-06,\n\t\t\t8.06808e-04 * 0.956940335732209 / 2.384e-06,\n\t\t\t9.287834e-03 * 0.956940335732209 / 2.384e-06,\n\t\t\t-2.6310921e-02 * 0.956940335732209 / 2.384e-06,\n\t\t\t-4.048824e-03 * 0.956940335732209 / 2.384e-06,\n\t\t\t-5.42164e-04 * 0.956940335732209 / 2.384e-06,\n\t\t\t-3.2425e-05 * 0.956940335732209 / 2.384e-06,\n\t\t\t3.033466836073424e-01, 1.662939224605090e+00,\n\n\t\t\t-1.431e-06 * 0.970031253194544 / 2.384e-06,\n\t\t\t9.9182e-05 * 0.970031253194544 / 2.384e-06,\n\t\t\t4.62532e-04 * 0.970031253194544 / 2.384e-06,\n\t\t\t-1.573563e-03 * 0.970031253194544 / 2.384e-06,\n\t\t\t3.3225536e-02 * 0.970031253194544 / 2.384e-06,\n\t\t\t4.737377e-03 * 0.970031253194544 / 2.384e-06,\n\t\t\t8.91685e-04 * 0.970031253194544 / 2.384e-06,\n\t\t\t6.6280e-05 * 0.970031253194544 / 2.384e-06, /* 5 */\n\t\t\t4.292e-06 * 0.970031253194544 / 2.384e-06,\n\t\t\t-1.3828e-05 * 0.970031253194544 / 2.384e-06,\n\t\t\t6.61850e-04 * 0.970031253194544 / 2.384e-06,\n\t\t\t8.487225e-03 * 0.970031253194544 / 2.384e-06,\n\t\t\t-2.7073860e-02 * 0.970031253194544 / 2.384e-06,\n\t\t\t-4.174709e-03 * 0.970031253194544 / 2.384e-06,\n\t\t\t-5.76973e-04 * 0.970031253194544 / 2.384e-06,\n\t\t\t-3.4809e-05 * 0.970031253194544 / 2.384e-06,\n\t\t\t2.504869601913055e-01, 1.763842528696710e+00,\n\n\t\t\t-1.431e-06 * 0.98078528040323 / 2.384e-06,\n\t\t\t9.5367e-05 * 0.98078528040323 / 2.384e-06,\n\t\t\t3.78609e-04 * 0.98078528040323 / 2.384e-06,\n\t\t\t-2.161503e-03 * 0.98078528040323 / 2.384e-06,\n\t\t\t3.2754898e-02 * 0.98078528040323 / 2.384e-06,\n\t\t\t4.752159e-03 * 0.98078528040323 / 2.384e-06,\n\t\t\t8.66413e-04 * 0.98078528040323 / 2.384e-06,\n\t\t\t6.2943e-05 * 0.98078528040323 / 2.384e-06, /* 4 */\n\t\t\t3.815e-06 * 0.98078528040323 / 2.384e-06,\n\t\t\t-2.718e-05 * 0.98078528040323 / 2.384e-06,\n\t\t\t5.22137e-04 * 0.98078528040323 / 2.384e-06,\n\t\t\t7.703304e-03 * 0.98078528040323 / 2.384e-06,\n\t\t\t-2.7815342e-02 * 0.98078528040323 / 2.384e-06,\n\t\t\t-4.290581e-03 * 0.98078528040323 / 2.384e-06,\n\t\t\t-6.11782e-04 * 0.98078528040323 / 2.384e-06,\n\t\t\t-3.7670e-05 * 0.98078528040323 / 2.384e-06,\n\t\t\t1.989123673796580e-01, 1.847759065022573e+00,\n\n\t\t\t-1.907e-06 * 0.989176509964781 / 2.384e-06,\n\t\t\t9.0122e-05 * 0.989176509964781 / 2.384e-06,\n\t\t\t2.88486e-04 * 0.989176509964781 / 2.384e-06,\n\t\t\t-2.774239e-03 * 0.989176509964781 / 2.384e-06,\n\t\t\t3.2248020e-02 * 0.989176509964781 / 2.384e-06,\n\t\t\t4.748821e-03 * 0.989176509964781 / 2.384e-06,\n\t\t\t8.38757e-04 * 0.989176509964781 / 2.384e-06,\n\t\t\t5.9605e-05 * 0.989176509964781 / 2.384e-06, /* 3 */\n\t\t\t3.338e-06 * 0.989176509964781 / 2.384e-06,\n\t\t\t-3.9577e-05 * 0.989176509964781 / 2.384e-06,\n\t\t\t3.88145e-04 * 0.989176509964781 / 2.384e-06,\n\t\t\t6.937027e-03 * 0.989176509964781 / 2.384e-06,\n\t\t\t-2.8532982e-02 * 0.989176509964781 / 2.384e-06,\n\t\t\t-4.395962e-03 * 0.989176509964781 / 2.384e-06,\n\t\t\t-6.46591e-04 * 0.989176509964781 / 2.384e-06,\n\t\t\t-4.0531e-05 * 0.989176509964781 / 2.384e-06,\n\t\t\t1.483359875383474e-01, 1.913880671464418e+00,\n\n\t\t\t-1.907e-06 * 0.995184726672197 / 2.384e-06,\n\t\t\t8.4400e-05 * 0.995184726672197 / 2.384e-06,\n\t\t\t1.91689e-04 * 0.995184726672197 / 2.384e-06,\n\t\t\t-3.411293e-03 * 0.995184726672197 / 2.384e-06,\n\t\t\t3.1706810e-02 * 0.995184726672197 / 2.384e-06,\n\t\t\t4.728317e-03 * 0.995184726672197 / 2.384e-06,\n\t\t\t8.09669e-04 * 0.995184726672197 / 2.384e-06,\n\t\t\t5.579e-05 * 0.995184726672197 / 2.384e-06,\n\t\t\t3.338e-06 * 0.995184726672197 / 2.384e-06,\n\t\t\t-5.0545e-05 * 0.995184726672197 / 2.384e-06,\n\t\t\t2.59876e-04 * 0.995184726672197 / 2.384e-06,\n\t\t\t6.189346e-03 * 0.995184726672197 / 2.384e-06,\n\t\t\t-2.9224873e-02 * 0.995184726672197 / 2.384e-06,\n\t\t\t-4.489899e-03 * 0.995184726672197 / 2.384e-06,\n\t\t\t-6.80923e-04 * 0.995184726672197 / 2.384e-06,\n\t\t\t-4.3392e-05 * 0.995184726672197 / 2.384e-06,\n\t\t\t9.849140335716425e-02, 1.961570560806461e+00,\n\n\t\t\t-2.384e-06 * 0.998795456205172 / 2.384e-06,\n\t\t\t7.7724e-05 * 0.998795456205172 / 2.384e-06,\n\t\t\t8.8215e-05 * 0.998795456205172 / 2.384e-06,\n\t\t\t-4.072189e-03 * 0.998795456205172 / 2.384e-06,\n\t\t\t3.1132698e-02 * 0.998795456205172 / 2.384e-06,\n\t\t\t4.691124e-03 * 0.998795456205172 / 2.384e-06,\n\t\t\t7.79152e-04 * 0.998795456205172 / 2.384e-06,\n\t\t\t5.2929e-05 * 0.998795456205172 / 2.384e-06,\n\t\t\t2.861e-06 * 0.998795456205172 / 2.384e-06,\n\t\t\t-6.0558e-05 * 0.998795456205172 / 2.384e-06,\n\t\t\t1.37329e-04 * 0.998795456205172 / 2.384e-06,\n\t\t\t5.462170e-03 * 0.998795456205172 / 2.384e-06,\n\t\t\t-2.9890060e-02 * 0.998795456205172 / 2.384e-06,\n\t\t\t-4.570484e-03 * 0.998795456205172 / 2.384e-06,\n\t\t\t-7.14302e-04 * 0.998795456205172 / 2.384e-06,\n\t\t\t-4.6253e-05 * 0.998795456205172 / 2.384e-06,\n\t\t\t4.912684976946725e-02, 1.990369453344394e+00,\n\n\t\t\t3.5780907e-02 * Util$6.SQRT2 * 0.5 / 2.384e-06,\n\t\t\t1.7876148e-02 * Util$6.SQRT2 * 0.5 / 2.384e-06,\n\t\t\t3.134727e-03 * Util$6.SQRT2 * 0.5 / 2.384e-06,\n\t\t\t2.457142e-03 * Util$6.SQRT2 * 0.5 / 2.384e-06,\n\t\t\t9.71317e-04 * Util$6.SQRT2 * 0.5 / 2.384e-06,\n\t\t\t2.18868e-04 * Util$6.SQRT2 * 0.5 / 2.384e-06,\n\t\t\t1.01566e-04 * Util$6.SQRT2 * 0.5 / 2.384e-06,\n\t\t\t1.3828e-05 * Util$6.SQRT2 * 0.5 / 2.384e-06,\n\n\t\t\t3.0526638e-02 / 2.384e-06, 4.638195e-03 / 2.384e-06,\n\t\t\t7.47204e-04 / 2.384e-06, 4.9591e-05 / 2.384e-06,\n\t\t\t4.756451e-03 / 2.384e-06, 2.1458e-05 / 2.384e-06,\n\t\t\t-6.9618e-05 / 2.384e-06, /* 2.384e-06/2.384e-06 */\n\t];\n\n\tvar NS = 12;\n\tvar NL = 36;\n\n\tvar win = [\n\t    [\n\t     2.382191739347913e-13,\n\t     6.423305872147834e-13,\n\t     9.400849094049688e-13,\n\t     1.122435026096556e-12,\n\t     1.183840321267481e-12,\n\t     1.122435026096556e-12,\n\t     9.400849094049690e-13,\n\t     6.423305872147839e-13,\n\t     2.382191739347918e-13,\n\n\t     5.456116108943412e-12,\n\t     4.878985199565852e-12,\n\t     4.240448995017367e-12,\n\t     3.559909094758252e-12,\n\t     2.858043359288075e-12,\n\t     2.156177623817898e-12,\n\t     1.475637723558783e-12,\n\t     8.371015190102974e-13,\n\t     2.599706096327376e-13,\n\n\t     -5.456116108943412e-12,\n\t     -4.878985199565852e-12,\n\t     -4.240448995017367e-12,\n\t     -3.559909094758252e-12,\n\t     -2.858043359288076e-12,\n\t     -2.156177623817898e-12,\n\t     -1.475637723558783e-12,\n\t     -8.371015190102975e-13,\n\t     -2.599706096327376e-13,\n\n\t     -2.382191739347923e-13,\n\t     -6.423305872147843e-13,\n\t     -9.400849094049696e-13,\n\t     -1.122435026096556e-12,\n\t     -1.183840321267481e-12,\n\t     -1.122435026096556e-12,\n\t     -9.400849094049694e-13,\n\t     -6.423305872147840e-13,\n\t     -2.382191739347918e-13,\n\t     ],\n\t    [\n\t     2.382191739347913e-13,\n\t     6.423305872147834e-13,\n\t     9.400849094049688e-13,\n\t     1.122435026096556e-12,\n\t     1.183840321267481e-12,\n\t     1.122435026096556e-12,\n\t     9.400849094049688e-13,\n\t     6.423305872147841e-13,\n\t     2.382191739347918e-13,\n\n\t     5.456116108943413e-12,\n\t     4.878985199565852e-12,\n\t     4.240448995017367e-12,\n\t     3.559909094758253e-12,\n\t     2.858043359288075e-12,\n\t     2.156177623817898e-12,\n\t     1.475637723558782e-12,\n\t     8.371015190102975e-13,\n\t     2.599706096327376e-13,\n\n\t     -5.461314069809755e-12,\n\t     -4.921085770524055e-12,\n\t     -4.343405037091838e-12,\n\t     -3.732668368707687e-12,\n\t     -3.093523840190885e-12,\n\t     -2.430835727329465e-12,\n\t     -1.734679010007751e-12,\n\t     -9.748253656609281e-13,\n\t     -2.797435120168326e-13,\n\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     -2.283748241799531e-13,\n\t     -4.037858874020686e-13,\n\t     -2.146547464825323e-13,\n\t     ],\n\t    [\n\t     1.316524975873958e-01, /* win[SHORT_TYPE] */\n\t     4.142135623730950e-01,\n\t     7.673269879789602e-01,\n\n\t     1.091308501069271e+00, /* tantab_l */\n\t     1.303225372841206e+00,\n\t     1.569685577117490e+00,\n\t     1.920982126971166e+00,\n\t     2.414213562373094e+00,\n\t     3.171594802363212e+00,\n\t     4.510708503662055e+00,\n\t     7.595754112725146e+00,\n\t     2.290376554843115e+01,\n\n\t     0.98480775301220802032, /* cx */\n\t     0.64278760968653936292,\n\t     0.34202014332566882393,\n\t     0.93969262078590842791,\n\t     -0.17364817766693030343,\n\t     -0.76604444311897790243,\n\t     0.86602540378443870761,\n\t     0.500000000000000e+00,\n\n\t     -5.144957554275265e-01, /* ca */\n\t     -4.717319685649723e-01,\n\t     -3.133774542039019e-01,\n\t     -1.819131996109812e-01,\n\t     -9.457419252642064e-02,\n\t     -4.096558288530405e-02,\n\t     -1.419856857247115e-02,\n\t     -3.699974673760037e-03,\n\n\t     8.574929257125442e-01, /* cs */\n\t     8.817419973177052e-01,\n\t     9.496286491027329e-01,\n\t     9.833145924917901e-01,\n\t     9.955178160675857e-01,\n\t     9.991605581781475e-01,\n\t     9.998991952444470e-01,\n\t     9.999931550702802e-01,\n\t     ],\n\t    [\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     2.283748241799531e-13,\n\t     4.037858874020686e-13,\n\t     2.146547464825323e-13,\n\n\t     5.461314069809755e-12,\n\t     4.921085770524055e-12,\n\t     4.343405037091838e-12,\n\t     3.732668368707687e-12,\n\t     3.093523840190885e-12,\n\t     2.430835727329466e-12,\n\t     1.734679010007751e-12,\n\t     9.748253656609281e-13,\n\t     2.797435120168326e-13,\n\n\t     -5.456116108943413e-12,\n\t     -4.878985199565852e-12,\n\t     -4.240448995017367e-12,\n\t     -3.559909094758253e-12,\n\t     -2.858043359288075e-12,\n\t     -2.156177623817898e-12,\n\t     -1.475637723558782e-12,\n\t     -8.371015190102975e-13,\n\t     -2.599706096327376e-13,\n\n\t     -2.382191739347913e-13,\n\t     -6.423305872147834e-13,\n\t     -9.400849094049688e-13,\n\t     -1.122435026096556e-12,\n\t     -1.183840321267481e-12,\n\t     -1.122435026096556e-12,\n\t     -9.400849094049688e-13,\n\t     -6.423305872147841e-13,\n\t     -2.382191739347918e-13,\n\t     ]\n\t];\n\n\tvar tantab_l = win[Encoder_1.SHORT_TYPE];\n\tvar cx = win[Encoder_1.SHORT_TYPE];\n\tvar ca = win[Encoder_1.SHORT_TYPE];\n\tvar cs = win[Encoder_1.SHORT_TYPE];\n\n\t/**\n\t * new IDCT routine written by Takehiro TOMINAGA\n\t *\n\t * PURPOSE: Overlapping window on PCM samples<BR>\n\t *\n\t * SEMANTICS:<BR>\n\t * 32 16-bit pcm samples are scaled to fractional 2's complement and\n\t * concatenated to the end of the window buffer #x#. The updated window\n\t * buffer #x# is then windowed by the analysis window #c# to produce the\n\t * windowed sample #z#\n\t */\n\tvar order = [\n\t    0, 1, 16, 17, 8, 9, 24, 25, 4, 5, 20, 21, 12, 13, 28, 29,\n\t    2, 3, 18, 19, 10, 11, 26, 27, 6, 7, 22, 23, 14, 15, 30, 31\n\t];\n\n\t/**\n\t * returns sum_j=0^31 a[j]*cos(PI*j*(k+1/2)/32), 0<=k<32\n\t */\n\tfunction window_subband(x1, x1Pos, a) {\n\t\tvar wp = 10;\n\n\t\tvar x2 = x1Pos + 238 - 14 - 286;\n\n\t\tfor (var i = -15; i < 0; i++) {\n\t\t\tvar w, s, t;\n\n\t\t\tw = enwindow[wp + -10];\n\t\t\ts = x1[x2 + -224] * w;\n\t\t\tt = x1[x1Pos + 224] * w;\n\t\t\tw = enwindow[wp + -9];\n\t\t\ts += x1[x2 + -160] * w;\n\t\t\tt += x1[x1Pos + 160] * w;\n\t\t\tw = enwindow[wp + -8];\n\t\t\ts += x1[x2 + -96] * w;\n\t\t\tt += x1[x1Pos + 96] * w;\n\t\t\tw = enwindow[wp + -7];\n\t\t\ts += x1[x2 + -32] * w;\n\t\t\tt += x1[x1Pos + 32] * w;\n\t\t\tw = enwindow[wp + -6];\n\t\t\ts += x1[x2 + 32] * w;\n\t\t\tt += x1[x1Pos + -32] * w;\n\t\t\tw = enwindow[wp + -5];\n\t\t\ts += x1[x2 + 96] * w;\n\t\t\tt += x1[x1Pos + -96] * w;\n\t\t\tw = enwindow[wp + -4];\n\t\t\ts += x1[x2 + 160] * w;\n\t\t\tt += x1[x1Pos + -160] * w;\n\t\t\tw = enwindow[wp + -3];\n\t\t\ts += x1[x2 + 224] * w;\n\t\t\tt += x1[x1Pos + -224] * w;\n\n\t\t\tw = enwindow[wp + -2];\n\t\t\ts += x1[x1Pos + -256] * w;\n\t\t\tt -= x1[x2 + 256] * w;\n\t\t\tw = enwindow[wp + -1];\n\t\t\ts += x1[x1Pos + -192] * w;\n\t\t\tt -= x1[x2 + 192] * w;\n\t\t\tw = enwindow[wp + 0];\n\t\t\ts += x1[x1Pos + -128] * w;\n\t\t\tt -= x1[x2 + 128] * w;\n\t\t\tw = enwindow[wp + 1];\n\t\t\ts += x1[x1Pos + -64] * w;\n\t\t\tt -= x1[x2 + 64] * w;\n\t\t\tw = enwindow[wp + 2];\n\t\t\ts += x1[x1Pos + 0] * w;\n\t\t\tt -= x1[x2 + 0] * w;\n\t\t\tw = enwindow[wp + 3];\n\t\t\ts += x1[x1Pos + 64] * w;\n\t\t\tt -= x1[x2 + -64] * w;\n\t\t\tw = enwindow[wp + 4];\n\t\t\ts += x1[x1Pos + 128] * w;\n\t\t\tt -= x1[x2 + -128] * w;\n\t\t\tw = enwindow[wp + 5];\n\t\t\ts += x1[x1Pos + 192] * w;\n\t\t\tt -= x1[x2 + -192] * w;\n\n\t\t\t/*\n\t\t\t * this multiplyer could be removed, but it needs more 256 FLOAT\n\t\t\t * data. thinking about the data cache performance, I think we\n\t\t\t * should not use such a huge table. tt 2000/Oct/25\n\t\t\t */\n\t\t\ts *= enwindow[wp + 6];\n\t\t\tw = t - s;\n\t\t\ta[30 + i * 2] = t + s;\n\t\t\ta[31 + i * 2] = enwindow[wp + 7] * w;\n\t\t\twp += 18;\n\t\t\tx1Pos--;\n\t\t\tx2++;\n\t\t}\n\t\t{\n\t\t\tvar s, t, u, v;\n\t\t\tt = x1[x1Pos + -16] * enwindow[wp + -10];\n\t\t\ts = x1[x1Pos + -32] * enwindow[wp + -2];\n\t\t\tt += (x1[x1Pos + -48] - x1[x1Pos + 16]) * enwindow[wp + -9];\n\t\t\ts += x1[x1Pos + -96] * enwindow[wp + -1];\n\t\t\tt += (x1[x1Pos + -80] + x1[x1Pos + 48]) * enwindow[wp + -8];\n\t\t\ts += x1[x1Pos + -160] * enwindow[wp + 0];\n\t\t\tt += (x1[x1Pos + -112] - x1[x1Pos + 80]) * enwindow[wp + -7];\n\t\t\ts += x1[x1Pos + -224] * enwindow[wp + 1];\n\t\t\tt += (x1[x1Pos + -144] + x1[x1Pos + 112]) * enwindow[wp + -6];\n\t\t\ts -= x1[x1Pos + 32] * enwindow[wp + 2];\n\t\t\tt += (x1[x1Pos + -176] - x1[x1Pos + 144]) * enwindow[wp + -5];\n\t\t\ts -= x1[x1Pos + 96] * enwindow[wp + 3];\n\t\t\tt += (x1[x1Pos + -208] + x1[x1Pos + 176]) * enwindow[wp + -4];\n\t\t\ts -= x1[x1Pos + 160] * enwindow[wp + 4];\n\t\t\tt += (x1[x1Pos + -240] - x1[x1Pos + 208]) * enwindow[wp + -3];\n\t\t\ts -= x1[x1Pos + 224];\n\n\t\t\tu = s - t;\n\t\t\tv = s + t;\n\n\t\t\tt = a[14];\n\t\t\ts = a[15] - t;\n\n\t\t\ta[31] = v + t; /* A0 */\n\t\t\ta[30] = u + s; /* A1 */\n\t\t\ta[15] = u - s; /* A2 */\n\t\t\ta[14] = v - t; /* A3 */\n\t\t}\n\t\t{\n\t\t\tvar xr;\n\t\t\txr = a[28] - a[0];\n\t\t\ta[0] += a[28];\n\t\t\ta[28] = xr * enwindow[wp + -2 * 18 + 7];\n\t\t\txr = a[29] - a[1];\n\t\t\ta[1] += a[29];\n\t\t\ta[29] = xr * enwindow[wp + -2 * 18 + 7];\n\n\t\t\txr = a[26] - a[2];\n\t\t\ta[2] += a[26];\n\t\t\ta[26] = xr * enwindow[wp + -4 * 18 + 7];\n\t\t\txr = a[27] - a[3];\n\t\t\ta[3] += a[27];\n\t\t\ta[27] = xr * enwindow[wp + -4 * 18 + 7];\n\n\t\t\txr = a[24] - a[4];\n\t\t\ta[4] += a[24];\n\t\t\ta[24] = xr * enwindow[wp + -6 * 18 + 7];\n\t\t\txr = a[25] - a[5];\n\t\t\ta[5] += a[25];\n\t\t\ta[25] = xr * enwindow[wp + -6 * 18 + 7];\n\n\t\t\txr = a[22] - a[6];\n\t\t\ta[6] += a[22];\n\t\t\ta[22] = xr * Util$6.SQRT2;\n\t\t\txr = a[23] - a[7];\n\t\t\ta[7] += a[23];\n\t\t\ta[23] = xr * Util$6.SQRT2 - a[7];\n\t\t\ta[7] -= a[6];\n\t\t\ta[22] -= a[7];\n\t\t\ta[23] -= a[22];\n\n\t\t\txr = a[6];\n\t\t\ta[6] = a[31] - xr;\n\t\t\ta[31] = a[31] + xr;\n\t\t\txr = a[7];\n\t\t\ta[7] = a[30] - xr;\n\t\t\ta[30] = a[30] + xr;\n\t\t\txr = a[22];\n\t\t\ta[22] = a[15] - xr;\n\t\t\ta[15] = a[15] + xr;\n\t\t\txr = a[23];\n\t\t\ta[23] = a[14] - xr;\n\t\t\ta[14] = a[14] + xr;\n\n\t\t\txr = a[20] - a[8];\n\t\t\ta[8] += a[20];\n\t\t\ta[20] = xr * enwindow[wp + -10 * 18 + 7];\n\t\t\txr = a[21] - a[9];\n\t\t\ta[9] += a[21];\n\t\t\ta[21] = xr * enwindow[wp + -10 * 18 + 7];\n\n\t\t\txr = a[18] - a[10];\n\t\t\ta[10] += a[18];\n\t\t\ta[18] = xr * enwindow[wp + -12 * 18 + 7];\n\t\t\txr = a[19] - a[11];\n\t\t\ta[11] += a[19];\n\t\t\ta[19] = xr * enwindow[wp + -12 * 18 + 7];\n\n\t\t\txr = a[16] - a[12];\n\t\t\ta[12] += a[16];\n\t\t\ta[16] = xr * enwindow[wp + -14 * 18 + 7];\n\t\t\txr = a[17] - a[13];\n\t\t\ta[13] += a[17];\n\t\t\ta[17] = xr * enwindow[wp + -14 * 18 + 7];\n\n\t\t\txr = -a[20] + a[24];\n\t\t\ta[20] += a[24];\n\t\t\ta[24] = xr * enwindow[wp + -12 * 18 + 7];\n\t\t\txr = -a[21] + a[25];\n\t\t\ta[21] += a[25];\n\t\t\ta[25] = xr * enwindow[wp + -12 * 18 + 7];\n\n\t\t\txr = a[4] - a[8];\n\t\t\ta[4] += a[8];\n\t\t\ta[8] = xr * enwindow[wp + -12 * 18 + 7];\n\t\t\txr = a[5] - a[9];\n\t\t\ta[5] += a[9];\n\t\t\ta[9] = xr * enwindow[wp + -12 * 18 + 7];\n\n\t\t\txr = a[0] - a[12];\n\t\t\ta[0] += a[12];\n\t\t\ta[12] = xr * enwindow[wp + -4 * 18 + 7];\n\t\t\txr = a[1] - a[13];\n\t\t\ta[1] += a[13];\n\t\t\ta[13] = xr * enwindow[wp + -4 * 18 + 7];\n\t\t\txr = a[16] - a[28];\n\t\t\ta[16] += a[28];\n\t\t\ta[28] = xr * enwindow[wp + -4 * 18 + 7];\n\t\t\txr = -a[17] + a[29];\n\t\t\ta[17] += a[29];\n\t\t\ta[29] = xr * enwindow[wp + -4 * 18 + 7];\n\n\t\t\txr = Util$6.SQRT2 * (a[2] - a[10]);\n\t\t\ta[2] += a[10];\n\t\t\ta[10] = xr;\n\t\t\txr = Util$6.SQRT2 * (a[3] - a[11]);\n\t\t\ta[3] += a[11];\n\t\t\ta[11] = xr;\n\t\t\txr = Util$6.SQRT2 * (-a[18] + a[26]);\n\t\t\ta[18] += a[26];\n\t\t\ta[26] = xr - a[18];\n\t\t\txr = Util$6.SQRT2 * (-a[19] + a[27]);\n\t\t\ta[19] += a[27];\n\t\t\ta[27] = xr - a[19];\n\n\t\t\txr = a[2];\n\t\t\ta[19] -= a[3];\n\t\t\ta[3] -= xr;\n\t\t\ta[2] = a[31] - xr;\n\t\t\ta[31] += xr;\n\t\t\txr = a[3];\n\t\t\ta[11] -= a[19];\n\t\t\ta[18] -= xr;\n\t\t\ta[3] = a[30] - xr;\n\t\t\ta[30] += xr;\n\t\t\txr = a[18];\n\t\t\ta[27] -= a[11];\n\t\t\ta[19] -= xr;\n\t\t\ta[18] = a[15] - xr;\n\t\t\ta[15] += xr;\n\n\t\t\txr = a[19];\n\t\t\ta[10] -= xr;\n\t\t\ta[19] = a[14] - xr;\n\t\t\ta[14] += xr;\n\t\t\txr = a[10];\n\t\t\ta[11] -= xr;\n\t\t\ta[10] = a[23] - xr;\n\t\t\ta[23] += xr;\n\t\t\txr = a[11];\n\t\t\ta[26] -= xr;\n\t\t\ta[11] = a[22] - xr;\n\t\t\ta[22] += xr;\n\t\t\txr = a[26];\n\t\t\ta[27] -= xr;\n\t\t\ta[26] = a[7] - xr;\n\t\t\ta[7] += xr;\n\n\t\t\txr = a[27];\n\t\t\ta[27] = a[6] - xr;\n\t\t\ta[6] += xr;\n\n\t\t\txr = Util$6.SQRT2 * (a[0] - a[4]);\n\t\t\ta[0] += a[4];\n\t\t\ta[4] = xr;\n\t\t\txr = Util$6.SQRT2 * (a[1] - a[5]);\n\t\t\ta[1] += a[5];\n\t\t\ta[5] = xr;\n\t\t\txr = Util$6.SQRT2 * (a[16] - a[20]);\n\t\t\ta[16] += a[20];\n\t\t\ta[20] = xr;\n\t\t\txr = Util$6.SQRT2 * (a[17] - a[21]);\n\t\t\ta[17] += a[21];\n\t\t\ta[21] = xr;\n\n\t\t\txr = -Util$6.SQRT2 * (a[8] - a[12]);\n\t\t\ta[8] += a[12];\n\t\t\ta[12] = xr - a[8];\n\t\t\txr = -Util$6.SQRT2 * (a[9] - a[13]);\n\t\t\ta[9] += a[13];\n\t\t\ta[13] = xr - a[9];\n\t\t\txr = -Util$6.SQRT2 * (a[25] - a[29]);\n\t\t\ta[25] += a[29];\n\t\t\ta[29] = xr - a[25];\n\t\t\txr = -Util$6.SQRT2 * (a[24] + a[28]);\n\t\t\ta[24] -= a[28];\n\t\t\ta[28] = xr - a[24];\n\n\t\t\txr = a[24] - a[16];\n\t\t\ta[24] = xr;\n\t\t\txr = a[20] - xr;\n\t\t\ta[20] = xr;\n\t\t\txr = a[28] - xr;\n\t\t\ta[28] = xr;\n\n\t\t\txr = a[25] - a[17];\n\t\t\ta[25] = xr;\n\t\t\txr = a[21] - xr;\n\t\t\ta[21] = xr;\n\t\t\txr = a[29] - xr;\n\t\t\ta[29] = xr;\n\n\t\t\txr = a[17] - a[1];\n\t\t\ta[17] = xr;\n\t\t\txr = a[9] - xr;\n\t\t\ta[9] = xr;\n\t\t\txr = a[25] - xr;\n\t\t\ta[25] = xr;\n\t\t\txr = a[5] - xr;\n\t\t\ta[5] = xr;\n\t\t\txr = a[21] - xr;\n\t\t\ta[21] = xr;\n\t\t\txr = a[13] - xr;\n\t\t\ta[13] = xr;\n\t\t\txr = a[29] - xr;\n\t\t\ta[29] = xr;\n\n\t\t\txr = a[1] - a[0];\n\t\t\ta[1] = xr;\n\t\t\txr = a[16] - xr;\n\t\t\ta[16] = xr;\n\t\t\txr = a[17] - xr;\n\t\t\ta[17] = xr;\n\t\t\txr = a[8] - xr;\n\t\t\ta[8] = xr;\n\t\t\txr = a[9] - xr;\n\t\t\ta[9] = xr;\n\t\t\txr = a[24] - xr;\n\t\t\ta[24] = xr;\n\t\t\txr = a[25] - xr;\n\t\t\ta[25] = xr;\n\t\t\txr = a[4] - xr;\n\t\t\ta[4] = xr;\n\t\t\txr = a[5] - xr;\n\t\t\ta[5] = xr;\n\t\t\txr = a[20] - xr;\n\t\t\ta[20] = xr;\n\t\t\txr = a[21] - xr;\n\t\t\ta[21] = xr;\n\t\t\txr = a[12] - xr;\n\t\t\ta[12] = xr;\n\t\t\txr = a[13] - xr;\n\t\t\ta[13] = xr;\n\t\t\txr = a[28] - xr;\n\t\t\ta[28] = xr;\n\t\t\txr = a[29] - xr;\n\t\t\ta[29] = xr;\n\n\t\t\txr = a[0];\n\t\t\ta[0] += a[31];\n\t\t\ta[31] -= xr;\n\t\t\txr = a[1];\n\t\t\ta[1] += a[30];\n\t\t\ta[30] -= xr;\n\t\t\txr = a[16];\n\t\t\ta[16] += a[15];\n\t\t\ta[15] -= xr;\n\t\t\txr = a[17];\n\t\t\ta[17] += a[14];\n\t\t\ta[14] -= xr;\n\t\t\txr = a[8];\n\t\t\ta[8] += a[23];\n\t\t\ta[23] -= xr;\n\t\t\txr = a[9];\n\t\t\ta[9] += a[22];\n\t\t\ta[22] -= xr;\n\t\t\txr = a[24];\n\t\t\ta[24] += a[7];\n\t\t\ta[7] -= xr;\n\t\t\txr = a[25];\n\t\t\ta[25] += a[6];\n\t\t\ta[6] -= xr;\n\t\t\txr = a[4];\n\t\t\ta[4] += a[27];\n\t\t\ta[27] -= xr;\n\t\t\txr = a[5];\n\t\t\ta[5] += a[26];\n\t\t\ta[26] -= xr;\n\t\t\txr = a[20];\n\t\t\ta[20] += a[11];\n\t\t\ta[11] -= xr;\n\t\t\txr = a[21];\n\t\t\ta[21] += a[10];\n\t\t\ta[10] -= xr;\n\t\t\txr = a[12];\n\t\t\ta[12] += a[19];\n\t\t\ta[19] -= xr;\n\t\t\txr = a[13];\n\t\t\ta[13] += a[18];\n\t\t\ta[18] -= xr;\n\t\t\txr = a[28];\n\t\t\ta[28] += a[3];\n\t\t\ta[3] -= xr;\n\t\t\txr = a[29];\n\t\t\ta[29] += a[2];\n\t\t\ta[2] -= xr;\n\t\t}\n\t}\n\n\t/**\n\t * Function: Calculation of the MDCT In the case of long blocks (type 0,1,3)\n\t * there are 36 coefficents in the time domain and 18 in the frequency\n\t * domain.<BR>\n\t * In the case of short blocks (type 2) there are 3 transformations with\n\t * short length. This leads to 12 coefficents in the time and 6 in the\n\t * frequency domain. In this case the results are stored side by side in the\n\t * vector out[].\n\t *\n\t * New layer3\n\t */\n\tfunction mdct_short(inout, inoutPos) {\n\t\tfor (var l = 0; l < 3; l++) {\n\t\t\tvar tc0, tc1, tc2, ts0, ts1, ts2;\n\n\t\t\tts0 = inout[inoutPos + 2 * 3] * win[Encoder_1.SHORT_TYPE][0]\n\t\t\t\t\t- inout[inoutPos + 5 * 3];\n\t\t\ttc0 = inout[inoutPos + 0 * 3] * win[Encoder_1.SHORT_TYPE][2]\n\t\t\t\t\t- inout[inoutPos + 3 * 3];\n\t\t\ttc1 = ts0 + tc0;\n\t\t\ttc2 = ts0 - tc0;\n\n\t\t\tts0 = inout[inoutPos + 5 * 3] * win[Encoder_1.SHORT_TYPE][0]\n\t\t\t\t\t+ inout[inoutPos + 2 * 3];\n\t\t\ttc0 = inout[inoutPos + 3 * 3] * win[Encoder_1.SHORT_TYPE][2]\n\t\t\t\t\t+ inout[inoutPos + 0 * 3];\n\t\t\tts1 = ts0 + tc0;\n\t\t\tts2 = -ts0 + tc0;\n\n\t\t\ttc0 = (inout[inoutPos + 1 * 3] * win[Encoder_1.SHORT_TYPE][1] - inout[inoutPos + 4 * 3]) * 2.069978111953089e-11;\n\t\t\t/*\n\t\t\t * tritab_s [ 1 ]\n\t\t\t */\n\t\t\tts0 = (inout[inoutPos + 4 * 3] * win[Encoder_1.SHORT_TYPE][1] + inout[inoutPos + 1 * 3]) * 2.069978111953089e-11;\n\t\t\t/*\n\t\t\t * tritab_s [ 1 ]\n\t\t\t */\n\t\t\tinout[inoutPos + 3 * 0] = tc1 * 1.907525191737280e-11 + tc0;\n\t\t\t/*\n\t\t\t * tritab_s[ 2 ]\n\t\t\t */\n\t\t\tinout[inoutPos + 3 * 5] = -ts1 * 1.907525191737280e-11 + ts0;\n\t\t\t/*\n\t\t\t * tritab_s[0 ]\n\t\t\t */\n\t\t\ttc2 = tc2 * 0.86602540378443870761 * 1.907525191737281e-11;\n\t\t\t/*\n\t\t\t * tritab_s[ 2]\n\t\t\t */\n\t\t\tts1 = ts1 * 0.5 * 1.907525191737281e-11 + ts0;\n\t\t\tinout[inoutPos + 3 * 1] = tc2 - ts1;\n\t\t\tinout[inoutPos + 3 * 2] = tc2 + ts1;\n\n\t\t\ttc1 = tc1 * 0.5 * 1.907525191737281e-11 - tc0;\n\t\t\tts2 = ts2 * 0.86602540378443870761 * 1.907525191737281e-11;\n\t\t\t/*\n\t\t\t * tritab_s[ 0]\n\t\t\t */\n\t\t\tinout[inoutPos + 3 * 3] = tc1 + ts2;\n\t\t\tinout[inoutPos + 3 * 4] = tc1 - ts2;\n\n\t\t\tinoutPos++;\n\t\t}\n\t}\n\n\tfunction mdct_long(out, outPos, _in) {\n\t\tvar ct, st;\n\t\t{\n\t\t\tvar tc1, tc2, tc3, tc4, ts5, ts6, ts7, ts8;\n\t\t\t/* 1,2, 5,6, 9,10, 13,14, 17 */\n\t\t\ttc1 = _in[17] - _in[9];\n\t\t\ttc3 = _in[15] - _in[11];\n\t\t\ttc4 = _in[14] - _in[12];\n\t\t\tts5 = _in[0] + _in[8];\n\t\t\tts6 = _in[1] + _in[7];\n\t\t\tts7 = _in[2] + _in[6];\n\t\t\tts8 = _in[3] + _in[5];\n\n\t\t\tout[outPos + 17] = (ts5 + ts7 - ts8) - (ts6 - _in[4]);\n\t\t\tst = (ts5 + ts7 - ts8) * cx[12 + 7] + (ts6 - _in[4]);\n\t\t\tct = (tc1 - tc3 - tc4) * cx[12 + 6];\n\t\t\tout[outPos + 5] = ct + st;\n\t\t\tout[outPos + 6] = ct - st;\n\n\t\t\ttc2 = (_in[16] - _in[10]) * cx[12 + 6];\n\t\t\tts6 = ts6 * cx[12 + 7] + _in[4];\n\t\t\tct = tc1 * cx[12 + 0] + tc2 + tc3 * cx[12 + 1] + tc4 * cx[12 + 2];\n\t\t\tst = -ts5 * cx[12 + 4] + ts6 - ts7 * cx[12 + 5] + ts8 * cx[12 + 3];\n\t\t\tout[outPos + 1] = ct + st;\n\t\t\tout[outPos + 2] = ct - st;\n\n\t\t\tct = tc1 * cx[12 + 1] - tc2 - tc3 * cx[12 + 2] + tc4 * cx[12 + 0];\n\t\t\tst = -ts5 * cx[12 + 5] + ts6 - ts7 * cx[12 + 3] + ts8 * cx[12 + 4];\n\t\t\tout[outPos + 9] = ct + st;\n\t\t\tout[outPos + 10] = ct - st;\n\n\t\t\tct = tc1 * cx[12 + 2] - tc2 + tc3 * cx[12 + 0] - tc4 * cx[12 + 1];\n\t\t\tst = ts5 * cx[12 + 3] - ts6 + ts7 * cx[12 + 4] - ts8 * cx[12 + 5];\n\t\t\tout[outPos + 13] = ct + st;\n\t\t\tout[outPos + 14] = ct - st;\n\t\t}\n\t\t{\n\t\t\tvar ts1, ts2, ts3, ts4, tc5, tc6, tc7, tc8;\n\n\t\t\tts1 = _in[8] - _in[0];\n\t\t\tts3 = _in[6] - _in[2];\n\t\t\tts4 = _in[5] - _in[3];\n\t\t\ttc5 = _in[17] + _in[9];\n\t\t\ttc6 = _in[16] + _in[10];\n\t\t\ttc7 = _in[15] + _in[11];\n\t\t\ttc8 = _in[14] + _in[12];\n\n\t\t\tout[outPos + 0] = (tc5 + tc7 + tc8) + (tc6 + _in[13]);\n\t\t\tct = (tc5 + tc7 + tc8) * cx[12 + 7] - (tc6 + _in[13]);\n\t\t\tst = (ts1 - ts3 + ts4) * cx[12 + 6];\n\t\t\tout[outPos + 11] = ct + st;\n\t\t\tout[outPos + 12] = ct - st;\n\n\t\t\tts2 = (_in[7] - _in[1]) * cx[12 + 6];\n\t\t\ttc6 = _in[13] - tc6 * cx[12 + 7];\n\t\t\tct = tc5 * cx[12 + 3] - tc6 + tc7 * cx[12 + 4] + tc8 * cx[12 + 5];\n\t\t\tst = ts1 * cx[12 + 2] + ts2 + ts3 * cx[12 + 0] + ts4 * cx[12 + 1];\n\t\t\tout[outPos + 3] = ct + st;\n\t\t\tout[outPos + 4] = ct - st;\n\n\t\t\tct = -tc5 * cx[12 + 5] + tc6 - tc7 * cx[12 + 3] - tc8 * cx[12 + 4];\n\t\t\tst = ts1 * cx[12 + 1] + ts2 - ts3 * cx[12 + 2] - ts4 * cx[12 + 0];\n\t\t\tout[outPos + 7] = ct + st;\n\t\t\tout[outPos + 8] = ct - st;\n\n\t\t\tct = -tc5 * cx[12 + 4] + tc6 - tc7 * cx[12 + 5] - tc8 * cx[12 + 3];\n\t\t\tst = ts1 * cx[12 + 0] - ts2 + ts3 * cx[12 + 1] - ts4 * cx[12 + 2];\n\t\t\tout[outPos + 15] = ct + st;\n\t\t\tout[outPos + 16] = ct - st;\n\t\t}\n\t}\n\n\tthis.mdct_sub48 = function(gfc, w0, w1) {\n\t\tvar wk = w0;\n\t\tvar wkPos = 286;\n\t\t/* thinking cache performance, ch->gr loop is better than gr->ch loop */\n\t\tfor (var ch = 0; ch < gfc.channels_out; ch++) {\n\t\t\tfor (var gr = 0; gr < gfc.mode_gr; gr++) {\n\t\t\t\tvar band;\n\t\t\t\tvar gi = (gfc.l3_side.tt[gr][ch]);\n\t\t\t\tvar mdct_enc = gi.xr;\n\t\t\t\tvar mdct_encPos = 0;\n\t\t\t\tvar samp = gfc.sb_sample[ch][1 - gr];\n\t\t\t\tvar sampPos = 0;\n\n\t\t\t\tfor (var k = 0; k < 18 / 2; k++) {\n\t\t\t\t\twindow_subband(wk, wkPos, samp[sampPos]);\n\t\t\t\t\twindow_subband(wk, wkPos + 32, samp[sampPos + 1]);\n\t\t\t\t\tsampPos += 2;\n\t\t\t\t\twkPos += 64;\n\t\t\t\t\t/*\n\t\t\t\t\t * Compensate for inversion in the analysis filter\n\t\t\t\t\t */\n\t\t\t\t\tfor (band = 1; band < 32; band += 2) {\n\t\t\t\t\t\tsamp[sampPos - 1][band] *= -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/*\n\t\t\t\t * Perform imdct of 18 previous subband samples + 18 current\n\t\t\t\t * subband samples\n\t\t\t\t */\n\t\t\t\tfor (band = 0; band < 32; band++, mdct_encPos += 18) {\n\t\t\t\t\tvar type = gi.block_type;\n\t\t\t\t\tvar band0 = gfc.sb_sample[ch][gr];\n\t\t\t\t\tvar band1 = gfc.sb_sample[ch][1 - gr];\n\t\t\t\t\tif (gi.mixed_block_flag != 0 && band < 2)\n\t\t\t\t\t\ttype = 0;\n\t\t\t\t\tif (gfc.amp_filter[band] < 1e-12) {\n\t\t\t\t\t\tArrays$6.fill(mdct_enc, mdct_encPos + 0,\n\t\t\t\t\t\t\t\tmdct_encPos + 18, 0);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (gfc.amp_filter[band] < 1.0) {\n\t\t\t\t\t\t\tfor (var k = 0; k < 18; k++)\n\t\t\t\t\t\t\t\tband1[k][order[band]] *= gfc.amp_filter[band];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (type == Encoder_1.SHORT_TYPE) {\n\t\t\t\t\t\t\tfor (var k = -NS / 4; k < 0; k++) {\n\t\t\t\t\t\t\t\tvar w = win[Encoder_1.SHORT_TYPE][k + 3];\n\t\t\t\t\t\t\t\tmdct_enc[mdct_encPos + k * 3 + 9] = band0[9 + k][order[band]]\n\t\t\t\t\t\t\t\t\t\t* w - band0[8 - k][order[band]];\n\t\t\t\t\t\t\t\tmdct_enc[mdct_encPos + k * 3 + 18] = band0[14 - k][order[band]]\n\t\t\t\t\t\t\t\t\t\t* w + band0[15 + k][order[band]];\n\t\t\t\t\t\t\t\tmdct_enc[mdct_encPos + k * 3 + 10] = band0[15 + k][order[band]]\n\t\t\t\t\t\t\t\t\t\t* w - band0[14 - k][order[band]];\n\t\t\t\t\t\t\t\tmdct_enc[mdct_encPos + k * 3 + 19] = band1[2 - k][order[band]]\n\t\t\t\t\t\t\t\t\t\t* w + band1[3 + k][order[band]];\n\t\t\t\t\t\t\t\tmdct_enc[mdct_encPos + k * 3 + 11] = band1[3 + k][order[band]]\n\t\t\t\t\t\t\t\t\t\t* w - band1[2 - k][order[band]];\n\t\t\t\t\t\t\t\tmdct_enc[mdct_encPos + k * 3 + 20] = band1[8 - k][order[band]]\n\t\t\t\t\t\t\t\t\t\t* w + band1[9 + k][order[band]];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tmdct_short(mdct_enc, mdct_encPos);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar work = new_float$6(18);\n\t\t\t\t\t\t\tfor (var k = -NL / 4; k < 0; k++) {\n\t\t\t\t\t\t\t\tvar a, b;\n\t\t\t\t\t\t\t\ta = win[type][k + 27]\n\t\t\t\t\t\t\t\t\t\t* band1[k + 9][order[band]]\n\t\t\t\t\t\t\t\t\t\t+ win[type][k + 36]\n\t\t\t\t\t\t\t\t\t\t* band1[8 - k][order[band]];\n\t\t\t\t\t\t\t\tb = win[type][k + 9]\n\t\t\t\t\t\t\t\t\t\t* band0[k + 9][order[band]]\n\t\t\t\t\t\t\t\t\t\t- win[type][k + 18]\n\t\t\t\t\t\t\t\t\t\t* band0[8 - k][order[band]];\n\t\t\t\t\t\t\t\twork[k + 9] = a - b * tantab_l[3 + k + 9];\n\t\t\t\t\t\t\t\twork[k + 18] = a * tantab_l[3 + k + 9] + b;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tmdct_long(mdct_enc, mdct_encPos, work);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t/*\n\t\t\t\t\t * Perform aliasing reduction butterfly\n\t\t\t\t\t */\n\t\t\t\t\tif (type != Encoder_1.SHORT_TYPE && band != 0) {\n\t\t\t\t\t\tfor (var k = 7; k >= 0; --k) {\n\t\t\t\t\t\t\tvar bu, bd;\n\t\t\t\t\t\t\tbu = mdct_enc[mdct_encPos + k] * ca[20 + k]\n\t\t\t\t\t\t\t\t\t+ mdct_enc[mdct_encPos + -1 - k]\n\t\t\t\t\t\t\t\t\t* cs[28 + k];\n\t\t\t\t\t\t\tbd = mdct_enc[mdct_encPos + k] * cs[28 + k]\n\t\t\t\t\t\t\t\t\t- mdct_enc[mdct_encPos + -1 - k]\n\t\t\t\t\t\t\t\t\t* ca[20 + k];\n\n\t\t\t\t\t\t\tmdct_enc[mdct_encPos + -1 - k] = bu;\n\t\t\t\t\t\t\tmdct_enc[mdct_encPos + k] = bd;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\twk = w1;\n\t\t\twkPos = 286;\n\t\t\tif (gfc.mode_gr == 1) {\n\t\t\t\tfor (var i = 0; i < 18; i++) {\n\t\t\t\t\tSystem$6.arraycopy(gfc.sb_sample[ch][1][i], 0,\n\t\t\t\t\t\t\tgfc.sb_sample[ch][0][i], 0, 32);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\nvar NewMDCT_1 = NewMDCT;\n\nvar System$7 = common.System;\nvar new_float$7 = common.new_float;\nvar new_float_n$7 = common.new_float_n;\nfunction III_psy_xmin() {\n    this.l = new_float$7(Encoder_1.SBMAX_l);\n    this.s = new_float_n$7([Encoder_1.SBMAX_s, 3]);\n\n    var self = this;\n    this.assign = function (iii_psy_xmin) {\n        System$7.arraycopy(iii_psy_xmin.l, 0, self.l, 0, Encoder_1.SBMAX_l);\n        for (var i = 0; i < Encoder_1.SBMAX_s; i++) {\n            for (var j = 0; j < 3; j++) {\n                self.s[i][j] = iii_psy_xmin.s[i][j];\n            }\n        }\n    };\n}\n\nvar III_psy_xmin_1 = III_psy_xmin;\n\n//package mp3;\n\n\n\nfunction III_psy_ratio() {\n\tthis.thm = new III_psy_xmin_1();\n\tthis.en = new III_psy_xmin_1();\n}\n\nvar III_psy_ratio_1 = III_psy_ratio;\n\nvar System$5 = common.System;\nvar VbrMode$5 = common.VbrMode;\nvar new_array_n$5 = common.new_array_n;\nvar new_float$5 = common.new_float;\nvar new_float_n$5 = common.new_float_n;\nvar new_int$5 = common.new_int;\nvar assert$5 = common.assert;\n\n/**\n * ENCDELAY The encoder delay.\n *\n * Minimum allowed is MDCTDELAY (see below)\n *\n * The first 96 samples will be attenuated, so using a value less than 96\n * will result in corrupt data for the first 96-ENCDELAY samples.\n *\n * suggested: 576 set to 1160 to sync with FhG.\n */\nEncoder$2.ENCDELAY = 576;\n/**\n * make sure there is at least one complete frame after the last frame\n * containing real data\n *\n * Using a value of 288 would be sufficient for a a very sophisticated\n * decoder that can decode granule-by-granule instead of frame by frame. But\n * lets not assume this, and assume the decoder will not decode frame N\n * unless it also has data for frame N+1\n */\nEncoder$2.POSTDELAY = 1152;\n\n/**\n * delay of the MDCT used in mdct.c original ISO routines had a delay of\n * 528! Takehiro's routines:\n */\nEncoder$2.MDCTDELAY = 48;\nEncoder$2.FFTOFFSET = (224 + Encoder$2.MDCTDELAY);\n\n/**\n * Most decoders, including the one we use, have a delay of 528 samples.\n */\nEncoder$2.DECDELAY = 528;\n\n/**\n * number of subbands\n */\nEncoder$2.SBLIMIT = 32;\n\n/**\n * parition bands bands\n */\nEncoder$2.CBANDS = 64;\n\n/**\n * number of critical bands/scale factor bands where masking is computed\n */\nEncoder$2.SBPSY_l = 21;\nEncoder$2.SBPSY_s = 12;\n\n/**\n * total number of scalefactor bands encoded\n */\nEncoder$2.SBMAX_l = 22;\nEncoder$2.SBMAX_s = 13;\nEncoder$2.PSFB21 = 6;\nEncoder$2.PSFB12 = 6;\n\n/**\n * FFT sizes\n */\nEncoder$2.BLKSIZE = 1024;\nEncoder$2.HBLKSIZE = (Encoder$2.BLKSIZE / 2 + 1);\nEncoder$2.BLKSIZE_s = 256;\nEncoder$2.HBLKSIZE_s = (Encoder$2.BLKSIZE_s / 2 + 1);\n\nEncoder$2.NORM_TYPE = 0;\nEncoder$2.START_TYPE = 1;\nEncoder$2.SHORT_TYPE = 2;\nEncoder$2.STOP_TYPE = 3;\n\n/**\n * <PRE>\n * Mode Extention:\n * When we are in stereo mode, there are 4 possible methods to store these\n * two channels. The stereo modes -m? are using a subset of them.\n *\n *  -ms: MPG_MD_LR_LR\n *  -mj: MPG_MD_LR_LR and MPG_MD_MS_LR\n *  -mf: MPG_MD_MS_LR\n *  -mi: all\n * </PRE>\n */\nEncoder$2.MPG_MD_LR_LR = 0;\nEncoder$2.MPG_MD_LR_I = 1;\nEncoder$2.MPG_MD_MS_LR = 2;\nEncoder$2.MPG_MD_MS_I = 3;\n\nEncoder$2.fircoef = [-0.0207887 * 5, -0.0378413 * 5,\n    -0.0432472 * 5, -0.031183 * 5, 7.79609e-18 * 5, 0.0467745 * 5,\n    0.10091 * 5, 0.151365 * 5, 0.187098 * 5];\n\nfunction Encoder$2() {\n    var NewMDCT = NewMDCT_1;\n    var III_psy_ratio = III_psy_ratio_1;\n\n    var FFTOFFSET = Encoder$2.FFTOFFSET;\n    var MPG_MD_MS_LR = Encoder$2.MPG_MD_MS_LR;\n    //BitStream bs;\n    //PsyModel psy;\n    //VBRTag vbr;\n    //QuantizePVT qupvt;\n    var bs = null;\n    this.psy = null;\n    var psy = null;\n    var vbr = null;\n    var qupvt = null;\n\n    //public final void setModules(BitStream bs, PsyModel psy, QuantizePVT qupvt,\n    //    VBRTag vbr) {\n    this.setModules = function (_bs, _psy, _qupvt, _vbr) {\n        bs = _bs;\n        this.psy = _psy;\n        psy = _psy;\n        vbr = _vbr;\n        qupvt = _qupvt;\n    };\n\n    var newMDCT = new NewMDCT();\n\n    /***********************************************************************\n     *\n     * encoder and decoder delays\n     *\n     ***********************************************************************/\n\n    /**\n     * <PRE>\n     * layer III enc->dec delay:  1056 (1057?)   (observed)\n     * layer  II enc->dec delay:   480  (481?)   (observed)\n     *\n     * polyphase 256-16             (dec or enc)        = 240\n     * mdct      256+32  (9*32)     (dec or enc)        = 288\n     * total:    512+16\n     *\n     * My guess is that delay of polyphase filterbank is actualy 240.5\n     * (there are technical reasons for this, see postings in mp3encoder).\n     * So total Encode+Decode delay = ENCDELAY + 528 + 1\n     * </PRE>\n     */\n\n\n    /**\n     * auto-adjust of ATH, useful for low volume Gabriel Bouvigne 3 feb 2001\n     *\n     * modifies some values in gfp.internal_flags.ATH (gfc.ATH)\n     */\n//private void adjust_ATH(final LameInternalFlags gfc) {\n    function adjust_ATH(gfc) {\n        var gr2_max, max_pow;\n\n        if (gfc.ATH.useAdjust == 0) {\n            gfc.ATH.adjust = 1.0;\n            /* no adjustment */\n            return;\n        }\n\n        /* jd - 2001 mar 12, 27, jun 30 */\n        /* loudness based on equal loudness curve; */\n        /* use granule with maximum combined loudness */\n        max_pow = gfc.loudness_sq[0][0];\n        gr2_max = gfc.loudness_sq[1][0];\n        if (gfc.channels_out == 2) {\n            max_pow += gfc.loudness_sq[0][1];\n            gr2_max += gfc.loudness_sq[1][1];\n        } else {\n            max_pow += max_pow;\n            gr2_max += gr2_max;\n        }\n        if (gfc.mode_gr == 2) {\n            max_pow = Math.max(max_pow, gr2_max);\n        }\n        max_pow *= 0.5;\n        /* max_pow approaches 1.0 for full band noise */\n\n        /* jd - 2001 mar 31, jun 30 */\n        /* user tuning of ATH adjustment region */\n        max_pow *= gfc.ATH.aaSensitivityP;\n\n        /*\n         * adjust ATH depending on range of maximum value\n         */\n\n        /* jd - 2001 feb27, mar12,20, jun30, jul22 */\n        /* continuous curves based on approximation */\n        /* to GB's original values. */\n        /* For an increase in approximate loudness, */\n        /* set ATH adjust to adjust_limit immediately */\n        /* after a delay of one frame. */\n        /* For a loudness decrease, reduce ATH adjust */\n        /* towards adjust_limit gradually. */\n        /* max_pow is a loudness squared or a power. */\n        if (max_pow > 0.03125) { /* ((1 - 0.000625)/ 31.98) from curve below */\n            if (gfc.ATH.adjust >= 1.0) {\n                gfc.ATH.adjust = 1.0;\n            } else {\n                /* preceding frame has lower ATH adjust; */\n                /* ascend only to the preceding adjust_limit */\n                /* in case there is leading low volume */\n                if (gfc.ATH.adjust < gfc.ATH.adjustLimit) {\n                    gfc.ATH.adjust = gfc.ATH.adjustLimit;\n                }\n            }\n            gfc.ATH.adjustLimit = 1.0;\n        } else { /* adjustment curve */\n            /* about 32 dB maximum adjust (0.000625) */\n            var adj_lim_new = 31.98 * max_pow + 0.000625;\n            if (gfc.ATH.adjust >= adj_lim_new) { /* descend gradually */\n                gfc.ATH.adjust *= adj_lim_new * 0.075 + 0.925;\n                if (gfc.ATH.adjust < adj_lim_new) { /* stop descent */\n                    gfc.ATH.adjust = adj_lim_new;\n                }\n            } else { /* ascend */\n                if (gfc.ATH.adjustLimit >= adj_lim_new) {\n                    gfc.ATH.adjust = adj_lim_new;\n                } else {\n                    /* preceding frame has lower ATH adjust; */\n                    /* ascend only to the preceding adjust_limit */\n                    if (gfc.ATH.adjust < gfc.ATH.adjustLimit) {\n                        gfc.ATH.adjust = gfc.ATH.adjustLimit;\n                    }\n                }\n            }\n            gfc.ATH.adjustLimit = adj_lim_new;\n        }\n    }\n\n    /**\n     * <PRE>\n     *  some simple statistics\n     *\n     *  bitrate index 0: free bitrate . not allowed in VBR mode\n     *  : bitrates, kbps depending on MPEG version\n     *  bitrate index 15: forbidden\n     *\n     *  mode_ext:\n     *  0:  LR\n     *  1:  LR-i\n     *  2:  MS\n     *  3:  MS-i\n     * </PRE>\n     */\n    function updateStats(gfc) {\n        var gr, ch;\n        assert$5(0 <= gfc.bitrate_index && gfc.bitrate_index < 16);\n        assert$5(0 <= gfc.mode_ext && gfc.mode_ext < 4);\n\n        /* count bitrate indices */\n        gfc.bitrate_stereoMode_Hist[gfc.bitrate_index][4]++;\n        gfc.bitrate_stereoMode_Hist[15][4]++;\n\n        /* count 'em for every mode extension in case of 2 channel encoding */\n        if (gfc.channels_out == 2) {\n            gfc.bitrate_stereoMode_Hist[gfc.bitrate_index][gfc.mode_ext]++;\n            gfc.bitrate_stereoMode_Hist[15][gfc.mode_ext]++;\n        }\n        for (gr = 0; gr < gfc.mode_gr; ++gr) {\n            for (ch = 0; ch < gfc.channels_out; ++ch) {\n                var bt = gfc.l3_side.tt[gr][ch].block_type | 0;\n                if (gfc.l3_side.tt[gr][ch].mixed_block_flag != 0)\n                    bt = 4;\n                gfc.bitrate_blockType_Hist[gfc.bitrate_index][bt]++;\n                gfc.bitrate_blockType_Hist[gfc.bitrate_index][5]++;\n                gfc.bitrate_blockType_Hist[15][bt]++;\n                gfc.bitrate_blockType_Hist[15][5]++;\n            }\n        }\n    }\n\n    function lame_encode_frame_init(gfp, inbuf) {\n        var gfc = gfp.internal_flags;\n\n        var ch, gr;\n\n        if (gfc.lame_encode_frame_init == 0) {\n            /* prime the MDCT/polyphase filterbank with a short block */\n            var i, j;\n            var primebuff0 = new_float$5(286 + 1152 + 576);\n            var primebuff1 = new_float$5(286 + 1152 + 576);\n            gfc.lame_encode_frame_init = 1;\n            for (i = 0, j = 0; i < 286 + 576 * (1 + gfc.mode_gr); ++i) {\n                if (i < 576 * gfc.mode_gr) {\n                    primebuff0[i] = 0;\n                    if (gfc.channels_out == 2)\n                        primebuff1[i] = 0;\n                } else {\n                    primebuff0[i] = inbuf[0][j];\n                    if (gfc.channels_out == 2)\n                        primebuff1[i] = inbuf[1][j];\n                    ++j;\n                }\n            }\n            /* polyphase filtering / mdct */\n            for (gr = 0; gr < gfc.mode_gr; gr++) {\n                for (ch = 0; ch < gfc.channels_out; ch++) {\n                    gfc.l3_side.tt[gr][ch].block_type = Encoder$2.SHORT_TYPE;\n                }\n            }\n            newMDCT.mdct_sub48(gfc, primebuff0, primebuff1);\n\n            /* check FFT will not use a negative starting offset */\n            assert$5(576 >= Encoder$2.FFTOFFSET);\n            /* check if we have enough data for FFT */\n            assert$5(gfc.mf_size >= (Encoder$2.BLKSIZE + gfp.framesize - Encoder$2.FFTOFFSET));\n            /* check if we have enough data for polyphase filterbank */\n            assert$5(gfc.mf_size >= (512 + gfp.framesize - 32));\n        }\n\n    }\n\n    /**\n     * <PRE>\n     * encodeframe()           Layer 3\n     *\n     * encode a single frame\n     *\n     *\n     *    lame_encode_frame()\n     *\n     *\n     *                           gr 0            gr 1\n     *    inbuf:           |--------------|--------------|--------------|\n     *\n     *\n     *    Polyphase (18 windows, each shifted 32)\n     *    gr 0:\n     *    window1          <----512---.\n     *    window18                 <----512---.\n     *\n     *    gr 1:\n     *    window1                         <----512---.\n     *    window18                                <----512---.\n     *\n     *\n     *\n     *    MDCT output:  |--------------|--------------|--------------|\n     *\n     *    FFT's                    <---------1024---------.\n     *                                             <---------1024-------.\n     *\n     *\n     *\n     *        inbuf = buffer of PCM data size=MP3 framesize\n     *        encoder acts on inbuf[ch][0], but output is delayed by MDCTDELAY\n     *        so the MDCT coefficints are from inbuf[ch][-MDCTDELAY]\n     *\n     *        psy-model FFT has a 1 granule delay, so we feed it data for the\n     *        next granule.\n     *        FFT is centered over granule:  224+576+224\n     *        So FFT starts at:   576-224-MDCTDELAY\n     *\n     *        MPEG2:  FFT ends at:  BLKSIZE+576-224-MDCTDELAY      (1328)\n     *        MPEG1:  FFT ends at:  BLKSIZE+2*576-224-MDCTDELAY    (1904)\n     *\n     *        MPEG2:  polyphase first window:  [0..511]\n     *                          18th window:   [544..1055]          (1056)\n     *        MPEG1:            36th window:   [1120..1631]         (1632)\n     *                data needed:  512+framesize-32\n     *\n     *        A close look newmdct.c shows that the polyphase filterbank\n     *        only uses data from [0..510] for each window.  Perhaps because the window\n     *        used by the filterbank is zero for the last point, so Takehiro's\n     *        code doesn't bother to compute with it.\n     *\n     *        FFT starts at 576-224-MDCTDELAY (304)  = 576-FFTOFFSET\n     *\n     * </PRE>\n     */\n\n\n    this.lame_encode_mp3_frame = function (gfp, inbuf_l, inbuf_r, mp3buf, mp3bufPos, mp3buf_size) {\n        var mp3count;\n        var masking_LR = new_array_n$5([2, 2]);\n        /*\n         * LR masking &\n         * energy\n         */\n        masking_LR[0][0] = new III_psy_ratio();\n        masking_LR[0][1] = new III_psy_ratio();\n        masking_LR[1][0] = new III_psy_ratio();\n        masking_LR[1][1] = new III_psy_ratio();\n        var masking_MS = new_array_n$5([2, 2]);\n        /* MS masking & energy */\n        masking_MS[0][0] = new III_psy_ratio();\n        masking_MS[0][1] = new III_psy_ratio();\n        masking_MS[1][0] = new III_psy_ratio();\n        masking_MS[1][1] = new III_psy_ratio();\n        //III_psy_ratio masking[][];\n        var masking;\n        /* pointer to selected maskings */\n        var inbuf = [null, null];\n        var gfc = gfp.internal_flags;\n\n        var tot_ener = new_float_n$5([2, 4]);\n        var ms_ener_ratio = [.5, .5];\n        var pe = [[0., 0.], [0., 0.]];\n        var pe_MS = [[0., 0.], [0., 0.]];\n\n//float[][] pe_use;\n        var pe_use;\n\n        var ch, gr;\n\n        inbuf[0] = inbuf_l;\n        inbuf[1] = inbuf_r;\n\n        if (gfc.lame_encode_frame_init == 0) {\n            /* first run? */\n            lame_encode_frame_init(gfp, inbuf);\n\n        }\n\n        /********************** padding *****************************/\n        /**\n         * <PRE>\n         * padding method as described in\n         * \"MPEG-Layer3 / Bitstream Syntax and Decoding\"\n         * by Martin Sieler, Ralph Sperschneider\n         *\n         * note: there is no padding for the very first frame\n         *\n         * Robert Hegemann 2000-06-22\n         * </PRE>\n         */\n        gfc.padding = 0;\n        if ((gfc.slot_lag -= gfc.frac_SpF) < 0) {\n            gfc.slot_lag += gfp.out_samplerate;\n            gfc.padding = 1;\n        }\n\n        /****************************************\n         * Stage 1: psychoacoustic model *\n         ****************************************/\n\n        if (gfc.psymodel != 0) {\n            /*\n             * psychoacoustic model psy model has a 1 granule (576) delay that\n             * we must compensate for (mt 6/99).\n             */\n            var ret;\n            var bufp = [null, null];\n            /* address of beginning of left & right granule */\n            var bufpPos = 0;\n            /* address of beginning of left & right granule */\n            var blocktype = new_int$5(2);\n\n            for (gr = 0; gr < gfc.mode_gr; gr++) {\n\n                for (ch = 0; ch < gfc.channels_out; ch++) {\n                    bufp[ch] = inbuf[ch];\n                    bufpPos = 576 + gr * 576 - Encoder$2.FFTOFFSET;\n                }\n                if (gfp.VBR == VbrMode$5.vbr_mtrh || gfp.VBR == VbrMode$5.vbr_mt) {\n                    ret = psy.L3psycho_anal_vbr(gfp, bufp, bufpPos, gr,\n                        masking_LR, masking_MS, pe[gr], pe_MS[gr],\n                        tot_ener[gr], blocktype);\n                } else {\n                    ret = psy.L3psycho_anal_ns(gfp, bufp, bufpPos, gr,\n                        masking_LR, masking_MS, pe[gr], pe_MS[gr],\n                        tot_ener[gr], blocktype);\n                }\n                if (ret != 0)\n                    return -4;\n\n                if (gfp.mode == MPEGMode.JOINT_STEREO) {\n                    ms_ener_ratio[gr] = tot_ener[gr][2] + tot_ener[gr][3];\n                    if (ms_ener_ratio[gr] > 0)\n                        ms_ener_ratio[gr] = tot_ener[gr][3] / ms_ener_ratio[gr];\n                }\n\n                /* block type flags */\n                for (ch = 0; ch < gfc.channels_out; ch++) {\n                    var cod_info = gfc.l3_side.tt[gr][ch];\n                    cod_info.block_type = blocktype[ch];\n                    cod_info.mixed_block_flag = 0;\n                }\n            }\n        } else {\n            /* no psy model */\n            for (gr = 0; gr < gfc.mode_gr; gr++)\n                for (ch = 0; ch < gfc.channels_out; ch++) {\n                    gfc.l3_side.tt[gr][ch].block_type = Encoder$2.NORM_TYPE;\n                    gfc.l3_side.tt[gr][ch].mixed_block_flag = 0;\n                    pe_MS[gr][ch] = pe[gr][ch] = 700;\n                }\n        }\n\n        /* auto-adjust of ATH, useful for low volume */\n        adjust_ATH(gfc);\n\n        /****************************************\n         * Stage 2: MDCT *\n         ****************************************/\n\n        /* polyphase filtering / mdct */\n        newMDCT.mdct_sub48(gfc, inbuf[0], inbuf[1]);\n\n        /****************************************\n         * Stage 3: MS/LR decision *\n         ****************************************/\n\n        /* Here will be selected MS or LR coding of the 2 stereo channels */\n        gfc.mode_ext = Encoder$2.MPG_MD_LR_LR;\n\n        if (gfp.force_ms) {\n            gfc.mode_ext = Encoder$2.MPG_MD_MS_LR;\n        } else if (gfp.mode == MPEGMode.JOINT_STEREO) {\n            /*\n             * ms_ratio = is scaled, for historical reasons, to look like a\n             * ratio of side_channel / total. 0 = signal is 100% mono .5 = L & R\n             * uncorrelated\n             */\n\n            /**\n             * <PRE>\n             * [0] and [1] are the results for the two granules in MPEG-1,\n             * in MPEG-2 it's only a faked averaging of the same value\n             * _prev is the value of the last granule of the previous frame\n             * _next is the value of the first granule of the next frame\n             * </PRE>\n             */\n\n            var sum_pe_MS = 0.;\n            var sum_pe_LR = 0.;\n            for (gr = 0; gr < gfc.mode_gr; gr++) {\n                for (ch = 0; ch < gfc.channels_out; ch++) {\n                    sum_pe_MS += pe_MS[gr][ch];\n                    sum_pe_LR += pe[gr][ch];\n                }\n            }\n\n            /* based on PE: M/S coding would not use much more bits than L/R */\n            if (sum_pe_MS <= 1.00 * sum_pe_LR) {\n\n                var gi0 = gfc.l3_side.tt[0];\n                var gi1 = gfc.l3_side.tt[gfc.mode_gr - 1];\n\n                if (gi0[0].block_type == gi0[1].block_type\n                    && gi1[0].block_type == gi1[1].block_type) {\n\n                    gfc.mode_ext = Encoder$2.MPG_MD_MS_LR;\n                }\n            }\n        }\n\n        /* bit and noise allocation */\n        if (gfc.mode_ext == MPG_MD_MS_LR) {\n            masking = masking_MS;\n            /* use MS masking */\n            pe_use = pe_MS;\n        } else {\n            masking = masking_LR;\n            /* use LR masking */\n            pe_use = pe;\n        }\n\n        /* copy data for MP3 frame analyzer */\n        if (gfp.analysis && gfc.pinfo != null) {\n            for (gr = 0; gr < gfc.mode_gr; gr++) {\n                for (ch = 0; ch < gfc.channels_out; ch++) {\n                    gfc.pinfo.ms_ratio[gr] = gfc.ms_ratio[gr];\n                    gfc.pinfo.ms_ener_ratio[gr] = ms_ener_ratio[gr];\n                    gfc.pinfo.blocktype[gr][ch] = gfc.l3_side.tt[gr][ch].block_type;\n                    gfc.pinfo.pe[gr][ch] = pe_use[gr][ch];\n                    System$5.arraycopy(gfc.l3_side.tt[gr][ch].xr, 0,\n                        gfc.pinfo.xr[gr][ch], 0, 576);\n                    /*\n                     * in psymodel, LR and MS data was stored in pinfo. switch\n                     * to MS data:\n                     */\n                    if (gfc.mode_ext == MPG_MD_MS_LR) {\n                        gfc.pinfo.ers[gr][ch] = gfc.pinfo.ers[gr][ch + 2];\n                        System$5.arraycopy(gfc.pinfo.energy[gr][ch + 2], 0,\n                            gfc.pinfo.energy[gr][ch], 0,\n                            gfc.pinfo.energy[gr][ch].length);\n                    }\n                }\n            }\n        }\n\n        /****************************************\n         * Stage 4: quantization loop *\n         ****************************************/\n\n        if (gfp.VBR == VbrMode$5.vbr_off || gfp.VBR == VbrMode$5.vbr_abr) {\n\n            var i;\n            var f;\n\n            for (i = 0; i < 18; i++)\n                gfc.nsPsy.pefirbuf[i] = gfc.nsPsy.pefirbuf[i + 1];\n\n            f = 0.0;\n            for (gr = 0; gr < gfc.mode_gr; gr++)\n                for (ch = 0; ch < gfc.channels_out; ch++)\n                    f += pe_use[gr][ch];\n            gfc.nsPsy.pefirbuf[18] = f;\n\n            f = gfc.nsPsy.pefirbuf[9];\n            for (i = 0; i < 9; i++)\n                f += (gfc.nsPsy.pefirbuf[i] + gfc.nsPsy.pefirbuf[18 - i])\n                    * Encoder$2.fircoef[i];\n\n            f = (670 * 5 * gfc.mode_gr * gfc.channels_out) / f;\n            for (gr = 0; gr < gfc.mode_gr; gr++) {\n                for (ch = 0; ch < gfc.channels_out; ch++) {\n                    pe_use[gr][ch] *= f;\n                }\n            }\n        }\n        gfc.iteration_loop.iteration_loop(gfp, pe_use, ms_ener_ratio, masking);\n\n        /****************************************\n         * Stage 5: bitstream formatting *\n         ****************************************/\n\n        /* write the frame to the bitstream */\n        bs.format_bitstream(gfp);\n\n        /* copy mp3 bit buffer into array */\n        mp3count = bs.copy_buffer(gfc, mp3buf, mp3bufPos, mp3buf_size, 1);\n\n        if (gfp.bWriteVbrTag)\n            vbr.addVbrFrame(gfp);\n\n        if (gfp.analysis && gfc.pinfo != null) {\n            for (ch = 0; ch < gfc.channels_out; ch++) {\n                var j;\n                for (j = 0; j < FFTOFFSET; j++)\n                    gfc.pinfo.pcmdata[ch][j] = gfc.pinfo.pcmdata[ch][j\n                    + gfp.framesize];\n                for (j = FFTOFFSET; j < 1600; j++) {\n                    gfc.pinfo.pcmdata[ch][j] = inbuf[ch][j - FFTOFFSET];\n                }\n            }\n            qupvt.set_frame_pinfo(gfp, masking);\n        }\n\n        updateStats(gfc);\n\n        return mp3count;\n    };\n}\n\n\nvar Encoder_1 = Encoder$2;\n\nvar Util$4 = common.Util;\nvar new_float$4 = common.new_float;\nfunction FFT() {\n\n    var window = new_float$4(Encoder_1.BLKSIZE);\n    var window_s = new_float$4(Encoder_1.BLKSIZE_s / 2);\n\n    var costab = [\n        9.238795325112867e-01, 3.826834323650898e-01,\n        9.951847266721969e-01, 9.801714032956060e-02,\n        9.996988186962042e-01, 2.454122852291229e-02,\n        9.999811752826011e-01, 6.135884649154475e-03\n    ];\n\n    function fht(fz, fzPos, n) {\n        var tri = 0;\n        var k4;\n        var fi;\n        var gi;\n\n        n <<= 1;\n        /* to get BLKSIZE, because of 3DNow! ASM routine */\n        var fn = fzPos + n;\n        k4 = 4;\n        do {\n            var s1, c1;\n            var i, k1, k2, k3, kx;\n            kx = k4 >> 1;\n            k1 = k4;\n            k2 = k4 << 1;\n            k3 = k2 + k1;\n            k4 = k2 << 1;\n            fi = fzPos;\n            gi = fi + kx;\n            do {\n                var f0, f1, f2, f3;\n                f1 = fz[fi + 0] - fz[fi + k1];\n                f0 = fz[fi + 0] + fz[fi + k1];\n                f3 = fz[fi + k2] - fz[fi + k3];\n                f2 = fz[fi + k2] + fz[fi + k3];\n                fz[fi + k2] = f0 - f2;\n                fz[fi + 0] = f0 + f2;\n                fz[fi + k3] = f1 - f3;\n                fz[fi + k1] = f1 + f3;\n                f1 = fz[gi + 0] - fz[gi + k1];\n                f0 = fz[gi + 0] + fz[gi + k1];\n                f3 = (Util$4.SQRT2 * fz[gi + k3]);\n                f2 = (Util$4.SQRT2 * fz[gi + k2]);\n                fz[gi + k2] = f0 - f2;\n                fz[gi + 0] = f0 + f2;\n                fz[gi + k3] = f1 - f3;\n                fz[gi + k1] = f1 + f3;\n                gi += k4;\n                fi += k4;\n            } while (fi < fn);\n            c1 = costab[tri + 0];\n            s1 = costab[tri + 1];\n            for (i = 1; i < kx; i++) {\n                var c2, s2;\n                c2 = 1 - (2 * s1) * s1;\n                s2 = (2 * s1) * c1;\n                fi = fzPos + i;\n                gi = fzPos + k1 - i;\n                do {\n                    var a, b, g0, f0, f1, g1, f2, g2, f3, g3;\n                    b = s2 * fz[fi + k1] - c2 * fz[gi + k1];\n                    a = c2 * fz[fi + k1] + s2 * fz[gi + k1];\n                    f1 = fz[fi + 0] - a;\n                    f0 = fz[fi + 0] + a;\n                    g1 = fz[gi + 0] - b;\n                    g0 = fz[gi + 0] + b;\n                    b = s2 * fz[fi + k3] - c2 * fz[gi + k3];\n                    a = c2 * fz[fi + k3] + s2 * fz[gi + k3];\n                    f3 = fz[fi + k2] - a;\n                    f2 = fz[fi + k2] + a;\n                    g3 = fz[gi + k2] - b;\n                    g2 = fz[gi + k2] + b;\n                    b = s1 * f2 - c1 * g3;\n                    a = c1 * f2 + s1 * g3;\n                    fz[fi + k2] = f0 - a;\n                    fz[fi + 0] = f0 + a;\n                    fz[gi + k3] = g1 - b;\n                    fz[gi + k1] = g1 + b;\n                    b = c1 * g2 - s1 * f3;\n                    a = s1 * g2 + c1 * f3;\n                    fz[gi + k2] = g0 - a;\n                    fz[gi + 0] = g0 + a;\n                    fz[fi + k3] = f1 - b;\n                    fz[fi + k1] = f1 + b;\n                    gi += k4;\n                    fi += k4;\n                } while (fi < fn);\n                c2 = c1;\n                c1 = c2 * costab[tri + 0] - s1 * costab[tri + 1];\n                s1 = c2 * costab[tri + 1] + s1 * costab[tri + 0];\n            }\n            tri += 2;\n        } while (k4 < n);\n    }\n\n    var rv_tbl = [0x00, 0x80, 0x40,\n        0xc0, 0x20, 0xa0, 0x60, 0xe0, 0x10,\n        0x90, 0x50, 0xd0, 0x30, 0xb0, 0x70,\n        0xf0, 0x08, 0x88, 0x48, 0xc8, 0x28,\n        0xa8, 0x68, 0xe8, 0x18, 0x98, 0x58,\n        0xd8, 0x38, 0xb8, 0x78, 0xf8, 0x04,\n        0x84, 0x44, 0xc4, 0x24, 0xa4, 0x64,\n        0xe4, 0x14, 0x94, 0x54, 0xd4, 0x34,\n        0xb4, 0x74, 0xf4, 0x0c, 0x8c, 0x4c,\n        0xcc, 0x2c, 0xac, 0x6c, 0xec, 0x1c,\n        0x9c, 0x5c, 0xdc, 0x3c, 0xbc, 0x7c,\n        0xfc, 0x02, 0x82, 0x42, 0xc2, 0x22,\n        0xa2, 0x62, 0xe2, 0x12, 0x92, 0x52,\n        0xd2, 0x32, 0xb2, 0x72, 0xf2, 0x0a,\n        0x8a, 0x4a, 0xca, 0x2a, 0xaa, 0x6a,\n        0xea, 0x1a, 0x9a, 0x5a, 0xda, 0x3a,\n        0xba, 0x7a, 0xfa, 0x06, 0x86, 0x46,\n        0xc6, 0x26, 0xa6, 0x66, 0xe6, 0x16,\n        0x96, 0x56, 0xd6, 0x36, 0xb6, 0x76,\n        0xf6, 0x0e, 0x8e, 0x4e, 0xce, 0x2e,\n        0xae, 0x6e, 0xee, 0x1e, 0x9e, 0x5e,\n        0xde, 0x3e, 0xbe, 0x7e, 0xfe];\n\n    this.fft_short = function (gfc, x_real, chn, buffer, bufPos) {\n        for (var b = 0; b < 3; b++) {\n            var x = Encoder_1.BLKSIZE_s / 2;\n            var k = 0xffff & ((576 / 3) * (b + 1));\n            var j = Encoder_1.BLKSIZE_s / 8 - 1;\n            do {\n                var f0, f1, f2, f3, w;\n                var i = rv_tbl[j << 2] & 0xff;\n\n                f0 = window_s[i] * buffer[chn][bufPos + i + k];\n                w = window_s[0x7f - i] * buffer[chn][bufPos + i + k + 0x80];\n                f1 = f0 - w;\n                f0 = f0 + w;\n                f2 = window_s[i + 0x40] * buffer[chn][bufPos + i + k + 0x40];\n                w = window_s[0x3f - i] * buffer[chn][bufPos + i + k + 0xc0];\n                f3 = f2 - w;\n                f2 = f2 + w;\n\n                x -= 4;\n                x_real[b][x + 0] = f0 + f2;\n                x_real[b][x + 2] = f0 - f2;\n                x_real[b][x + 1] = f1 + f3;\n                x_real[b][x + 3] = f1 - f3;\n\n                f0 = window_s[i + 0x01] * buffer[chn][bufPos + i + k + 0x01];\n                w = window_s[0x7e - i] * buffer[chn][bufPos + i + k + 0x81];\n                f1 = f0 - w;\n                f0 = f0 + w;\n                f2 = window_s[i + 0x41] * buffer[chn][bufPos + i + k + 0x41];\n                w = window_s[0x3e - i] * buffer[chn][bufPos + i + k + 0xc1];\n                f3 = f2 - w;\n                f2 = f2 + w;\n\n                x_real[b][x + Encoder_1.BLKSIZE_s / 2 + 0] = f0 + f2;\n                x_real[b][x + Encoder_1.BLKSIZE_s / 2 + 2] = f0 - f2;\n                x_real[b][x + Encoder_1.BLKSIZE_s / 2 + 1] = f1 + f3;\n                x_real[b][x + Encoder_1.BLKSIZE_s / 2 + 3] = f1 - f3;\n            } while (--j >= 0);\n\n            fht(x_real[b], x, Encoder_1.BLKSIZE_s / 2);\n            /* BLKSIZE_s/2 because of 3DNow! ASM routine */\n            /* BLKSIZE/2 because of 3DNow! ASM routine */\n        }\n    };\n\n    this.fft_long = function (gfc, y, chn, buffer, bufPos) {\n        var jj = Encoder_1.BLKSIZE / 8 - 1;\n        var x = Encoder_1.BLKSIZE / 2;\n\n        do {\n            var f0, f1, f2, f3, w;\n            var i = rv_tbl[jj] & 0xff;\n            f0 = window[i] * buffer[chn][bufPos + i];\n            w = window[i + 0x200] * buffer[chn][bufPos + i + 0x200];\n            f1 = f0 - w;\n            f0 = f0 + w;\n            f2 = window[i + 0x100] * buffer[chn][bufPos + i + 0x100];\n            w = window[i + 0x300] * buffer[chn][bufPos + i + 0x300];\n            f3 = f2 - w;\n            f2 = f2 + w;\n\n            x -= 4;\n            y[x + 0] = f0 + f2;\n            y[x + 2] = f0 - f2;\n            y[x + 1] = f1 + f3;\n            y[x + 3] = f1 - f3;\n\n            f0 = window[i + 0x001] * buffer[chn][bufPos + i + 0x001];\n            w = window[i + 0x201] * buffer[chn][bufPos + i + 0x201];\n            f1 = f0 - w;\n            f0 = f0 + w;\n            f2 = window[i + 0x101] * buffer[chn][bufPos + i + 0x101];\n            w = window[i + 0x301] * buffer[chn][bufPos + i + 0x301];\n            f3 = f2 - w;\n            f2 = f2 + w;\n\n            y[x + Encoder_1.BLKSIZE / 2 + 0] = f0 + f2;\n            y[x + Encoder_1.BLKSIZE / 2 + 2] = f0 - f2;\n            y[x + Encoder_1.BLKSIZE / 2 + 1] = f1 + f3;\n            y[x + Encoder_1.BLKSIZE / 2 + 3] = f1 - f3;\n        } while (--jj >= 0);\n\n        fht(y, x, Encoder_1.BLKSIZE / 2);\n        /* BLKSIZE/2 because of 3DNow! ASM routine */\n    };\n\n    this.init_fft = function (gfc) {\n        /* The type of window used here will make no real difference, but */\n        /*\n         * in the interest of merging nspsytune stuff - switch to blackman\n         * window\n         */\n        for (var i = 0; i < Encoder_1.BLKSIZE; i++)\n            /* blackman window */\n            window[i] = (0.42 - 0.5 * Math.cos(2 * Math.PI * (i + .5)\n                / Encoder_1.BLKSIZE) + 0.08 * Math.cos(4 * Math.PI * (i + .5)\n                / Encoder_1.BLKSIZE));\n\n        for (var i = 0; i < Encoder_1.BLKSIZE_s / 2; i++)\n            window_s[i] = (0.5 * (1.0 - Math.cos(2.0 * Math.PI\n                * (i + 0.5) / Encoder_1.BLKSIZE_s)));\n\n    };\n\n}\n\nvar FFT_1 = FFT;\n\nvar VbrMode$3 = common.VbrMode;\nvar Float$3 = common.Float;\nvar ShortBlock$3 = common.ShortBlock;\nvar Util$3 = common.Util;\nvar Arrays$3 = common.Arrays;\nvar new_float$3 = common.new_float;\nvar new_float_n$3 = common.new_float_n;\nvar new_int$3 = common.new_int;\nvar assert$3 = common.assert;\n\n\n\n\nfunction PsyModel() {\n\n    var fft = new FFT_1();\n\n    var LOG10 = 2.30258509299404568402;\n\n    var rpelev = 2;\n    var rpelev2 = 16;\n    var rpelev_s = 2;\n    var rpelev2_s = 16;\n\n    /* size of each partition band, in barks: */\n    var DELBARK = .34;\n\n    /* tuned for output level (sensitive to energy scale) */\n    var VO_SCALE = (1. / (14752 * 14752) / (Encoder_1.BLKSIZE / 2));\n\n    var temporalmask_sustain_sec = 0.01;\n\n    var NS_PREECHO_ATT0 = 0.8;\n    var NS_PREECHO_ATT1 = 0.6;\n    var NS_PREECHO_ATT2 = 0.3;\n\n    var NS_MSFIX = 3.5;\n\n    var NSATTACKTHRE = 4.4;\n    var NSATTACKTHRE_S = 25;\n\n    var NSFIRLEN = 21;\n\n    /* size of each partition band, in barks: */\n    var LN_TO_LOG10 = 0.2302585093;\n\n    function NON_LINEAR_SCALE_ENERGY(x) {\n        return x;\n    }\n\n    /**\n     * <PRE>\n     *       L3psycho_anal.  Compute psycho acoustics.\n     *\n     *       Data returned to the calling program must be delayed by one\n     *       granule.\n     *\n     *       This is done in two places.\n     *       If we do not need to know the blocktype, the copying\n     *       can be done here at the top of the program: we copy the data for\n     *       the last granule (computed during the last call) before it is\n     *       overwritten with the new data.  It looks like this:\n     *\n     *       0. static psymodel_data\n     *       1. calling_program_data = psymodel_data\n     *       2. compute psymodel_data\n     *\n     *       For data which needs to know the blocktype, the copying must be\n     *       done at the end of this loop, and the old values must be saved:\n     *\n     *       0. static psymodel_data_old\n     *       1. compute psymodel_data\n     *       2. compute possible block type of this granule\n     *       3. compute final block type of previous granule based on #2.\n     *       4. calling_program_data = psymodel_data_old\n     *       5. psymodel_data_old = psymodel_data\n     *     psycho_loudness_approx\n     *       jd - 2001 mar 12\n     *    in:  energy   - BLKSIZE/2 elements of frequency magnitudes ^ 2\n     *         gfp      - uses out_samplerate, ATHtype (also needed for ATHformula)\n     *    returns: loudness^2 approximation, a positive value roughly tuned for a value\n     *             of 1.0 for signals near clipping.\n     *    notes:   When calibrated, feeding this function binary white noise at sample\n     *             values +32767 or -32768 should return values that approach 3.\n     *             ATHformula is used to approximate an equal loudness curve.\n     *    future:  Data indicates that the shape of the equal loudness curve varies\n     *             with intensity.  This function might be improved by using an equal\n     *             loudness curve shaped for typical playback levels (instead of the\n     *             ATH, that is shaped for the threshold).  A flexible realization might\n     *             simply bend the existing ATH curve to achieve the desired shape.\n     *             However, the potential gain may not be enough to justify an effort.\n     * </PRE>\n     */\n    function psycho_loudness_approx(energy, gfc) {\n        var loudness_power = 0.0;\n        /* apply weights to power in freq. bands */\n        for (var i = 0; i < Encoder_1.BLKSIZE / 2; ++i)\n            loudness_power += energy[i] * gfc.ATH.eql_w[i];\n        loudness_power *= VO_SCALE;\n\n        return loudness_power;\n    }\n\n    function compute_ffts(gfp, fftenergy, fftenergy_s, wsamp_l, wsamp_lPos, wsamp_s, wsamp_sPos, gr_out, chn, buffer, bufPos) {\n        var gfc = gfp.internal_flags;\n        if (chn < 2) {\n            fft.fft_long(gfc, wsamp_l[wsamp_lPos], chn, buffer, bufPos);\n            fft.fft_short(gfc, wsamp_s[wsamp_sPos], chn, buffer, bufPos);\n        }\n        /* FFT data for mid and side channel is derived from L & R */\n        else if (chn == 2) {\n            for (var j = Encoder_1.BLKSIZE - 1; j >= 0; --j) {\n                var l = wsamp_l[wsamp_lPos + 0][j];\n                var r = wsamp_l[wsamp_lPos + 1][j];\n                wsamp_l[wsamp_lPos + 0][j] = (l + r) * Util$3.SQRT2 * 0.5;\n                wsamp_l[wsamp_lPos + 1][j] = (l - r) * Util$3.SQRT2 * 0.5;\n            }\n            for (var b = 2; b >= 0; --b) {\n                for (var j = Encoder_1.BLKSIZE_s - 1; j >= 0; --j) {\n                    var l = wsamp_s[wsamp_sPos + 0][b][j];\n                    var r = wsamp_s[wsamp_sPos + 1][b][j];\n                    wsamp_s[wsamp_sPos + 0][b][j] = (l + r) * Util$3.SQRT2 * 0.5;\n                    wsamp_s[wsamp_sPos + 1][b][j] = (l - r) * Util$3.SQRT2 * 0.5;\n                }\n            }\n        }\n\n        /*********************************************************************\n         * compute energies\n         *********************************************************************/\n        fftenergy[0] = NON_LINEAR_SCALE_ENERGY(wsamp_l[wsamp_lPos + 0][0]);\n        fftenergy[0] *= fftenergy[0];\n\n        for (var j = Encoder_1.BLKSIZE / 2 - 1; j >= 0; --j) {\n            var re = (wsamp_l[wsamp_lPos + 0])[Encoder_1.BLKSIZE / 2 - j];\n            var im = (wsamp_l[wsamp_lPos + 0])[Encoder_1.BLKSIZE / 2 + j];\n            fftenergy[Encoder_1.BLKSIZE / 2 - j] = NON_LINEAR_SCALE_ENERGY((re\n                * re + im * im) * 0.5);\n        }\n        for (var b = 2; b >= 0; --b) {\n            fftenergy_s[b][0] = (wsamp_s[wsamp_sPos + 0])[b][0];\n            fftenergy_s[b][0] *= fftenergy_s[b][0];\n            for (var j = Encoder_1.BLKSIZE_s / 2 - 1; j >= 0; --j) {\n                var re = (wsamp_s[wsamp_sPos + 0])[b][Encoder_1.BLKSIZE_s\n                / 2 - j];\n                var im = (wsamp_s[wsamp_sPos + 0])[b][Encoder_1.BLKSIZE_s\n                / 2 + j];\n                fftenergy_s[b][Encoder_1.BLKSIZE_s / 2 - j] = NON_LINEAR_SCALE_ENERGY((re\n                    * re + im * im) * 0.5);\n            }\n        }\n        /* total energy */\n        {\n            var totalenergy = 0.0;\n            for (var j = 11; j < Encoder_1.HBLKSIZE; j++)\n                totalenergy += fftenergy[j];\n\n            gfc.tot_ener[chn] = totalenergy;\n        }\n\n        if (gfp.analysis) {\n            for (var j = 0; j < Encoder_1.HBLKSIZE; j++) {\n                gfc.pinfo.energy[gr_out][chn][j] = gfc.pinfo.energy_save[chn][j];\n                gfc.pinfo.energy_save[chn][j] = fftenergy[j];\n            }\n            gfc.pinfo.pe[gr_out][chn] = gfc.pe[chn];\n        }\n\n        /*********************************************************************\n         * compute loudness approximation (used for ATH auto-level adjustment)\n         *********************************************************************/\n        if (gfp.athaa_loudapprox == 2 && chn < 2) {\n            // no loudness for mid/side ch\n            gfc.loudness_sq[gr_out][chn] = gfc.loudness_sq_save[chn];\n            gfc.loudness_sq_save[chn] = psycho_loudness_approx(fftenergy, gfc);\n        }\n    }\n\n    /* mask_add optimization */\n    /* init the limit values used to avoid computing log in mask_add when it is not necessary */\n\n    /**\n     * <PRE>\n     *  For example, with i = 10*log10(m2/m1)/10*16         (= log10(m2/m1)*16)\n     *\n     * abs(i)>8 is equivalent (as i is an integer) to\n     * abs(i)>=9\n     * i>=9 || i<=-9\n     * equivalent to (as i is the biggest integer smaller than log10(m2/m1)*16\n     * or the smallest integer bigger than log10(m2/m1)*16 depending on the sign of log10(m2/m1)*16)\n     * log10(m2/m1)>=9/16 || log10(m2/m1)<=-9/16\n     * exp10 is strictly increasing thus this is equivalent to\n     * m2/m1 >= 10^(9/16) || m2/m1<=10^(-9/16) which are comparisons to constants\n     * </PRE>\n     */\n\n    /**\n     * as in if(i>8)\n     */\n    var I1LIMIT = 8;\n    /**\n     * as in if(i>24) . changed 23\n     */\n    var I2LIMIT = 23;\n    /**\n     * as in if(m<15)\n     */\n    var MLIMIT = 15;\n\n    var ma_max_i1;\n    var ma_max_i2;\n    var ma_max_m;\n\n    /**\n     * This is the masking table:<BR>\n     * According to tonality, values are going from 0dB (TMN) to 9.3dB (NMT).<BR>\n     * After additive masking computation, 8dB are added, so final values are\n     * going from 8dB to 17.3dB\n     *\n     * pow(10, -0.0..-0.6)\n     */\n    var tab = [1.0, 0.79433, 0.63096, 0.63096,\n        0.63096, 0.63096, 0.63096, 0.25119, 0.11749];\n\n    function init_mask_add_max_values() {\n        ma_max_i1 = Math.pow(10, (I1LIMIT + 1) / 16.0);\n        ma_max_i2 = Math.pow(10, (I2LIMIT + 1) / 16.0);\n        ma_max_m = Math.pow(10, (MLIMIT) / 10.0);\n    }\n\n    var table1 = [3.3246 * 3.3246,\n        3.23837 * 3.23837, 3.15437 * 3.15437, 3.00412 * 3.00412,\n        2.86103 * 2.86103, 2.65407 * 2.65407, 2.46209 * 2.46209,\n        2.284 * 2.284, 2.11879 * 2.11879, 1.96552 * 1.96552,\n        1.82335 * 1.82335, 1.69146 * 1.69146, 1.56911 * 1.56911,\n        1.46658 * 1.46658, 1.37074 * 1.37074, 1.31036 * 1.31036,\n        1.25264 * 1.25264, 1.20648 * 1.20648, 1.16203 * 1.16203,\n        1.12765 * 1.12765, 1.09428 * 1.09428, 1.0659 * 1.0659,\n        1.03826 * 1.03826, 1.01895 * 1.01895, 1];\n\n    var table2 = [1.33352 * 1.33352,\n        1.35879 * 1.35879, 1.38454 * 1.38454, 1.39497 * 1.39497,\n        1.40548 * 1.40548, 1.3537 * 1.3537, 1.30382 * 1.30382,\n        1.22321 * 1.22321, 1.14758 * 1.14758, 1];\n\n    var table3 = [2.35364 * 2.35364,\n        2.29259 * 2.29259, 2.23313 * 2.23313, 2.12675 * 2.12675,\n        2.02545 * 2.02545, 1.87894 * 1.87894, 1.74303 * 1.74303,\n        1.61695 * 1.61695, 1.49999 * 1.49999, 1.39148 * 1.39148,\n        1.29083 * 1.29083, 1.19746 * 1.19746, 1.11084 * 1.11084,\n        1.03826 * 1.03826];\n\n    /**\n     * addition of simultaneous masking Naoki Shibata 2000/7\n     */\n    function mask_add(m1, m2, kk, b, gfc, shortblock) {\n        var ratio;\n\n        if (m2 > m1) {\n            if (m2 < (m1 * ma_max_i2))\n                ratio = m2 / m1;\n            else\n                return (m1 + m2);\n        } else {\n            if (m1 >= (m2 * ma_max_i2))\n                return (m1 + m2);\n            ratio = m1 / m2;\n        }\n\n        /* Should always be true, just checking */\n        assert$3(m1 >= 0);\n        assert$3(m2 >= 0);\n\n        m1 += m2;\n        //if (((long)(b + 3) & 0xffffffff) <= 3 + 3) {\n        if ((b + 3) <= 3 + 3) {\n            /* approximately, 1 bark = 3 partitions */\n            /* 65% of the cases */\n            /* originally 'if(i > 8)' */\n            if (ratio >= ma_max_i1) {\n                /* 43% of the total */\n                return m1;\n            }\n\n            /* 22% of the total */\n            var i = 0 | (Util$3.FAST_LOG10_X(ratio, 16.0));\n            return m1 * table2[i];\n        }\n\n        /**\n         * <PRE>\n         * m<15 equ log10((m1+m2)/gfc.ATH.cb[k])<1.5\n         * equ (m1+m2)/gfc.ATH.cb[k]<10^1.5\n         * equ (m1+m2)<10^1.5 * gfc.ATH.cb[k]\n         * </PRE>\n         */\n        var i = 0 | Util$3.FAST_LOG10_X(ratio, 16.0);\n        if (shortblock != 0) {\n            m2 = gfc.ATH.cb_s[kk] * gfc.ATH.adjust;\n        } else {\n            m2 = gfc.ATH.cb_l[kk] * gfc.ATH.adjust;\n        }\n        assert$3(m2 >= 0);\n        if (m1 < ma_max_m * m2) {\n            /* 3% of the total */\n            /* Originally if (m > 0) { */\n            if (m1 > m2) {\n                var f, r;\n\n                f = 1.0;\n                if (i <= 13)\n                    f = table3[i];\n\n                r = Util$3.FAST_LOG10_X(m1 / m2, 10.0 / 15.0);\n                return m1 * ((table1[i] - f) * r + f);\n            }\n\n            if (i > 13)\n                return m1;\n\n            return m1 * table3[i];\n        }\n\n        /* 10% of total */\n        return m1 * table1[i];\n    }\n\n    var table2_ = [1.33352 * 1.33352,\n        1.35879 * 1.35879, 1.38454 * 1.38454, 1.39497 * 1.39497,\n        1.40548 * 1.40548, 1.3537 * 1.3537, 1.30382 * 1.30382,\n        1.22321 * 1.22321, 1.14758 * 1.14758, 1];\n\n    /**\n     * addition of simultaneous masking Naoki Shibata 2000/7\n     */\n    function vbrpsy_mask_add(m1, m2, b) {\n        var ratio;\n\n        if (m1 < 0) {\n            m1 = 0;\n        }\n        if (m2 < 0) {\n            m2 = 0;\n        }\n        if (m1 <= 0) {\n            return m2;\n        }\n        if (m2 <= 0) {\n            return m1;\n        }\n        if (m2 > m1) {\n            ratio = m2 / m1;\n        } else {\n            ratio = m1 / m2;\n        }\n        if (-2 <= b && b <= 2) {\n            /* approximately, 1 bark = 3 partitions */\n            /* originally 'if(i > 8)' */\n            if (ratio >= ma_max_i1) {\n                return m1 + m2;\n            } else {\n                var i = 0 | (Util$3.FAST_LOG10_X(ratio, 16.0));\n                return (m1 + m2) * table2_[i];\n            }\n        }\n        if (ratio < ma_max_i2) {\n            return m1 + m2;\n        }\n        if (m1 < m2) {\n            m1 = m2;\n        }\n        return m1;\n    }\n\n    /**\n     * compute interchannel masking effects\n     */\n    function calc_interchannel_masking(gfp, ratio) {\n        var gfc = gfp.internal_flags;\n        if (gfc.channels_out > 1) {\n            for (var sb = 0; sb < Encoder_1.SBMAX_l; sb++) {\n                var l = gfc.thm[0].l[sb];\n                var r = gfc.thm[1].l[sb];\n                gfc.thm[0].l[sb] += r * ratio;\n                gfc.thm[1].l[sb] += l * ratio;\n            }\n            for (var sb = 0; sb < Encoder_1.SBMAX_s; sb++) {\n                for (var sblock = 0; sblock < 3; sblock++) {\n                    var l = gfc.thm[0].s[sb][sblock];\n                    var r = gfc.thm[1].s[sb][sblock];\n                    gfc.thm[0].s[sb][sblock] += r * ratio;\n                    gfc.thm[1].s[sb][sblock] += l * ratio;\n                }\n            }\n        }\n    }\n\n    /**\n     * compute M/S thresholds from Johnston & Ferreira 1992 ICASSP paper\n     */\n    function msfix1(gfc) {\n        for (var sb = 0; sb < Encoder_1.SBMAX_l; sb++) {\n            /* use this fix if L & R masking differs by 2db or less */\n            /* if db = 10*log10(x2/x1) < 2 */\n            /* if (x2 < 1.58*x1) { */\n            if (gfc.thm[0].l[sb] > 1.58 * gfc.thm[1].l[sb]\n                || gfc.thm[1].l[sb] > 1.58 * gfc.thm[0].l[sb])\n                continue;\n            var mld = gfc.mld_l[sb] * gfc.en[3].l[sb];\n            var rmid = Math.max(gfc.thm[2].l[sb],\n                Math.min(gfc.thm[3].l[sb], mld));\n\n            mld = gfc.mld_l[sb] * gfc.en[2].l[sb];\n            var rside = Math.max(gfc.thm[3].l[sb],\n                Math.min(gfc.thm[2].l[sb], mld));\n            gfc.thm[2].l[sb] = rmid;\n            gfc.thm[3].l[sb] = rside;\n        }\n\n        for (var sb = 0; sb < Encoder_1.SBMAX_s; sb++) {\n            for (var sblock = 0; sblock < 3; sblock++) {\n                if (gfc.thm[0].s[sb][sblock] > 1.58 * gfc.thm[1].s[sb][sblock]\n                    || gfc.thm[1].s[sb][sblock] > 1.58 * gfc.thm[0].s[sb][sblock])\n                    continue;\n                var mld = gfc.mld_s[sb] * gfc.en[3].s[sb][sblock];\n                var rmid = Math.max(gfc.thm[2].s[sb][sblock],\n                    Math.min(gfc.thm[3].s[sb][sblock], mld));\n\n                mld = gfc.mld_s[sb] * gfc.en[2].s[sb][sblock];\n                var rside = Math.max(gfc.thm[3].s[sb][sblock],\n                    Math.min(gfc.thm[2].s[sb][sblock], mld));\n\n                gfc.thm[2].s[sb][sblock] = rmid;\n                gfc.thm[3].s[sb][sblock] = rside;\n            }\n        }\n    }\n\n    /**\n     * Adjust M/S maskings if user set \"msfix\"\n     *\n     * Naoki Shibata 2000\n     */\n    function ns_msfix(gfc, msfix, athadjust) {\n        var msfix2 = msfix;\n        var athlower = Math.pow(10, athadjust);\n\n        msfix *= 2.0;\n        msfix2 *= 2.0;\n        for (var sb = 0; sb < Encoder_1.SBMAX_l; sb++) {\n            var thmLR, thmM, thmS, ath;\n            ath = (gfc.ATH.cb_l[gfc.bm_l[sb]]) * athlower;\n            thmLR = Math.min(Math.max(gfc.thm[0].l[sb], ath),\n                Math.max(gfc.thm[1].l[sb], ath));\n            thmM = Math.max(gfc.thm[2].l[sb], ath);\n            thmS = Math.max(gfc.thm[3].l[sb], ath);\n            if (thmLR * msfix < thmM + thmS) {\n                var f = thmLR * msfix2 / (thmM + thmS);\n                thmM *= f;\n                thmS *= f;\n                assert$3(thmM + thmS > 0);\n            }\n            gfc.thm[2].l[sb] = Math.min(thmM, gfc.thm[2].l[sb]);\n            gfc.thm[3].l[sb] = Math.min(thmS, gfc.thm[3].l[sb]);\n        }\n\n        athlower *= ( Encoder_1.BLKSIZE_s / Encoder_1.BLKSIZE);\n        for (var sb = 0; sb < Encoder_1.SBMAX_s; sb++) {\n            for (var sblock = 0; sblock < 3; sblock++) {\n                var thmLR, thmM, thmS, ath;\n                ath = (gfc.ATH.cb_s[gfc.bm_s[sb]]) * athlower;\n                thmLR = Math.min(Math.max(gfc.thm[0].s[sb][sblock], ath),\n                    Math.max(gfc.thm[1].s[sb][sblock], ath));\n                thmM = Math.max(gfc.thm[2].s[sb][sblock], ath);\n                thmS = Math.max(gfc.thm[3].s[sb][sblock], ath);\n\n                if (thmLR * msfix < thmM + thmS) {\n                    var f = thmLR * msfix / (thmM + thmS);\n                    thmM *= f;\n                    thmS *= f;\n                    assert$3(thmM + thmS > 0);\n                }\n                gfc.thm[2].s[sb][sblock] = Math.min(gfc.thm[2].s[sb][sblock],\n                    thmM);\n                gfc.thm[3].s[sb][sblock] = Math.min(gfc.thm[3].s[sb][sblock],\n                    thmS);\n            }\n        }\n    }\n\n    /**\n     * short block threshold calculation (part 2)\n     *\n     * partition band bo_s[sfb] is at the transition from scalefactor band sfb\n     * to the next one sfb+1; enn and thmm have to be split between them\n     */\n    function convert_partition2scalefac_s(gfc, eb, thr, chn, sblock) {\n        var sb, b;\n        var enn = 0.0;\n        var thmm = 0.0;\n        for (sb = b = 0; sb < Encoder_1.SBMAX_s; ++b, ++sb) {\n            var bo_s_sb = gfc.bo_s[sb];\n            var npart_s = gfc.npart_s;\n            var b_lim = bo_s_sb < npart_s ? bo_s_sb : npart_s;\n            while (b < b_lim) {\n                assert$3(eb[b] >= 0);\n                // iff failed, it may indicate some index error elsewhere\n                assert$3(thr[b] >= 0);\n                enn += eb[b];\n                thmm += thr[b];\n                b++;\n            }\n            gfc.en[chn].s[sb][sblock] = enn;\n            gfc.thm[chn].s[sb][sblock] = thmm;\n\n            if (b >= npart_s) {\n                ++sb;\n                break;\n            }\n            assert$3(eb[b] >= 0);\n            // iff failed, it may indicate some index error elsewhere\n            assert$3(thr[b] >= 0);\n            {\n                /* at transition sfb . sfb+1 */\n                var w_curr = gfc.PSY.bo_s_weight[sb];\n                var w_next = 1.0 - w_curr;\n                enn = w_curr * eb[b];\n                thmm = w_curr * thr[b];\n                gfc.en[chn].s[sb][sblock] += enn;\n                gfc.thm[chn].s[sb][sblock] += thmm;\n                enn = w_next * eb[b];\n                thmm = w_next * thr[b];\n            }\n        }\n        /* zero initialize the rest */\n        for (; sb < Encoder_1.SBMAX_s; ++sb) {\n            gfc.en[chn].s[sb][sblock] = 0;\n            gfc.thm[chn].s[sb][sblock] = 0;\n        }\n    }\n\n    /**\n     * longblock threshold calculation (part 2)\n     */\n    function convert_partition2scalefac_l(gfc, eb, thr, chn) {\n        var sb, b;\n        var enn = 0.0;\n        var thmm = 0.0;\n        for (sb = b = 0; sb < Encoder_1.SBMAX_l; ++b, ++sb) {\n            var bo_l_sb = gfc.bo_l[sb];\n            var npart_l = gfc.npart_l;\n            var b_lim = bo_l_sb < npart_l ? bo_l_sb : npart_l;\n            while (b < b_lim) {\n                assert$3(eb[b] >= 0);\n                // iff failed, it may indicate some index error elsewhere\n                assert$3(thr[b] >= 0);\n                enn += eb[b];\n                thmm += thr[b];\n                b++;\n            }\n            gfc.en[chn].l[sb] = enn;\n            gfc.thm[chn].l[sb] = thmm;\n\n            if (b >= npart_l) {\n                ++sb;\n                break;\n            }\n            assert$3(eb[b] >= 0);\n            assert$3(thr[b] >= 0);\n            {\n                /* at transition sfb . sfb+1 */\n                var w_curr = gfc.PSY.bo_l_weight[sb];\n                var w_next = 1.0 - w_curr;\n                enn = w_curr * eb[b];\n                thmm = w_curr * thr[b];\n                gfc.en[chn].l[sb] += enn;\n                gfc.thm[chn].l[sb] += thmm;\n                enn = w_next * eb[b];\n                thmm = w_next * thr[b];\n            }\n        }\n        /* zero initialize the rest */\n        for (; sb < Encoder_1.SBMAX_l; ++sb) {\n            gfc.en[chn].l[sb] = 0;\n            gfc.thm[chn].l[sb] = 0;\n        }\n    }\n\n    function compute_masking_s(gfp, fftenergy_s, eb, thr, chn, sblock) {\n        var gfc = gfp.internal_flags;\n        var j, b;\n\n        for (b = j = 0; b < gfc.npart_s; ++b) {\n            var ebb = 0, m = 0;\n            var n = gfc.numlines_s[b];\n            for (var i = 0; i < n; ++i, ++j) {\n                var el = fftenergy_s[sblock][j];\n                ebb += el;\n                if (m < el)\n                    m = el;\n            }\n            eb[b] = ebb;\n        }\n        assert$3(b == gfc.npart_s);\n        assert$3(j == 129);\n        for (j = b = 0; b < gfc.npart_s; b++) {\n            var kk = gfc.s3ind_s[b][0];\n            var ecb = gfc.s3_ss[j++] * eb[kk];\n            ++kk;\n            while (kk <= gfc.s3ind_s[b][1]) {\n                ecb += gfc.s3_ss[j] * eb[kk];\n                ++j;\n                ++kk;\n            }\n\n            { /* limit calculated threshold by previous granule */\n                var x = rpelev_s * gfc.nb_s1[chn][b];\n                thr[b] = Math.min(ecb, x);\n            }\n            if (gfc.blocktype_old[chn & 1] == Encoder_1.SHORT_TYPE) {\n                /* limit calculated threshold by even older granule */\n                var x = rpelev2_s * gfc.nb_s2[chn][b];\n                var y = thr[b];\n                thr[b] = Math.min(x, y);\n            }\n\n            gfc.nb_s2[chn][b] = gfc.nb_s1[chn][b];\n            gfc.nb_s1[chn][b] = ecb;\n            assert$3(thr[b] >= 0);\n        }\n        for (; b <= Encoder_1.CBANDS; ++b) {\n            eb[b] = 0;\n            thr[b] = 0;\n        }\n    }\n\n    function block_type_set(gfp, uselongblock, blocktype_d, blocktype) {\n        var gfc = gfp.internal_flags;\n\n        if (gfp.short_blocks == ShortBlock$3.short_block_coupled\n                /* force both channels to use the same block type */\n                /* this is necessary if the frame is to be encoded in ms_stereo. */\n                /* But even without ms_stereo, FhG does this */\n            && !(uselongblock[0] != 0 && uselongblock[1] != 0))\n            uselongblock[0] = uselongblock[1] = 0;\n\n        /*\n         * update the blocktype of the previous granule, since it depends on\n         * what happend in this granule\n         */\n        for (var chn = 0; chn < gfc.channels_out; chn++) {\n            blocktype[chn] = Encoder_1.NORM_TYPE;\n            /* disable short blocks */\n            if (gfp.short_blocks == ShortBlock$3.short_block_dispensed)\n                uselongblock[chn] = 1;\n            if (gfp.short_blocks == ShortBlock$3.short_block_forced)\n                uselongblock[chn] = 0;\n\n            if (uselongblock[chn] != 0) {\n                /* no attack : use long blocks */\n                assert$3(gfc.blocktype_old[chn] != Encoder_1.START_TYPE);\n                if (gfc.blocktype_old[chn] == Encoder_1.SHORT_TYPE)\n                    blocktype[chn] = Encoder_1.STOP_TYPE;\n            } else {\n                /* attack : use short blocks */\n                blocktype[chn] = Encoder_1.SHORT_TYPE;\n                if (gfc.blocktype_old[chn] == Encoder_1.NORM_TYPE) {\n                    gfc.blocktype_old[chn] = Encoder_1.START_TYPE;\n                }\n                if (gfc.blocktype_old[chn] == Encoder_1.STOP_TYPE)\n                    gfc.blocktype_old[chn] = Encoder_1.SHORT_TYPE;\n            }\n\n            blocktype_d[chn] = gfc.blocktype_old[chn];\n            // value returned to calling program\n            gfc.blocktype_old[chn] = blocktype[chn];\n            // save for next call to l3psy_anal\n        }\n    }\n\n    function NS_INTERP(x, y, r) {\n        /* was pow((x),(r))*pow((y),1-(r)) */\n        if (r >= 1.0) {\n            /* 99.7% of the time */\n            return x;\n        }\n        if (r <= 0.0)\n            return y;\n        if (y > 0.0) {\n            /* rest of the time */\n            return (Math.pow(x / y, r) * y);\n        }\n        /* never happens */\n        return 0.0;\n    }\n\n    /**\n     * these values are tuned only for 44.1kHz...\n     */\n    var regcoef_s = [11.8, 13.6, 17.2, 32, 46.5,\n        51.3, 57.5, 67.1, 71.5, 84.6, 97.6, 130,\n        /* 255.8 */\n    ];\n\n    function pecalc_s(mr, masking_lower) {\n        var pe_s = 1236.28 / 4;\n        for (var sb = 0; sb < Encoder_1.SBMAX_s - 1; sb++) {\n            for (var sblock = 0; sblock < 3; sblock++) {\n                var thm = mr.thm.s[sb][sblock];\n                assert$3(sb < regcoef_s.length);\n                if (thm > 0.0) {\n                    var x = thm * masking_lower;\n                    var en = mr.en.s[sb][sblock];\n                    if (en > x) {\n                        if (en > x * 1e10) {\n                            pe_s += regcoef_s[sb] * (10.0 * LOG10);\n                        } else {\n                            assert$3(x > 0);\n                            pe_s += regcoef_s[sb] * Util$3.FAST_LOG10(en / x);\n                        }\n                    }\n                }\n            }\n        }\n\n        return pe_s;\n    }\n\n    /**\n     * these values are tuned only for 44.1kHz...\n     */\n    var regcoef_l = [6.8, 5.8, 5.8, 6.4, 6.5, 9.9,\n        12.1, 14.4, 15, 18.9, 21.6, 26.9, 34.2, 40.2, 46.8, 56.5,\n        60.7, 73.9, 85.7, 93.4, 126.1,\n        /* 241.3 */\n    ];\n\n    function pecalc_l(mr, masking_lower) {\n        var pe_l = 1124.23 / 4;\n        for (var sb = 0; sb < Encoder_1.SBMAX_l - 1; sb++) {\n            var thm = mr.thm.l[sb];\n            assert$3(sb < regcoef_l.length);\n            if (thm > 0.0) {\n                var x = thm * masking_lower;\n                var en = mr.en.l[sb];\n                if (en > x) {\n                    if (en > x * 1e10) {\n                        pe_l += regcoef_l[sb] * (10.0 * LOG10);\n                    } else {\n                        assert$3(x > 0);\n                        pe_l += regcoef_l[sb] * Util$3.FAST_LOG10(en / x);\n                    }\n                }\n            }\n        }\n        return pe_l;\n    }\n\n    function calc_energy(gfc, fftenergy, eb, max, avg) {\n        var b, j;\n\n        for (b = j = 0; b < gfc.npart_l; ++b) {\n            var ebb = 0, m = 0;\n            var i;\n            for (i = 0; i < gfc.numlines_l[b]; ++i, ++j) {\n                var el = fftenergy[j];\n                assert$3(el >= 0);\n                ebb += el;\n                if (m < el)\n                    m = el;\n            }\n            eb[b] = ebb;\n            max[b] = m;\n            avg[b] = ebb * gfc.rnumlines_l[b];\n            assert$3(gfc.rnumlines_l[b] >= 0);\n            assert$3(ebb >= 0);\n            assert$3(eb[b] >= 0);\n            assert$3(max[b] >= 0);\n            assert$3(avg[b] >= 0);\n        }\n    }\n\n    function calc_mask_index_l(gfc, max, avg, mask_idx) {\n        var last_tab_entry = tab.length - 1;\n        var b = 0;\n        var a = avg[b] + avg[b + 1];\n        assert$3(a >= 0);\n        if (a > 0.0) {\n            var m = max[b];\n            if (m < max[b + 1])\n                m = max[b + 1];\n            assert$3((gfc.numlines_l[b] + gfc.numlines_l[b + 1] - 1) > 0);\n            a = 20.0 * (m * 2.0 - a)\n                / (a * (gfc.numlines_l[b] + gfc.numlines_l[b + 1] - 1));\n            var k = 0 | a;\n            if (k > last_tab_entry)\n                k = last_tab_entry;\n            mask_idx[b] = k;\n        } else {\n            mask_idx[b] = 0;\n        }\n\n        for (b = 1; b < gfc.npart_l - 1; b++) {\n            a = avg[b - 1] + avg[b] + avg[b + 1];\n            assert$3(a >= 0);\n            if (a > 0.0) {\n                var m = max[b - 1];\n                if (m < max[b])\n                    m = max[b];\n                if (m < max[b + 1])\n                    m = max[b + 1];\n                assert$3((gfc.numlines_l[b - 1] + gfc.numlines_l[b] + gfc.numlines_l[b + 1] - 1) > 0);\n                a = 20.0\n                    * (m * 3.0 - a)\n                    / (a * (gfc.numlines_l[b - 1] + gfc.numlines_l[b]\n                    + gfc.numlines_l[b + 1] - 1));\n                var k = 0 | a;\n                if (k > last_tab_entry)\n                    k = last_tab_entry;\n                mask_idx[b] = k;\n            } else {\n                mask_idx[b] = 0;\n            }\n        }\n        assert$3(b > 0);\n        assert$3(b == gfc.npart_l - 1);\n\n        a = avg[b - 1] + avg[b];\n        assert$3(a >= 0);\n        if (a > 0.0) {\n            var m = max[b - 1];\n            if (m < max[b])\n                m = max[b];\n            assert$3((gfc.numlines_l[b - 1] + gfc.numlines_l[b] - 1) > 0);\n            a = 20.0 * (m * 2.0 - a)\n                / (a * (gfc.numlines_l[b - 1] + gfc.numlines_l[b] - 1));\n            var k = 0 | a;\n            if (k > last_tab_entry)\n                k = last_tab_entry;\n            mask_idx[b] = k;\n        } else {\n            mask_idx[b] = 0;\n        }\n        assert$3(b == (gfc.npart_l - 1));\n    }\n\n    var fircoef = [\n        -8.65163e-18 * 2, -0.00851586 * 2, -6.74764e-18 * 2, 0.0209036 * 2,\n        -3.36639e-17 * 2, -0.0438162 * 2, -1.54175e-17 * 2, 0.0931738 * 2,\n        -5.52212e-17 * 2, -0.313819 * 2\n    ];\n\n    this.L3psycho_anal_ns = function (gfp, buffer, bufPos, gr_out, masking_ratio, masking_MS_ratio, percep_entropy, percep_MS_entropy, energy, blocktype_d) {\n        /*\n         * to get a good cache performance, one has to think about the sequence,\n         * in which the variables are used.\n         */\n        var gfc = gfp.internal_flags;\n\n        /* fft and energy calculation */\n        var wsamp_L = new_float_n$3([2, Encoder_1.BLKSIZE]);\n        var wsamp_S = new_float_n$3([2, 3, Encoder_1.BLKSIZE_s]);\n\n        /* convolution */\n        var eb_l = new_float$3(Encoder_1.CBANDS + 1);\n        var eb_s = new_float$3(Encoder_1.CBANDS + 1);\n        var thr = new_float$3(Encoder_1.CBANDS + 2);\n\n        /* block type */\n        var blocktype = new_int$3(2), uselongblock = new_int$3(2);\n\n        /* usual variables like loop indices, etc.. */\n        var numchn, chn;\n        var b, i, j, k;\n        var sb, sblock;\n\n        /* variables used for --nspsytune */\n        var ns_hpfsmpl = new_float_n$3([2, 576]);\n        var pcfact;\n        var mask_idx_l = new_int$3(Encoder_1.CBANDS + 2), mask_idx_s = new_int$3(Encoder_1.CBANDS + 2);\n\n        Arrays$3.fill(mask_idx_s, 0);\n\n        numchn = gfc.channels_out;\n        /* chn=2 and 3 = Mid and Side channels */\n        if (gfp.mode == MPEGMode.JOINT_STEREO)\n            numchn = 4;\n\n        if (gfp.VBR == VbrMode$3.vbr_off)\n            pcfact = gfc.ResvMax == 0 ? 0 : ( gfc.ResvSize)\n            / gfc.ResvMax * 0.5;\n        else if (gfp.VBR == VbrMode$3.vbr_rh || gfp.VBR == VbrMode$3.vbr_mtrh\n            || gfp.VBR == VbrMode$3.vbr_mt) {\n            pcfact = 0.6;\n        } else\n            pcfact = 1.0;\n\n        /**********************************************************************\n         * Apply HPF of fs/4 to the input signal. This is used for attack\n         * detection / handling.\n         **********************************************************************/\n        /* Don't copy the input buffer into a temporary buffer */\n        /* unroll the loop 2 times */\n        for (chn = 0; chn < gfc.channels_out; chn++) {\n            /* apply high pass filter of fs/4 */\n            var firbuf = buffer[chn];\n            var firbufPos = bufPos + 576 - 350 - NSFIRLEN + 192;\n            assert$3(fircoef.length == ((NSFIRLEN - 1) / 2));\n            for (i = 0; i < 576; i++) {\n                var sum1, sum2;\n                sum1 = firbuf[firbufPos + i + 10];\n                sum2 = 0.0;\n                for (j = 0; j < ((NSFIRLEN - 1) / 2) - 1; j += 2) {\n                    sum1 += fircoef[j]\n                        * (firbuf[firbufPos + i + j] + firbuf[firbufPos + i\n                        + NSFIRLEN - j]);\n                    sum2 += fircoef[j + 1]\n                        * (firbuf[firbufPos + i + j + 1] + firbuf[firbufPos\n                        + i + NSFIRLEN - j - 1]);\n                }\n                ns_hpfsmpl[chn][i] = sum1 + sum2;\n            }\n            masking_ratio[gr_out][chn].en.assign(gfc.en[chn]);\n            masking_ratio[gr_out][chn].thm.assign(gfc.thm[chn]);\n            if (numchn > 2) {\n                /* MS maskings */\n                /* percep_MS_entropy [chn-2] = gfc . pe [chn]; */\n                masking_MS_ratio[gr_out][chn].en.assign(gfc.en[chn + 2]);\n                masking_MS_ratio[gr_out][chn].thm.assign(gfc.thm[chn + 2]);\n            }\n        }\n\n        for (chn = 0; chn < numchn; chn++) {\n            var wsamp_l;\n            var wsamp_s;\n            var en_subshort = new_float$3(12);\n            var en_short = [0, 0, 0, 0];\n            var attack_intensity = new_float$3(12);\n            var ns_uselongblock = 1;\n            var attackThreshold;\n            var max = new_float$3(Encoder_1.CBANDS), avg = new_float$3(Encoder_1.CBANDS);\n            var ns_attacks = [0, 0, 0, 0];\n            var fftenergy = new_float$3(Encoder_1.HBLKSIZE);\n            var fftenergy_s = new_float_n$3([3, Encoder_1.HBLKSIZE_s]);\n\n            /*\n             * rh 20040301: the following loops do access one off the limits so\n             * I increase the array dimensions by one and initialize the\n             * accessed values to zero\n             */\n            assert$3(gfc.npart_s <= Encoder_1.CBANDS);\n            assert$3(gfc.npart_l <= Encoder_1.CBANDS);\n\n            /***************************************************************\n             * determine the block type (window type)\n             ***************************************************************/\n            /* calculate energies of each sub-shortblocks */\n            for (i = 0; i < 3; i++) {\n                en_subshort[i] = gfc.nsPsy.last_en_subshort[chn][i + 6];\n                assert$3(gfc.nsPsy.last_en_subshort[chn][i + 4] > 0);\n                attack_intensity[i] = en_subshort[i]\n                    / gfc.nsPsy.last_en_subshort[chn][i + 4];\n                en_short[0] += en_subshort[i];\n            }\n\n            if (chn == 2) {\n                for (i = 0; i < 576; i++) {\n                    var l, r;\n                    l = ns_hpfsmpl[0][i];\n                    r = ns_hpfsmpl[1][i];\n                    ns_hpfsmpl[0][i] = l + r;\n                    ns_hpfsmpl[1][i] = l - r;\n                }\n            }\n            {\n                var pf = ns_hpfsmpl[chn & 1];\n                var pfPos = 0;\n                for (i = 0; i < 9; i++) {\n                    var pfe = pfPos + 576 / 9;\n                    var p = 1.;\n                    for (; pfPos < pfe; pfPos++)\n                        if (p < Math.abs(pf[pfPos]))\n                            p = Math.abs(pf[pfPos]);\n\n                    gfc.nsPsy.last_en_subshort[chn][i] = en_subshort[i + 3] = p;\n                    en_short[1 + i / 3] += p;\n                    if (p > en_subshort[i + 3 - 2]) {\n                        assert$3(en_subshort[i + 3 - 2] > 0);\n                        p = p / en_subshort[i + 3 - 2];\n                    } else if (en_subshort[i + 3 - 2] > p * 10.0) {\n                        assert$3(p > 0);\n                        p = en_subshort[i + 3 - 2] / (p * 10.0);\n                    } else\n                        p = 0.0;\n                    attack_intensity[i + 3] = p;\n                }\n            }\n\n            if (gfp.analysis) {\n                var x = attack_intensity[0];\n                for (i = 1; i < 12; i++)\n                    if (x < attack_intensity[i])\n                        x = attack_intensity[i];\n                gfc.pinfo.ers[gr_out][chn] = gfc.pinfo.ers_save[chn];\n                gfc.pinfo.ers_save[chn] = x;\n            }\n\n            /* compare energies between sub-shortblocks */\n            attackThreshold = (chn == 3) ? gfc.nsPsy.attackthre_s\n                : gfc.nsPsy.attackthre;\n            for (i = 0; i < 12; i++)\n                if (0 == ns_attacks[i / 3]\n                    && attack_intensity[i] > attackThreshold)\n                    ns_attacks[i / 3] = (i % 3) + 1;\n\n            /*\n             * should have energy change between short blocks, in order to avoid\n             * periodic signals\n             */\n            for (i = 1; i < 4; i++) {\n                var ratio;\n                if (en_short[i - 1] > en_short[i]) {\n                    assert$3(en_short[i] > 0);\n                    ratio = en_short[i - 1] / en_short[i];\n                } else {\n                    assert$3(en_short[i - 1] > 0);\n                    ratio = en_short[i] / en_short[i - 1];\n                }\n                if (ratio < 1.7) {\n                    ns_attacks[i] = 0;\n                    if (i == 1)\n                        ns_attacks[0] = 0;\n                }\n            }\n\n            if (ns_attacks[0] != 0 && gfc.nsPsy.lastAttacks[chn] != 0)\n                ns_attacks[0] = 0;\n\n            if (gfc.nsPsy.lastAttacks[chn] == 3\n                || (ns_attacks[0] + ns_attacks[1] + ns_attacks[2] + ns_attacks[3]) != 0) {\n                ns_uselongblock = 0;\n\n                if (ns_attacks[1] != 0 && ns_attacks[0] != 0)\n                    ns_attacks[1] = 0;\n                if (ns_attacks[2] != 0 && ns_attacks[1] != 0)\n                    ns_attacks[2] = 0;\n                if (ns_attacks[3] != 0 && ns_attacks[2] != 0)\n                    ns_attacks[3] = 0;\n            }\n\n            if (chn < 2) {\n                uselongblock[chn] = ns_uselongblock;\n            } else {\n                if (ns_uselongblock == 0) {\n                    uselongblock[0] = uselongblock[1] = 0;\n                }\n            }\n\n            /*\n             * there is a one granule delay. Copy maskings computed last call\n             * into masking_ratio to return to calling program.\n             */\n            energy[chn] = gfc.tot_ener[chn];\n\n            /*********************************************************************\n             * compute FFTs\n             *********************************************************************/\n            wsamp_s = wsamp_S;\n            wsamp_l = wsamp_L;\n            compute_ffts(gfp, fftenergy, fftenergy_s, wsamp_l, (chn & 1),\n                wsamp_s, (chn & 1), gr_out, chn, buffer, bufPos);\n\n            /*********************************************************************\n             * Calculate the energy and the tonality of each partition.\n             *********************************************************************/\n            calc_energy(gfc, fftenergy, eb_l, max, avg);\n            calc_mask_index_l(gfc, max, avg, mask_idx_l);\n            /* compute masking thresholds for short blocks */\n            for (sblock = 0; sblock < 3; sblock++) {\n                var enn, thmm;\n                compute_masking_s(gfp, fftenergy_s, eb_s, thr, chn, sblock);\n                convert_partition2scalefac_s(gfc, eb_s, thr, chn, sblock);\n                /**** short block pre-echo control ****/\n                for (sb = 0; sb < Encoder_1.SBMAX_s; sb++) {\n                    thmm = gfc.thm[chn].s[sb][sblock];\n\n                    thmm *= NS_PREECHO_ATT0;\n                    if (ns_attacks[sblock] >= 2 || ns_attacks[sblock + 1] == 1) {\n                        var idx = (sblock != 0) ? sblock - 1 : 2;\n                        var p = NS_INTERP(gfc.thm[chn].s[sb][idx], thmm,\n                            NS_PREECHO_ATT1 * pcfact);\n                        thmm = Math.min(thmm, p);\n                    }\n\n                    if (ns_attacks[sblock] == 1) {\n                        var idx = (sblock != 0) ? sblock - 1 : 2;\n                        var p = NS_INTERP(gfc.thm[chn].s[sb][idx], thmm,\n                            NS_PREECHO_ATT2 * pcfact);\n                        thmm = Math.min(thmm, p);\n                    } else if ((sblock != 0 && ns_attacks[sblock - 1] == 3)\n                        || (sblock == 0 && gfc.nsPsy.lastAttacks[chn] == 3)) {\n                        var idx = (sblock != 2) ? sblock + 1 : 0;\n                        var p = NS_INTERP(gfc.thm[chn].s[sb][idx], thmm,\n                            NS_PREECHO_ATT2 * pcfact);\n                        thmm = Math.min(thmm, p);\n                    }\n\n                    /* pulse like signal detection for fatboy.wav and so on */\n                    enn = en_subshort[sblock * 3 + 3]\n                        + en_subshort[sblock * 3 + 4]\n                        + en_subshort[sblock * 3 + 5];\n                    if (en_subshort[sblock * 3 + 5] * 6 < enn) {\n                        thmm *= 0.5;\n                        if (en_subshort[sblock * 3 + 4] * 6 < enn)\n                            thmm *= 0.5;\n                    }\n\n                    gfc.thm[chn].s[sb][sblock] = thmm;\n                }\n            }\n            gfc.nsPsy.lastAttacks[chn] = ns_attacks[2];\n\n            /*********************************************************************\n             * convolve the partitioned energy and unpredictability with the\n             * spreading function, s3_l[b][k]\n             ********************************************************************/\n            k = 0;\n            {\n                for (b = 0; b < gfc.npart_l; b++) {\n                    /*\n                     * convolve the partitioned energy with the spreading\n                     * function\n                     */\n                    var kk = gfc.s3ind[b][0];\n                    var eb2 = eb_l[kk] * tab[mask_idx_l[kk]];\n                    var ecb = gfc.s3_ll[k++] * eb2;\n                    while (++kk <= gfc.s3ind[b][1]) {\n                        eb2 = eb_l[kk] * tab[mask_idx_l[kk]];\n                        ecb = mask_add(ecb, gfc.s3_ll[k++] * eb2, kk, kk - b,\n                            gfc, 0);\n                    }\n                    ecb *= 0.158489319246111;\n                    /* pow(10,-0.8) */\n\n                    /**** long block pre-echo control ****/\n                    /**\n                     * <PRE>\n                     * dont use long block pre-echo control if previous granule was\n                     * a short block.  This is to avoid the situation:\n                     * frame0:  quiet (very low masking)\n                     * frame1:  surge  (triggers short blocks)\n                     * frame2:  regular frame.  looks like pre-echo when compared to\n                     *          frame0, but all pre-echo was in frame1.\n                     * </PRE>\n                     */\n                    /*\n                     * chn=0,1 L and R channels\n                     *\n                     * chn=2,3 S and M channels.\n                     */\n\n                    if (gfc.blocktype_old[chn & 1] == Encoder_1.SHORT_TYPE)\n                        thr[b] = ecb;\n                    else\n                        thr[b] = NS_INTERP(\n                            Math.min(ecb, Math.min(rpelev\n                                * gfc.nb_1[chn][b], rpelev2\n                                * gfc.nb_2[chn][b])), ecb, pcfact);\n\n                    gfc.nb_2[chn][b] = gfc.nb_1[chn][b];\n                    gfc.nb_1[chn][b] = ecb;\n                }\n            }\n            for (; b <= Encoder_1.CBANDS; ++b) {\n                eb_l[b] = 0;\n                thr[b] = 0;\n            }\n            /* compute masking thresholds for long blocks */\n            convert_partition2scalefac_l(gfc, eb_l, thr, chn);\n        }\n        /* end loop over chn */\n\n        if (gfp.mode == MPEGMode.STEREO || gfp.mode == MPEGMode.JOINT_STEREO) {\n            if (gfp.interChRatio > 0.0) {\n                calc_interchannel_masking(gfp, gfp.interChRatio);\n            }\n        }\n\n        if (gfp.mode == MPEGMode.JOINT_STEREO) {\n            var msfix;\n            msfix1(gfc);\n            msfix = gfp.msfix;\n            if (Math.abs(msfix) > 0.0)\n                ns_msfix(gfc, msfix, gfp.ATHlower * gfc.ATH.adjust);\n        }\n\n        /***************************************************************\n         * determine final block type\n         ***************************************************************/\n        block_type_set(gfp, uselongblock, blocktype_d, blocktype);\n\n        /*********************************************************************\n         * compute the value of PE to return ... no delay and advance\n         *********************************************************************/\n        for (chn = 0; chn < numchn; chn++) {\n            var ppe;\n            var ppePos = 0;\n            var type;\n            var mr;\n\n            if (chn > 1) {\n                ppe = percep_MS_entropy;\n                ppePos = -2;\n                type = Encoder_1.NORM_TYPE;\n                if (blocktype_d[0] == Encoder_1.SHORT_TYPE\n                    || blocktype_d[1] == Encoder_1.SHORT_TYPE)\n                    type = Encoder_1.SHORT_TYPE;\n                mr = masking_MS_ratio[gr_out][chn - 2];\n            } else {\n                ppe = percep_entropy;\n                ppePos = 0;\n                type = blocktype_d[chn];\n                mr = masking_ratio[gr_out][chn];\n            }\n\n            if (type == Encoder_1.SHORT_TYPE)\n                ppe[ppePos + chn] = pecalc_s(mr, gfc.masking_lower);\n            else\n                ppe[ppePos + chn] = pecalc_l(mr, gfc.masking_lower);\n\n            if (gfp.analysis)\n                gfc.pinfo.pe[gr_out][chn] = ppe[ppePos + chn];\n\n        }\n        return 0;\n    };\n\n    function vbrpsy_compute_fft_l(gfp, buffer, bufPos, chn, gr_out, fftenergy, wsamp_l, wsamp_lPos) {\n        var gfc = gfp.internal_flags;\n        if (chn < 2) {\n            fft.fft_long(gfc, wsamp_l[wsamp_lPos], chn, buffer, bufPos);\n        } else if (chn == 2) {\n            /* FFT data for mid and side channel is derived from L & R */\n            for (var j = Encoder_1.BLKSIZE - 1; j >= 0; --j) {\n                var l = wsamp_l[wsamp_lPos + 0][j];\n                var r = wsamp_l[wsamp_lPos + 1][j];\n                wsamp_l[wsamp_lPos + 0][j] = (l + r) * Util$3.SQRT2 * 0.5;\n                wsamp_l[wsamp_lPos + 1][j] = (l - r) * Util$3.SQRT2 * 0.5;\n            }\n        }\n\n        /*********************************************************************\n         * compute energies\n         *********************************************************************/\n        fftenergy[0] = NON_LINEAR_SCALE_ENERGY(wsamp_l[wsamp_lPos + 0][0]);\n        fftenergy[0] *= fftenergy[0];\n\n        for (var j = Encoder_1.BLKSIZE / 2 - 1; j >= 0; --j) {\n            var re = wsamp_l[wsamp_lPos + 0][Encoder_1.BLKSIZE / 2 - j];\n            var im = wsamp_l[wsamp_lPos + 0][Encoder_1.BLKSIZE / 2 + j];\n            fftenergy[Encoder_1.BLKSIZE / 2 - j] = NON_LINEAR_SCALE_ENERGY((re\n                * re + im * im) * 0.5);\n        }\n        /* total energy */\n        {\n            var totalenergy = 0.0;\n            for (var j = 11; j < Encoder_1.HBLKSIZE; j++)\n                totalenergy += fftenergy[j];\n\n            gfc.tot_ener[chn] = totalenergy;\n        }\n\n        if (gfp.analysis) {\n            for (var j = 0; j < Encoder_1.HBLKSIZE; j++) {\n                gfc.pinfo.energy[gr_out][chn][j] = gfc.pinfo.energy_save[chn][j];\n                gfc.pinfo.energy_save[chn][j] = fftenergy[j];\n            }\n            gfc.pinfo.pe[gr_out][chn] = gfc.pe[chn];\n        }\n    }\n\n    function vbrpsy_compute_fft_s(gfp, buffer, bufPos, chn, sblock, fftenergy_s, wsamp_s, wsamp_sPos) {\n        var gfc = gfp.internal_flags;\n\n        if (sblock == 0 && chn < 2) {\n            fft.fft_short(gfc, wsamp_s[wsamp_sPos], chn, buffer, bufPos);\n        }\n        if (chn == 2) {\n            /* FFT data for mid and side channel is derived from L & R */\n            for (var j = Encoder_1.BLKSIZE_s - 1; j >= 0; --j) {\n                var l = wsamp_s[wsamp_sPos + 0][sblock][j];\n                var r = wsamp_s[wsamp_sPos + 1][sblock][j];\n                wsamp_s[wsamp_sPos + 0][sblock][j] = (l + r) * Util$3.SQRT2 * 0.5;\n                wsamp_s[wsamp_sPos + 1][sblock][j] = (l - r) * Util$3.SQRT2 * 0.5;\n            }\n        }\n\n        /*********************************************************************\n         * compute energies\n         *********************************************************************/\n        fftenergy_s[sblock][0] = wsamp_s[wsamp_sPos + 0][sblock][0];\n        fftenergy_s[sblock][0] *= fftenergy_s[sblock][0];\n        for (var j = Encoder_1.BLKSIZE_s / 2 - 1; j >= 0; --j) {\n            var re = wsamp_s[wsamp_sPos + 0][sblock][Encoder_1.BLKSIZE_s / 2 - j];\n            var im = wsamp_s[wsamp_sPos + 0][sblock][Encoder_1.BLKSIZE_s / 2 + j];\n            fftenergy_s[sblock][Encoder_1.BLKSIZE_s / 2 - j] = NON_LINEAR_SCALE_ENERGY((re\n                * re + im * im) * 0.5);\n        }\n    }\n\n    /**\n     * compute loudness approximation (used for ATH auto-level adjustment)\n     */\n    function vbrpsy_compute_loudness_approximation_l(gfp, gr_out, chn, fftenergy) {\n        var gfc = gfp.internal_flags;\n        if (gfp.athaa_loudapprox == 2 && chn < 2) {\n            // no loudness for mid/side ch\n            gfc.loudness_sq[gr_out][chn] = gfc.loudness_sq_save[chn];\n            gfc.loudness_sq_save[chn] = psycho_loudness_approx(fftenergy, gfc);\n        }\n    }\n\n    var fircoef_ = [-8.65163e-18 * 2,\n        -0.00851586 * 2, -6.74764e-18 * 2, 0.0209036 * 2,\n        -3.36639e-17 * 2, -0.0438162 * 2, -1.54175e-17 * 2,\n        0.0931738 * 2, -5.52212e-17 * 2, -0.313819 * 2];\n\n    /**\n     * Apply HPF of fs/4 to the input signal. This is used for attack detection\n     * / handling.\n     */\n    function vbrpsy_attack_detection(gfp, buffer, bufPos, gr_out, masking_ratio, masking_MS_ratio, energy, sub_short_factor, ns_attacks, uselongblock) {\n        var ns_hpfsmpl = new_float_n$3([2, 576]);\n        var gfc = gfp.internal_flags;\n        var n_chn_out = gfc.channels_out;\n        /* chn=2 and 3 = Mid and Side channels */\n        var n_chn_psy = (gfp.mode == MPEGMode.JOINT_STEREO) ? 4 : n_chn_out;\n        /* Don't copy the input buffer into a temporary buffer */\n        /* unroll the loop 2 times */\n        for (var chn = 0; chn < n_chn_out; chn++) {\n            /* apply high pass filter of fs/4 */\n            firbuf = buffer[chn];\n            var firbufPos = bufPos + 576 - 350 - NSFIRLEN + 192;\n            assert$3(fircoef_.length == ((NSFIRLEN - 1) / 2));\n            for (var i = 0; i < 576; i++) {\n                var sum1, sum2;\n                sum1 = firbuf[firbufPos + i + 10];\n                sum2 = 0.0;\n                for (var j = 0; j < ((NSFIRLEN - 1) / 2) - 1; j += 2) {\n                    sum1 += fircoef_[j]\n                        * (firbuf[firbufPos + i + j] + firbuf[firbufPos + i\n                        + NSFIRLEN - j]);\n                    sum2 += fircoef_[j + 1]\n                        * (firbuf[firbufPos + i + j + 1] + firbuf[firbufPos\n                        + i + NSFIRLEN - j - 1]);\n                }\n                ns_hpfsmpl[chn][i] = sum1 + sum2;\n            }\n            masking_ratio[gr_out][chn].en.assign(gfc.en[chn]);\n            masking_ratio[gr_out][chn].thm.assign(gfc.thm[chn]);\n            if (n_chn_psy > 2) {\n                /* MS maskings */\n                /* percep_MS_entropy [chn-2] = gfc . pe [chn]; */\n                masking_MS_ratio[gr_out][chn].en.assign(gfc.en[chn + 2]);\n                masking_MS_ratio[gr_out][chn].thm.assign(gfc.thm[chn + 2]);\n            }\n        }\n        for (var chn = 0; chn < n_chn_psy; chn++) {\n            var attack_intensity = new_float$3(12);\n            var en_subshort = new_float$3(12);\n            var en_short = [0, 0, 0, 0];\n            var pf = ns_hpfsmpl[chn & 1];\n            var pfPos = 0;\n            var attackThreshold = (chn == 3) ? gfc.nsPsy.attackthre_s\n                : gfc.nsPsy.attackthre;\n            var ns_uselongblock = 1;\n\n            if (chn == 2) {\n                for (var i = 0, j = 576; j > 0; ++i, --j) {\n                    var l = ns_hpfsmpl[0][i];\n                    var r = ns_hpfsmpl[1][i];\n                    ns_hpfsmpl[0][i] = l + r;\n                    ns_hpfsmpl[1][i] = l - r;\n                }\n            }\n            /***************************************************************\n             * determine the block type (window type)\n             ***************************************************************/\n            /* calculate energies of each sub-shortblocks */\n            for (var i = 0; i < 3; i++) {\n                en_subshort[i] = gfc.nsPsy.last_en_subshort[chn][i + 6];\n                assert$3(gfc.nsPsy.last_en_subshort[chn][i + 4] > 0);\n                attack_intensity[i] = en_subshort[i]\n                    / gfc.nsPsy.last_en_subshort[chn][i + 4];\n                en_short[0] += en_subshort[i];\n            }\n\n            for (var i = 0; i < 9; i++) {\n                var pfe = pfPos + 576 / 9;\n                var p = 1.;\n                for (; pfPos < pfe; pfPos++)\n                    if (p < Math.abs(pf[pfPos]))\n                        p = Math.abs(pf[pfPos]);\n\n                gfc.nsPsy.last_en_subshort[chn][i] = en_subshort[i + 3] = p;\n                en_short[1 + i / 3] += p;\n                if (p > en_subshort[i + 3 - 2]) {\n                    assert$3(en_subshort[i + 3 - 2] > 0);\n                    p = p / en_subshort[i + 3 - 2];\n                } else if (en_subshort[i + 3 - 2] > p * 10.0) {\n                    assert$3(p > 0);\n                    p = en_subshort[i + 3 - 2] / (p * 10.0);\n                } else {\n                    p = 0.0;\n                }\n                attack_intensity[i + 3] = p;\n            }\n            /* pulse like signal detection for fatboy.wav and so on */\n            for (var i = 0; i < 3; ++i) {\n                var enn = en_subshort[i * 3 + 3]\n                    + en_subshort[i * 3 + 4] + en_subshort[i * 3 + 5];\n                var factor = 1.;\n                if (en_subshort[i * 3 + 5] * 6 < enn) {\n                    factor *= 0.5;\n                    if (en_subshort[i * 3 + 4] * 6 < enn) {\n                        factor *= 0.5;\n                    }\n                }\n                sub_short_factor[chn][i] = factor;\n            }\n\n            if (gfp.analysis) {\n                var x = attack_intensity[0];\n                for (var i = 1; i < 12; i++) {\n                    if (x < attack_intensity[i]) {\n                        x = attack_intensity[i];\n                    }\n                }\n                gfc.pinfo.ers[gr_out][chn] = gfc.pinfo.ers_save[chn];\n                gfc.pinfo.ers_save[chn] = x;\n            }\n\n            /* compare energies between sub-shortblocks */\n            for (var i = 0; i < 12; i++) {\n                if (0 == ns_attacks[chn][i / 3]\n                    && attack_intensity[i] > attackThreshold) {\n                    ns_attacks[chn][i / 3] = (i % 3) + 1;\n                }\n            }\n\n            /*\n             * should have energy change between short blocks, in order to avoid\n             * periodic signals\n             */\n            /* Good samples to show the effect are Trumpet test songs */\n            /*\n             * GB: tuned (1) to avoid too many short blocks for test sample\n             * TRUMPET\n             */\n            /*\n             * RH: tuned (2) to let enough short blocks through for test sample\n             * FSOL and SNAPS\n             */\n            for (var i = 1; i < 4; i++) {\n                var u = en_short[i - 1];\n                var v = en_short[i];\n                var m = Math.max(u, v);\n                if (m < 40000) { /* (2) */\n                    if (u < 1.7 * v && v < 1.7 * u) { /* (1) */\n                        if (i == 1 && ns_attacks[chn][0] <= ns_attacks[chn][i]) {\n                            ns_attacks[chn][0] = 0;\n                        }\n                        ns_attacks[chn][i] = 0;\n                    }\n                }\n            }\n\n            if (ns_attacks[chn][0] <= gfc.nsPsy.lastAttacks[chn]) {\n                ns_attacks[chn][0] = 0;\n            }\n\n            if (gfc.nsPsy.lastAttacks[chn] == 3\n                || (ns_attacks[chn][0] + ns_attacks[chn][1]\n                + ns_attacks[chn][2] + ns_attacks[chn][3]) != 0) {\n                ns_uselongblock = 0;\n\n                if (ns_attacks[chn][1] != 0 && ns_attacks[chn][0] != 0) {\n                    ns_attacks[chn][1] = 0;\n                }\n                if (ns_attacks[chn][2] != 0 && ns_attacks[chn][1] != 0) {\n                    ns_attacks[chn][2] = 0;\n                }\n                if (ns_attacks[chn][3] != 0 && ns_attacks[chn][2] != 0) {\n                    ns_attacks[chn][3] = 0;\n                }\n            }\n            if (chn < 2) {\n                uselongblock[chn] = ns_uselongblock;\n            } else {\n                if (ns_uselongblock == 0) {\n                    uselongblock[0] = uselongblock[1] = 0;\n                }\n            }\n\n            /*\n             * there is a one granule delay. Copy maskings computed last call\n             * into masking_ratio to return to calling program.\n             */\n            energy[chn] = gfc.tot_ener[chn];\n        }\n    }\n\n    function vbrpsy_skip_masking_s(gfc, chn, sblock) {\n        if (sblock == 0) {\n            for (var b = 0; b < gfc.npart_s; b++) {\n                gfc.nb_s2[chn][b] = gfc.nb_s1[chn][b];\n                gfc.nb_s1[chn][b] = 0;\n            }\n        }\n    }\n\n    function vbrpsy_skip_masking_l(gfc, chn) {\n        for (var b = 0; b < gfc.npart_l; b++) {\n            gfc.nb_2[chn][b] = gfc.nb_1[chn][b];\n            gfc.nb_1[chn][b] = 0;\n        }\n    }\n\n    function psyvbr_calc_mask_index_s(gfc, max, avg, mask_idx) {\n        var last_tab_entry = tab.length - 1;\n        var b = 0;\n        var a = avg[b] + avg[b + 1];\n        assert$3(a >= 0);\n        if (a > 0.0) {\n            var m = max[b];\n            if (m < max[b + 1])\n                m = max[b + 1];\n            assert$3((gfc.numlines_s[b] + gfc.numlines_s[b + 1] - 1) > 0);\n            a = 20.0 * (m * 2.0 - a)\n                / (a * (gfc.numlines_s[b] + gfc.numlines_s[b + 1] - 1));\n            var k = 0 | a;\n            if (k > last_tab_entry)\n                k = last_tab_entry;\n            mask_idx[b] = k;\n        } else {\n            mask_idx[b] = 0;\n        }\n\n        for (b = 1; b < gfc.npart_s - 1; b++) {\n            a = avg[b - 1] + avg[b] + avg[b + 1];\n            assert$3(b + 1 < gfc.npart_s);\n            assert$3(a >= 0);\n            if (a > 0.0) {\n                var m = max[b - 1];\n                if (m < max[b])\n                    m = max[b];\n                if (m < max[b + 1])\n                    m = max[b + 1];\n                assert$3((gfc.numlines_s[b - 1] + gfc.numlines_s[b] + gfc.numlines_s[b + 1] - 1) > 0);\n                a = 20.0\n                    * (m * 3.0 - a)\n                    / (a * (gfc.numlines_s[b - 1] + gfc.numlines_s[b]\n                    + gfc.numlines_s[b + 1] - 1));\n                var k = 0 | a;\n                if (k > last_tab_entry)\n                    k = last_tab_entry;\n                mask_idx[b] = k;\n            } else {\n                mask_idx[b] = 0;\n            }\n        }\n        assert$3(b > 0);\n        assert$3(b == gfc.npart_s - 1);\n\n        a = avg[b - 1] + avg[b];\n        assert$3(a >= 0);\n        if (a > 0.0) {\n            var m = max[b - 1];\n            if (m < max[b])\n                m = max[b];\n            assert$3((gfc.numlines_s[b - 1] + gfc.numlines_s[b] - 1) > 0);\n            a = 20.0 * (m * 2.0 - a)\n                / (a * (gfc.numlines_s[b - 1] + gfc.numlines_s[b] - 1));\n            var k = 0 | a;\n            if (k > last_tab_entry)\n                k = last_tab_entry;\n            mask_idx[b] = k;\n        } else {\n            mask_idx[b] = 0;\n        }\n        assert$3(b == (gfc.npart_s - 1));\n    }\n\n    function vbrpsy_compute_masking_s(gfp, fftenergy_s, eb, thr, chn, sblock) {\n        var gfc = gfp.internal_flags;\n        var max = new float[Encoder_1.CBANDS], avg = new_float$3(Encoder_1.CBANDS);\n        var i, j, b;\n        var mask_idx_s = new int[Encoder_1.CBANDS];\n\n        for (b = j = 0; b < gfc.npart_s; ++b) {\n            var ebb = 0, m = 0;\n            var n = gfc.numlines_s[b];\n            for (i = 0; i < n; ++i, ++j) {\n                var el = fftenergy_s[sblock][j];\n                ebb += el;\n                if (m < el)\n                    m = el;\n            }\n            eb[b] = ebb;\n            assert$3(ebb >= 0);\n            max[b] = m;\n            assert$3(n > 0);\n            avg[b] = ebb / n;\n            assert$3(avg[b] >= 0);\n        }\n        assert$3(b == gfc.npart_s);\n        assert$3(j == 129);\n        for (; b < Encoder_1.CBANDS; ++b) {\n            max[b] = 0;\n            avg[b] = 0;\n        }\n        psyvbr_calc_mask_index_s(gfc, max, avg, mask_idx_s);\n        for (j = b = 0; b < gfc.npart_s; b++) {\n            var kk = gfc.s3ind_s[b][0];\n            var last = gfc.s3ind_s[b][1];\n            var dd, dd_n;\n            var x, ecb, avg_mask;\n            dd = mask_idx_s[kk];\n            dd_n = 1;\n            ecb = gfc.s3_ss[j] * eb[kk] * tab[mask_idx_s[kk]];\n            ++j;\n            ++kk;\n            while (kk <= last) {\n                dd += mask_idx_s[kk];\n                dd_n += 1;\n                x = gfc.s3_ss[j] * eb[kk] * tab[mask_idx_s[kk]];\n                ecb = vbrpsy_mask_add(ecb, x, kk - b);\n                ++j;\n                ++kk;\n            }\n            dd = (1 + 2 * dd) / (2 * dd_n);\n            avg_mask = tab[dd] * 0.5;\n            ecb *= avg_mask;\n            thr[b] = ecb;\n            gfc.nb_s2[chn][b] = gfc.nb_s1[chn][b];\n            gfc.nb_s1[chn][b] = ecb;\n            {\n                /*\n                 * if THR exceeds EB, the quantization routines will take the\n                 * difference from other bands. in case of strong tonal samples\n                 * (tonaltest.wav) this leads to heavy distortions. that's why\n                 * we limit THR here.\n                 */\n                x = max[b];\n                x *= gfc.minval_s[b];\n                x *= avg_mask;\n                if (thr[b] > x) {\n                    thr[b] = x;\n                }\n            }\n            if (gfc.masking_lower > 1) {\n                thr[b] *= gfc.masking_lower;\n            }\n            if (thr[b] > eb[b]) {\n                thr[b] = eb[b];\n            }\n            if (gfc.masking_lower < 1) {\n                thr[b] *= gfc.masking_lower;\n            }\n\n            assert$3(thr[b] >= 0);\n        }\n        for (; b < Encoder_1.CBANDS; ++b) {\n            eb[b] = 0;\n            thr[b] = 0;\n        }\n    }\n\n    function vbrpsy_compute_masking_l(gfc, fftenergy, eb_l, thr, chn) {\n        var max = new_float$3(Encoder_1.CBANDS), avg = new_float$3(Encoder_1.CBANDS);\n        var mask_idx_l = new_int$3(Encoder_1.CBANDS + 2);\n        var b;\n\n        /*********************************************************************\n         * Calculate the energy and the tonality of each partition.\n         *********************************************************************/\n        calc_energy(gfc, fftenergy, eb_l, max, avg);\n        calc_mask_index_l(gfc, max, avg, mask_idx_l);\n\n        /*********************************************************************\n         * convolve the partitioned energy and unpredictability with the\n         * spreading function, s3_l[b][k]\n         ********************************************************************/\n        var k = 0;\n        for (b = 0; b < gfc.npart_l; b++) {\n            var x, ecb, avg_mask, t;\n            /* convolve the partitioned energy with the spreading function */\n            var kk = gfc.s3ind[b][0];\n            var last = gfc.s3ind[b][1];\n            var dd = 0, dd_n = 0;\n            dd = mask_idx_l[kk];\n            dd_n += 1;\n            ecb = gfc.s3_ll[k] * eb_l[kk] * tab[mask_idx_l[kk]];\n            ++k;\n            ++kk;\n            while (kk <= last) {\n                dd += mask_idx_l[kk];\n                dd_n += 1;\n                x = gfc.s3_ll[k] * eb_l[kk] * tab[mask_idx_l[kk]];\n                t = vbrpsy_mask_add(ecb, x, kk - b);\n                ecb = t;\n                ++k;\n                ++kk;\n            }\n            dd = (1 + 2 * dd) / (2 * dd_n);\n            avg_mask = tab[dd] * 0.5;\n            ecb *= avg_mask;\n\n            /**** long block pre-echo control ****/\n            /**\n             * <PRE>\n             * dont use long block pre-echo control if previous granule was\n             * a short block.  This is to avoid the situation:\n             * frame0:  quiet (very low masking)\n             * frame1:  surge  (triggers short blocks)\n             * frame2:  regular frame.  looks like pre-echo when compared to\n             *          frame0, but all pre-echo was in frame1.\n             * </PRE>\n             */\n            /*\n             * chn=0,1 L and R channels chn=2,3 S and M channels.\n             */\n            if (gfc.blocktype_old[chn & 0x01] == Encoder_1.SHORT_TYPE) {\n                var ecb_limit = rpelev * gfc.nb_1[chn][b];\n                if (ecb_limit > 0) {\n                    thr[b] = Math.min(ecb, ecb_limit);\n                } else {\n                    /**\n                     * <PRE>\n                     * Robert 071209:\n                     * Because we don't calculate long block psy when we know a granule\n                     * should be of short blocks, we don't have any clue how the granule\n                     * before would have looked like as a long block. So we have to guess\n                     * a little bit for this END_TYPE block.\n                     * Most of the time we get away with this sloppyness. (fingers crossed :)\n                     * The speed increase is worth it.\n                     * </PRE>\n                     */\n                    thr[b] = Math.min(ecb, eb_l[b] * NS_PREECHO_ATT2);\n                }\n            } else {\n                var ecb_limit_2 = rpelev2 * gfc.nb_2[chn][b];\n                var ecb_limit_1 = rpelev * gfc.nb_1[chn][b];\n                var ecb_limit;\n                if (ecb_limit_2 <= 0) {\n                    ecb_limit_2 = ecb;\n                }\n                if (ecb_limit_1 <= 0) {\n                    ecb_limit_1 = ecb;\n                }\n                if (gfc.blocktype_old[chn & 0x01] == Encoder_1.NORM_TYPE) {\n                    ecb_limit = Math.min(ecb_limit_1, ecb_limit_2);\n                } else {\n                    ecb_limit = ecb_limit_1;\n                }\n                thr[b] = Math.min(ecb, ecb_limit);\n            }\n            gfc.nb_2[chn][b] = gfc.nb_1[chn][b];\n            gfc.nb_1[chn][b] = ecb;\n            {\n                /*\n                 * if THR exceeds EB, the quantization routines will take the\n                 * difference from other bands. in case of strong tonal samples\n                 * (tonaltest.wav) this leads to heavy distortions. that's why\n                 * we limit THR here.\n                 */\n                x = max[b];\n                x *= gfc.minval_l[b];\n                x *= avg_mask;\n                if (thr[b] > x) {\n                    thr[b] = x;\n                }\n            }\n            if (gfc.masking_lower > 1) {\n                thr[b] *= gfc.masking_lower;\n            }\n            if (thr[b] > eb_l[b]) {\n                thr[b] = eb_l[b];\n            }\n            if (gfc.masking_lower < 1) {\n                thr[b] *= gfc.masking_lower;\n            }\n            assert$3(thr[b] >= 0);\n        }\n        for (; b < Encoder_1.CBANDS; ++b) {\n            eb_l[b] = 0;\n            thr[b] = 0;\n        }\n    }\n\n    function vbrpsy_compute_block_type(gfp, uselongblock) {\n        var gfc = gfp.internal_flags;\n\n        if (gfp.short_blocks == ShortBlock$3.short_block_coupled\n                /* force both channels to use the same block type */\n                /* this is necessary if the frame is to be encoded in ms_stereo. */\n                /* But even without ms_stereo, FhG does this */\n            && !(uselongblock[0] != 0 && uselongblock[1] != 0))\n            uselongblock[0] = uselongblock[1] = 0;\n\n        for (var chn = 0; chn < gfc.channels_out; chn++) {\n            /* disable short blocks */\n            if (gfp.short_blocks == ShortBlock$3.short_block_dispensed) {\n                uselongblock[chn] = 1;\n            }\n            if (gfp.short_blocks == ShortBlock$3.short_block_forced) {\n                uselongblock[chn] = 0;\n            }\n        }\n    }\n\n    function vbrpsy_apply_block_type(gfp, uselongblock, blocktype_d) {\n        var gfc = gfp.internal_flags;\n\n        /*\n         * update the blocktype of the previous granule, since it depends on\n         * what happend in this granule\n         */\n        for (var chn = 0; chn < gfc.channels_out; chn++) {\n            var blocktype = Encoder_1.NORM_TYPE;\n            /* disable short blocks */\n\n            if (uselongblock[chn] != 0) {\n                /* no attack : use long blocks */\n                assert$3(gfc.blocktype_old[chn] != Encoder_1.START_TYPE);\n                if (gfc.blocktype_old[chn] == Encoder_1.SHORT_TYPE)\n                    blocktype = Encoder_1.STOP_TYPE;\n            } else {\n                /* attack : use short blocks */\n                blocktype = Encoder_1.SHORT_TYPE;\n                if (gfc.blocktype_old[chn] == Encoder_1.NORM_TYPE) {\n                    gfc.blocktype_old[chn] = Encoder_1.START_TYPE;\n                }\n                if (gfc.blocktype_old[chn] == Encoder_1.STOP_TYPE)\n                    gfc.blocktype_old[chn] = Encoder_1.SHORT_TYPE;\n            }\n\n            blocktype_d[chn] = gfc.blocktype_old[chn];\n            // value returned to calling program\n            gfc.blocktype_old[chn] = blocktype;\n            // save for next call to l3psy_anal\n        }\n    }\n\n    /**\n     * compute M/S thresholds from Johnston & Ferreira 1992 ICASSP paper\n     */\n    function vbrpsy_compute_MS_thresholds(eb, thr, cb_mld, ath_cb, athadjust, msfix, n) {\n        var msfix2 = msfix * 2;\n        var athlower = msfix > 0 ? Math.pow(10, athadjust) : 1;\n        var rside, rmid;\n        for (var b = 0; b < n; ++b) {\n            var ebM = eb[2][b];\n            var ebS = eb[3][b];\n            var thmL = thr[0][b];\n            var thmR = thr[1][b];\n            var thmM = thr[2][b];\n            var thmS = thr[3][b];\n\n            /* use this fix if L & R masking differs by 2db or less */\n            if (thmL <= 1.58 * thmR && thmR <= 1.58 * thmL) {\n                var mld_m = cb_mld[b] * ebS;\n                var mld_s = cb_mld[b] * ebM;\n                rmid = Math.max(thmM, Math.min(thmS, mld_m));\n                rside = Math.max(thmS, Math.min(thmM, mld_s));\n            } else {\n                rmid = thmM;\n                rside = thmS;\n            }\n            if (msfix > 0) {\n                /***************************************************************/\n                /* Adjust M/S maskings if user set \"msfix\" */\n                /***************************************************************/\n                /* Naoki Shibata 2000 */\n                var thmLR, thmMS;\n                var ath = ath_cb[b] * athlower;\n                thmLR = Math.min(Math.max(thmL, ath), Math.max(thmR, ath));\n                thmM = Math.max(rmid, ath);\n                thmS = Math.max(rside, ath);\n                thmMS = thmM + thmS;\n                if (thmMS > 0 && (thmLR * msfix2) < thmMS) {\n                    var f = thmLR * msfix2 / thmMS;\n                    thmM *= f;\n                    thmS *= f;\n                    assert$3(thmMS > 0);\n                }\n                rmid = Math.min(thmM, rmid);\n                rside = Math.min(thmS, rside);\n            }\n            if (rmid > ebM) {\n                rmid = ebM;\n            }\n            if (rside > ebS) {\n                rside = ebS;\n            }\n            thr[2][b] = rmid;\n            thr[3][b] = rside;\n        }\n    }\n\n    this.L3psycho_anal_vbr = function (gfp, buffer, bufPos, gr_out, masking_ratio, masking_MS_ratio, percep_entropy, percep_MS_entropy, energy, blocktype_d) {\n        var gfc = gfp.internal_flags;\n\n        /* fft and energy calculation */\n        var wsamp_l;\n        var wsamp_s;\n        var fftenergy = new_float$3(Encoder_1.HBLKSIZE);\n        var fftenergy_s = new_float_n$3([3, Encoder_1.HBLKSIZE_s]);\n        var wsamp_L = new_float_n$3([2, Encoder_1.BLKSIZE]);\n        var wsamp_S = new_float_n$3([2, 3, Encoder_1.BLKSIZE_s]);\n        var eb = new_float_n$3([4, Encoder_1.CBANDS]), thr = new_float_n$3([4, Encoder_1.CBANDS]);\n        var sub_short_factor = new_float_n$3([4, 3]);\n        var pcfact = 0.6;\n\n        /* block type */\n        var ns_attacks = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0],\n            [0, 0, 0, 0]];\n        var uselongblock = new_int$3(2);\n\n        /* usual variables like loop indices, etc.. */\n\n        /* chn=2 and 3 = Mid and Side channels */\n        var n_chn_psy = (gfp.mode == MPEGMode.JOINT_STEREO) ? 4\n            : gfc.channels_out;\n\n        vbrpsy_attack_detection(gfp, buffer, bufPos, gr_out, masking_ratio,\n            masking_MS_ratio, energy, sub_short_factor, ns_attacks,\n            uselongblock);\n\n        vbrpsy_compute_block_type(gfp, uselongblock);\n\n        /* LONG BLOCK CASE */\n        {\n            for (var chn = 0; chn < n_chn_psy; chn++) {\n                var ch01 = chn & 0x01;\n                wsamp_l = wsamp_L;\n                vbrpsy_compute_fft_l(gfp, buffer, bufPos, chn, gr_out,\n                    fftenergy, wsamp_l, ch01);\n\n                vbrpsy_compute_loudness_approximation_l(gfp, gr_out, chn,\n                    fftenergy);\n\n                if (uselongblock[ch01] != 0) {\n                    vbrpsy_compute_masking_l(gfc, fftenergy, eb[chn], thr[chn],\n                        chn);\n                } else {\n                    vbrpsy_skip_masking_l(gfc, chn);\n                }\n            }\n            if ((uselongblock[0] + uselongblock[1]) == 2) {\n                /* M/S channel */\n                if (gfp.mode == MPEGMode.JOINT_STEREO) {\n                    vbrpsy_compute_MS_thresholds(eb, thr, gfc.mld_cb_l,\n                        gfc.ATH.cb_l, gfp.ATHlower * gfc.ATH.adjust,\n                        gfp.msfix, gfc.npart_l);\n                }\n            }\n            /* TODO: apply adaptive ATH masking here ?? */\n            for (var chn = 0; chn < n_chn_psy; chn++) {\n                var ch01 = chn & 0x01;\n                if (uselongblock[ch01] != 0) {\n                    convert_partition2scalefac_l(gfc, eb[chn], thr[chn], chn);\n                }\n            }\n        }\n\n        /* SHORT BLOCKS CASE */\n        {\n            for (var sblock = 0; sblock < 3; sblock++) {\n                for (var chn = 0; chn < n_chn_psy; ++chn) {\n                    var ch01 = chn & 0x01;\n\n                    if (uselongblock[ch01] != 0) {\n                        vbrpsy_skip_masking_s(gfc, chn, sblock);\n                    } else {\n                        /* compute masking thresholds for short blocks */\n                        wsamp_s = wsamp_S;\n                        vbrpsy_compute_fft_s(gfp, buffer, bufPos, chn, sblock,\n                            fftenergy_s, wsamp_s, ch01);\n                        vbrpsy_compute_masking_s(gfp, fftenergy_s, eb[chn],\n                            thr[chn], chn, sblock);\n                    }\n                }\n                if ((uselongblock[0] + uselongblock[1]) == 0) {\n                    /* M/S channel */\n                    if (gfp.mode == MPEGMode.JOINT_STEREO) {\n                        vbrpsy_compute_MS_thresholds(eb, thr, gfc.mld_cb_s,\n                            gfc.ATH.cb_s, gfp.ATHlower * gfc.ATH.adjust,\n                            gfp.msfix, gfc.npart_s);\n                    }\n                    /* L/R channel */\n                }\n                /* TODO: apply adaptive ATH masking here ?? */\n                for (var chn = 0; chn < n_chn_psy; ++chn) {\n                    var ch01 = chn & 0x01;\n                    if (0 == uselongblock[ch01]) {\n                        convert_partition2scalefac_s(gfc, eb[chn], thr[chn],\n                            chn, sblock);\n                    }\n                }\n            }\n\n            /**** short block pre-echo control ****/\n            for (var chn = 0; chn < n_chn_psy; chn++) {\n                var ch01 = chn & 0x01;\n\n                if (uselongblock[ch01] != 0) {\n                    continue;\n                }\n                for (var sb = 0; sb < Encoder_1.SBMAX_s; sb++) {\n                    var new_thmm = new_float$3(3);\n                    for (var sblock = 0; sblock < 3; sblock++) {\n                        var thmm = gfc.thm[chn].s[sb][sblock];\n                        thmm *= NS_PREECHO_ATT0;\n\n                        if (ns_attacks[chn][sblock] >= 2\n                            || ns_attacks[chn][sblock + 1] == 1) {\n                            var idx = (sblock != 0) ? sblock - 1 : 2;\n                            var p = NS_INTERP(gfc.thm[chn].s[sb][idx], thmm,\n                                NS_PREECHO_ATT1 * pcfact);\n                            thmm = Math.min(thmm, p);\n                        } else if (ns_attacks[chn][sblock] == 1) {\n                            var idx = (sblock != 0) ? sblock - 1 : 2;\n                            var p = NS_INTERP(gfc.thm[chn].s[sb][idx], thmm,\n                                NS_PREECHO_ATT2 * pcfact);\n                            thmm = Math.min(thmm, p);\n                        } else if ((sblock != 0 && ns_attacks[chn][sblock - 1] == 3)\n                            || (sblock == 0 && gfc.nsPsy.lastAttacks[chn] == 3)) {\n                            var idx = (sblock != 2) ? sblock + 1 : 0;\n                            var p = NS_INTERP(gfc.thm[chn].s[sb][idx], thmm,\n                                NS_PREECHO_ATT2 * pcfact);\n                            thmm = Math.min(thmm, p);\n                        }\n\n                        /* pulse like signal detection for fatboy.wav and so on */\n                        thmm *= sub_short_factor[chn][sblock];\n\n                        new_thmm[sblock] = thmm;\n                    }\n                    for (var sblock = 0; sblock < 3; sblock++) {\n                        gfc.thm[chn].s[sb][sblock] = new_thmm[sblock];\n                    }\n                }\n            }\n        }\n        for (var chn = 0; chn < n_chn_psy; chn++) {\n            gfc.nsPsy.lastAttacks[chn] = ns_attacks[chn][2];\n        }\n\n        /***************************************************************\n         * determine final block type\n         ***************************************************************/\n        vbrpsy_apply_block_type(gfp, uselongblock, blocktype_d);\n\n        /*********************************************************************\n         * compute the value of PE to return ... no delay and advance\n         *********************************************************************/\n        for (var chn = 0; chn < n_chn_psy; chn++) {\n            var ppe;\n            var ppePos;\n            var type;\n            var mr;\n\n            if (chn > 1) {\n                ppe = percep_MS_entropy;\n                ppePos = -2;\n                type = Encoder_1.NORM_TYPE;\n                if (blocktype_d[0] == Encoder_1.SHORT_TYPE\n                    || blocktype_d[1] == Encoder_1.SHORT_TYPE)\n                    type = Encoder_1.SHORT_TYPE;\n                mr = masking_MS_ratio[gr_out][chn - 2];\n            } else {\n                ppe = percep_entropy;\n                ppePos = 0;\n                type = blocktype_d[chn];\n                mr = masking_ratio[gr_out][chn];\n            }\n\n            if (type == Encoder_1.SHORT_TYPE) {\n                ppe[ppePos + chn] = pecalc_s(mr, gfc.masking_lower);\n            } else {\n                ppe[ppePos + chn] = pecalc_l(mr, gfc.masking_lower);\n            }\n\n            if (gfp.analysis) {\n                gfc.pinfo.pe[gr_out][chn] = ppe[ppePos + chn];\n            }\n        }\n        return 0;\n    };\n\n    function s3_func_x(bark, hf_slope) {\n        var tempx = bark, tempy;\n\n        if (tempx >= 0) {\n            tempy = -tempx * 27;\n        } else {\n            tempy = tempx * hf_slope;\n        }\n        if (tempy <= -72.0) {\n            return 0;\n        }\n        return Math.exp(tempy * LN_TO_LOG10);\n    }\n\n    function norm_s3_func_x(hf_slope) {\n        var lim_a = 0, lim_b = 0;\n        {\n            var x = 0, l, h;\n            for (x = 0; s3_func_x(x, hf_slope) > 1e-20; x -= 1)\n                ;\n            l = x;\n            h = 0;\n            while (Math.abs(h - l) > 1e-12) {\n                x = (h + l) / 2;\n                if (s3_func_x(x, hf_slope) > 0) {\n                    h = x;\n                } else {\n                    l = x;\n                }\n            }\n            lim_a = l;\n        }\n        {\n            var x = 0, l, h;\n            for (x = 0; s3_func_x(x, hf_slope) > 1e-20; x += 1)\n                ;\n            l = 0;\n            h = x;\n            while (Math.abs(h - l) > 1e-12) {\n                x = (h + l) / 2;\n                if (s3_func_x(x, hf_slope) > 0) {\n                    l = x;\n                } else {\n                    h = x;\n                }\n            }\n            lim_b = h;\n        }\n        {\n            var sum = 0;\n            var m = 1000;\n            var i;\n            for (i = 0; i <= m; ++i) {\n                var x = lim_a + i * (lim_b - lim_a) / m;\n                var y = s3_func_x(x, hf_slope);\n                sum += y;\n            }\n            {\n                var norm = (m + 1) / (sum * (lim_b - lim_a));\n                /* printf( \"norm = %lf\\n\",norm); */\n                return norm;\n            }\n        }\n    }\n\n    /**\n     *   The spreading function.  Values returned in units of energy\n     */\n    function s3_func(bark) {\n        var tempx, x, tempy, temp;\n        tempx = bark;\n        if (tempx >= 0)\n            tempx *= 3;\n        else\n            tempx *= 1.5;\n\n        if (tempx >= 0.5 && tempx <= 2.5) {\n            temp = tempx - 0.5;\n            x = 8.0 * (temp * temp - 2.0 * temp);\n        } else\n            x = 0.0;\n        tempx += 0.474;\n        tempy = 15.811389 + 7.5 * tempx - 17.5\n            * Math.sqrt(1.0 + tempx * tempx);\n\n        if (tempy <= -60.0)\n            return 0.0;\n\n        tempx = Math.exp((x + tempy) * LN_TO_LOG10);\n\n        /**\n         * <PRE>\n         * Normalization.  The spreading function should be normalized so that:\n         * +inf\n         * /\n         * |  s3 [ bark ]  d(bark)   =  1\n         * /\n         * -inf\n         * </PRE>\n         */\n        tempx /= .6609193;\n        return tempx;\n    }\n\n    /**\n     * see for example \"Zwicker: Psychoakustik, 1982; ISBN 3-540-11401-7\n     */\n    function freq2bark(freq) {\n        /* input: freq in hz output: barks */\n        if (freq < 0)\n            freq = 0;\n        freq = freq * 0.001;\n        return 13.0 * Math.atan(.76 * freq) + 3.5\n            * Math.atan(freq * freq / (7.5 * 7.5));\n    }\n\n    function init_numline(numlines, bo, bm, bval, bval_width, mld, bo_w, sfreq, blksize, scalepos, deltafreq, sbmax) {\n        var b_frq = new_float$3(Encoder_1.CBANDS + 1);\n        var sample_freq_frac = sfreq / (sbmax > 15 ? 2 * 576 : 2 * 192);\n        var partition = new_int$3(Encoder_1.HBLKSIZE);\n        var i;\n        sfreq /= blksize;\n        var j = 0;\n        var ni = 0;\n        /* compute numlines, the number of spectral lines in each partition band */\n        /* each partition band should be about DELBARK wide. */\n        for (i = 0; i < Encoder_1.CBANDS; i++) {\n            var bark1;\n            var j2;\n            bark1 = freq2bark(sfreq * j);\n\n            b_frq[i] = sfreq * j;\n\n            for (j2 = j; freq2bark(sfreq * j2) - bark1 < DELBARK\n            && j2 <= blksize / 2; j2++)\n                ;\n\n            numlines[i] = j2 - j;\n            ni = i + 1;\n\n            while (j < j2) {\n                assert$3(j < Encoder_1.HBLKSIZE);\n                partition[j++] = i;\n            }\n            if (j > blksize / 2) {\n                j = blksize / 2;\n                ++i;\n                break;\n            }\n        }\n        assert$3(i < Encoder_1.CBANDS);\n        b_frq[i] = sfreq * j;\n\n        for (var sfb = 0; sfb < sbmax; sfb++) {\n            var i1, i2, start, end;\n            var arg;\n            start = scalepos[sfb];\n            end = scalepos[sfb + 1];\n\n            i1 = 0 | Math.floor(.5 + deltafreq * (start - .5));\n            if (i1 < 0)\n                i1 = 0;\n            i2 = 0 | Math.floor(.5 + deltafreq * (end - .5));\n\n            if (i2 > blksize / 2)\n                i2 = blksize / 2;\n\n            bm[sfb] = (partition[i1] + partition[i2]) / 2;\n            bo[sfb] = partition[i2];\n            var f_tmp = sample_freq_frac * end;\n            /*\n             * calculate how much of this band belongs to current scalefactor\n             * band\n             */\n            bo_w[sfb] = (f_tmp - b_frq[bo[sfb]])\n                / (b_frq[bo[sfb] + 1] - b_frq[bo[sfb]]);\n            if (bo_w[sfb] < 0) {\n                bo_w[sfb] = 0;\n            } else {\n                if (bo_w[sfb] > 1) {\n                    bo_w[sfb] = 1;\n                }\n            }\n            /* setup stereo demasking thresholds */\n            /* formula reverse enginerred from plot in paper */\n            arg = freq2bark(sfreq * scalepos[sfb] * deltafreq);\n            arg = ( Math.min(arg, 15.5) / 15.5);\n\n            mld[sfb] = Math.pow(10.0,\n                1.25 * (1 - Math.cos(Math.PI * arg)) - 2.5);\n        }\n\n        /* compute bark values of each critical band */\n        j = 0;\n        for (var k = 0; k < ni; k++) {\n            var w = numlines[k];\n            var bark1, bark2;\n\n            bark1 = freq2bark(sfreq * (j));\n            bark2 = freq2bark(sfreq * (j + w - 1));\n            bval[k] = .5 * (bark1 + bark2);\n\n            bark1 = freq2bark(sfreq * (j - .5));\n            bark2 = freq2bark(sfreq * (j + w - .5));\n            bval_width[k] = bark2 - bark1;\n            j += w;\n        }\n\n        return ni;\n    }\n\n    function init_s3_values(s3ind, npart, bval, bval_width, norm, use_old_s3) {\n        var s3 = new_float_n$3([Encoder_1.CBANDS, Encoder_1.CBANDS]);\n        /*\n         * The s3 array is not linear in the bark scale.\n         *\n         * bval[x] should be used to get the bark value.\n         */\n        var j;\n        var numberOfNoneZero = 0;\n\n        /**\n         * <PRE>\n         * s[i][j], the value of the spreading function,\n         * centered at band j (masker), for band i (maskee)\n         *\n         * i.e.: sum over j to spread into signal barkval=i\n         * NOTE: i and j are used opposite as in the ISO docs\n         * </PRE>\n         */\n        if (use_old_s3) {\n            for (var i = 0; i < npart; i++) {\n                for (j = 0; j < npart; j++) {\n                    var v = s3_func(bval[i] - bval[j]) * bval_width[j];\n                    s3[i][j] = v * norm[i];\n                }\n            }\n        } else {\n            for (j = 0; j < npart; j++) {\n                var hf_slope = 15 + Math.min(21 / bval[j], 12);\n                var s3_x_norm = norm_s3_func_x(hf_slope);\n                for (var i = 0; i < npart; i++) {\n                    var v = s3_x_norm\n                        * s3_func_x(bval[i] - bval[j], hf_slope)\n                        * bval_width[j];\n                    s3[i][j] = v * norm[i];\n                }\n            }\n        }\n        for (var i = 0; i < npart; i++) {\n            for (j = 0; j < npart; j++) {\n                if (s3[i][j] > 0.0)\n                    break;\n            }\n            s3ind[i][0] = j;\n\n            for (j = npart - 1; j > 0; j--) {\n                if (s3[i][j] > 0.0)\n                    break;\n            }\n            s3ind[i][1] = j;\n            numberOfNoneZero += (s3ind[i][1] - s3ind[i][0] + 1);\n        }\n\n        var p = new_float$3(numberOfNoneZero);\n        var k = 0;\n        for (var i = 0; i < npart; i++)\n            for (j = s3ind[i][0]; j <= s3ind[i][1]; j++)\n                p[k++] = s3[i][j];\n\n        return p;\n    }\n\n    function stereo_demask(f) {\n        /* setup stereo demasking thresholds */\n        /* formula reverse enginerred from plot in paper */\n        var arg = freq2bark(f);\n        arg = (Math.min(arg, 15.5) / 15.5);\n\n        return Math.pow(10.0,\n            1.25 * (1 - Math.cos(Math.PI * arg)) - 2.5);\n    }\n\n    /**\n     * NOTE: the bitrate reduction from the inter-channel masking effect is low\n     * compared to the chance of getting annyoing artefacts. L3psycho_anal_vbr\n     * does not use this feature. (Robert 071216)\n     */\n    this.psymodel_init = function (gfp) {\n        var gfc = gfp.internal_flags;\n        var i;\n        var useOldS3 = true;\n        var bvl_a = 13, bvl_b = 24;\n        var snr_l_a = 0, snr_l_b = 0;\n        var snr_s_a = -8.25, snr_s_b = -4.5;\n        var bval = new_float$3(Encoder_1.CBANDS);\n        var bval_width = new_float$3(Encoder_1.CBANDS);\n        var norm = new_float$3(Encoder_1.CBANDS);\n        var sfreq = gfp.out_samplerate;\n\n        switch (gfp.experimentalZ) {\n            default:\n            case 0:\n                useOldS3 = true;\n                break;\n            case 1:\n                useOldS3 = (gfp.VBR == VbrMode$3.vbr_mtrh || gfp.VBR == VbrMode$3.vbr_mt) ? false\n                    : true;\n                break;\n            case 2:\n                useOldS3 = false;\n                break;\n            case 3:\n                bvl_a = 8;\n                snr_l_a = -1.75;\n                snr_l_b = -0.0125;\n                snr_s_a = -8.25;\n                snr_s_b = -2.25;\n                break;\n        }\n        gfc.ms_ener_ratio_old = .25;\n        gfc.blocktype_old[0] = gfc.blocktype_old[1] = Encoder_1.NORM_TYPE;\n        // the vbr header is long blocks\n\n        for (i = 0; i < 4; ++i) {\n            for (var j = 0; j < Encoder_1.CBANDS; ++j) {\n                gfc.nb_1[i][j] = 1e20;\n                gfc.nb_2[i][j] = 1e20;\n                gfc.nb_s1[i][j] = gfc.nb_s2[i][j] = 1.0;\n            }\n            for (var sb = 0; sb < Encoder_1.SBMAX_l; sb++) {\n                gfc.en[i].l[sb] = 1e20;\n                gfc.thm[i].l[sb] = 1e20;\n            }\n            for (var j = 0; j < 3; ++j) {\n                for (var sb = 0; sb < Encoder_1.SBMAX_s; sb++) {\n                    gfc.en[i].s[sb][j] = 1e20;\n                    gfc.thm[i].s[sb][j] = 1e20;\n                }\n                gfc.nsPsy.lastAttacks[i] = 0;\n            }\n            for (var j = 0; j < 9; j++)\n                gfc.nsPsy.last_en_subshort[i][j] = 10.;\n        }\n\n        /* init. for loudness approx. -jd 2001 mar 27 */\n        gfc.loudness_sq_save[0] = gfc.loudness_sq_save[1] = 0.0;\n\n        /*************************************************************************\n         * now compute the psychoacoustic model specific constants\n         ************************************************************************/\n        /* compute numlines, bo, bm, bval, bval_width, mld */\n\n        gfc.npart_l = init_numline(gfc.numlines_l, gfc.bo_l, gfc.bm_l, bval,\n            bval_width, gfc.mld_l, gfc.PSY.bo_l_weight, sfreq,\n            Encoder_1.BLKSIZE, gfc.scalefac_band.l, Encoder_1.BLKSIZE\n            / (2.0 * 576), Encoder_1.SBMAX_l);\n        assert$3(gfc.npart_l < Encoder_1.CBANDS);\n        /* compute the spreading function */\n        for (i = 0; i < gfc.npart_l; i++) {\n            var snr = snr_l_a;\n            if (bval[i] >= bvl_a) {\n                snr = snr_l_b * (bval[i] - bvl_a) / (bvl_b - bvl_a) + snr_l_a\n                    * (bvl_b - bval[i]) / (bvl_b - bvl_a);\n            }\n            norm[i] = Math.pow(10.0, snr / 10.0);\n            if (gfc.numlines_l[i] > 0) {\n                gfc.rnumlines_l[i] = 1.0 / gfc.numlines_l[i];\n            } else {\n                gfc.rnumlines_l[i] = 0;\n            }\n        }\n        gfc.s3_ll = init_s3_values(gfc.s3ind, gfc.npart_l, bval, bval_width,\n            norm, useOldS3);\n\n        /* compute long block specific values, ATH and MINVAL */\n        var j = 0;\n        for (i = 0; i < gfc.npart_l; i++) {\n            var x;\n\n            /* ATH */\n            x = Float$3.MAX_VALUE;\n            for (var k = 0; k < gfc.numlines_l[i]; k++, j++) {\n                var freq = sfreq * j / (1000.0 * Encoder_1.BLKSIZE);\n                var level;\n                /*\n                 * ATH below 100 Hz constant, not further climbing\n                 */\n                level = this.ATHformula(freq * 1000, gfp) - 20;\n                // scale to FFT units; returned value is in dB\n                level = Math.pow(10., 0.1 * level);\n                // convert from dB . energy\n                level *= gfc.numlines_l[i];\n                if (x > level)\n                    x = level;\n            }\n            gfc.ATH.cb_l[i] = x;\n\n            /*\n             * MINVAL. For low freq, the strength of the masking is limited by\n             * minval this is an ISO MPEG1 thing, dont know if it is really\n             * needed\n             */\n            /*\n             * FIXME: it does work to reduce low-freq problems in S53-Wind-Sax\n             * and lead-voice samples, but introduces some 3 kbps bit bloat too.\n             * TODO: Further refinement of the shape of this hack.\n             */\n            x = -20 + bval[i] * 20 / 10;\n            if (x > 6) {\n                x = 100;\n            }\n            if (x < -15) {\n                x = -15;\n            }\n            x -= 8.;\n            gfc.minval_l[i] = (Math.pow(10.0, x / 10.) * gfc.numlines_l[i]);\n        }\n\n        /************************************************************************\n         * do the same things for short blocks\n         ************************************************************************/\n        gfc.npart_s = init_numline(gfc.numlines_s, gfc.bo_s, gfc.bm_s, bval,\n            bval_width, gfc.mld_s, gfc.PSY.bo_s_weight, sfreq,\n            Encoder_1.BLKSIZE_s, gfc.scalefac_band.s, Encoder_1.BLKSIZE_s\n            / (2.0 * 192), Encoder_1.SBMAX_s);\n        assert$3(gfc.npart_s < Encoder_1.CBANDS);\n\n        /* SNR formula. short block is normalized by SNR. is it still right ? */\n        j = 0;\n        for (i = 0; i < gfc.npart_s; i++) {\n            var x;\n            var snr = snr_s_a;\n            if (bval[i] >= bvl_a) {\n                snr = snr_s_b * (bval[i] - bvl_a) / (bvl_b - bvl_a) + snr_s_a\n                    * (bvl_b - bval[i]) / (bvl_b - bvl_a);\n            }\n            norm[i] = Math.pow(10.0, snr / 10.0);\n\n            /* ATH */\n            x = Float$3.MAX_VALUE;\n            for (var k = 0; k < gfc.numlines_s[i]; k++, j++) {\n                var freq = sfreq * j / (1000.0 * Encoder_1.BLKSIZE_s);\n                var level;\n                /* freq = Min(.1,freq); */\n                /*\n                 * ATH below 100 Hz constant, not\n                 * further climbing\n                 */\n                level = this.ATHformula(freq * 1000, gfp) - 20;\n                // scale to FFT units; returned value is in dB\n                level = Math.pow(10., 0.1 * level);\n                // convert from dB . energy\n                level *= gfc.numlines_s[i];\n                if (x > level)\n                    x = level;\n            }\n            gfc.ATH.cb_s[i] = x;\n\n            /*\n             * MINVAL. For low freq, the strength of the masking is limited by\n             * minval this is an ISO MPEG1 thing, dont know if it is really\n             * needed\n             */\n            x = (-7.0 + bval[i] * 7.0 / 12.0);\n            if (bval[i] > 12) {\n                x *= 1 + Math.log(1 + x) * 3.1;\n            }\n            if (bval[i] < 12) {\n                x *= 1 + Math.log(1 - x) * 2.3;\n            }\n            if (x < -15) {\n                x = -15;\n            }\n            x -= 8;\n            gfc.minval_s[i] = Math.pow(10.0, x / 10)\n                * gfc.numlines_s[i];\n        }\n\n        gfc.s3_ss = init_s3_values(gfc.s3ind_s, gfc.npart_s, bval, bval_width,\n            norm, useOldS3);\n\n        init_mask_add_max_values();\n        fft.init_fft(gfc);\n\n        /* setup temporal masking */\n        gfc.decay = Math.exp(-1.0 * LOG10\n            / (temporalmask_sustain_sec * sfreq / 192.0));\n\n        {\n            var msfix;\n            msfix = NS_MSFIX;\n            if ((gfp.exp_nspsytune & 2) != 0)\n                msfix = 1.0;\n            if (Math.abs(gfp.msfix) > 0.0)\n                msfix = gfp.msfix;\n            gfp.msfix = msfix;\n\n            /*\n             * spread only from npart_l bands. Normally, we use the spreading\n             * function to convolve from npart_l down to npart_l bands\n             */\n            for (var b = 0; b < gfc.npart_l; b++)\n                if (gfc.s3ind[b][1] > gfc.npart_l - 1)\n                    gfc.s3ind[b][1] = gfc.npart_l - 1;\n        }\n\n        /*\n         * prepare for ATH auto adjustment: we want to decrease the ATH by 12 dB\n         * per second\n         */\n        var frame_duration = (576. * gfc.mode_gr / sfreq);\n        gfc.ATH.decay = Math.pow(10., -12. / 10. * frame_duration);\n        gfc.ATH.adjust = 0.01;\n        /* minimum, for leading low loudness */\n        gfc.ATH.adjustLimit = 1.0;\n        /* on lead, allow adjust up to maximum */\n\n        assert$3(gfc.bo_l[Encoder_1.SBMAX_l - 1] <= gfc.npart_l);\n        assert$3(gfc.bo_s[Encoder_1.SBMAX_s - 1] <= gfc.npart_s);\n\n        if (gfp.ATHtype != -1) {\n            /* compute equal loudness weights (eql_w) */\n            var freq;\n            var freq_inc = gfp.out_samplerate\n                / (Encoder_1.BLKSIZE);\n            var eql_balance = 0.0;\n            freq = 0.0;\n            for (i = 0; i < Encoder_1.BLKSIZE / 2; ++i) {\n                /* convert ATH dB to relative power (not dB) */\n                /* to determine eql_w */\n                freq += freq_inc;\n                gfc.ATH.eql_w[i] = 1. / Math.pow(10, this.ATHformula(freq, gfp) / 10);\n                eql_balance += gfc.ATH.eql_w[i];\n            }\n            eql_balance = 1.0 / eql_balance;\n            for (i = Encoder_1.BLKSIZE / 2; --i >= 0;) { /* scale weights */\n                gfc.ATH.eql_w[i] *= eql_balance;\n            }\n        }\n        {\n            for (var b = j = 0; b < gfc.npart_s; ++b) {\n                for (i = 0; i < gfc.numlines_s[b]; ++i) {\n                    ++j;\n                }\n            }\n            assert$3(j == 129);\n            for (var b = j = 0; b < gfc.npart_l; ++b) {\n                for (i = 0; i < gfc.numlines_l[b]; ++i) {\n                    ++j;\n                }\n            }\n            assert$3(j == 513);\n        }\n        j = 0;\n        for (i = 0; i < gfc.npart_l; i++) {\n            var freq = sfreq * (j + gfc.numlines_l[i] / 2) / (1.0 * Encoder_1.BLKSIZE);\n            gfc.mld_cb_l[i] = stereo_demask(freq);\n            j += gfc.numlines_l[i];\n        }\n        for (; i < Encoder_1.CBANDS; ++i) {\n            gfc.mld_cb_l[i] = 1;\n        }\n        j = 0;\n        for (i = 0; i < gfc.npart_s; i++) {\n            var freq = sfreq * (j + gfc.numlines_s[i] / 2) / (1.0 * Encoder_1.BLKSIZE_s);\n            gfc.mld_cb_s[i] = stereo_demask(freq);\n            j += gfc.numlines_s[i];\n        }\n        for (; i < Encoder_1.CBANDS; ++i) {\n            gfc.mld_cb_s[i] = 1;\n        }\n        return 0;\n    };\n\n    /**\n     * Those ATH formulas are returning their minimum value for input = -1\n     */\n    function ATHformula_GB(f, value) {\n        /**\n         * <PRE>\n         *  from Painter & Spanias\n         *           modified by Gabriel Bouvigne to better fit the reality\n         *           ath =    3.640 * pow(f,-0.8)\n         *           - 6.800 * exp(-0.6*pow(f-3.4,2.0))\n         *           + 6.000 * exp(-0.15*pow(f-8.7,2.0))\n         *           + 0.6* 0.001 * pow(f,4.0);\n         *\n         *\n         *           In the past LAME was using the Painter &Spanias formula.\n         *           But we had some recurrent problems with HF content.\n         *           We measured real ATH values, and found the older formula\n         *           to be inaccurate in the higher part. So we made this new\n         *           formula and this solved most of HF problematic test cases.\n         *           The tradeoff is that in VBR mode it increases a lot the\n         *           bitrate.\n         * </PRE>\n         */\n\n        /*\n         * This curve can be adjusted according to the VBR scale: it adjusts\n         * from something close to Painter & Spanias on V9 up to Bouvigne's\n         * formula for V0. This way the VBR bitrate is more balanced according\n         * to the -V value.\n         */\n\n        // the following Hack allows to ask for the lowest value\n        if (f < -.3)\n            f = 3410;\n\n        // convert to khz\n        f /= 1000;\n        f = Math.max(0.1, f);\n        var ath = 3.640 * Math.pow(f, -0.8) - 6.800\n            * Math.exp(-0.6 * Math.pow(f - 3.4, 2.0)) + 6.000\n            * Math.exp(-0.15 * Math.pow(f - 8.7, 2.0))\n            + (0.6 + 0.04 * value) * 0.001 * Math.pow(f, 4.0);\n        return ath;\n    }\n\n    this.ATHformula = function (f, gfp) {\n        var ath;\n        switch (gfp.ATHtype) {\n            case 0:\n                ath = ATHformula_GB(f, 9);\n                break;\n            case 1:\n                // over sensitive, should probably be removed\n                ath = ATHformula_GB(f, -1);\n                break;\n            case 2:\n                ath = ATHformula_GB(f, 0);\n                break;\n            case 3:\n                // modification of GB formula by Roel\n                ath = ATHformula_GB(f, 1) + 6;\n                break;\n            case 4:\n                ath = ATHformula_GB(f, gfp.ATHcurve);\n                break;\n            default:\n                ath = ATHformula_GB(f, 0);\n                break;\n        }\n        return ath;\n    };\n\n}\n\nvar PsyModel_1 = PsyModel;\n\n//package mp3;\n\n/* MPEG modes */\nfunction MPEGMode$1(ordinal) {\n    var _ordinal = ordinal;\n    this.ordinal = function () {\n        return _ordinal;\n    };\n}\n\nMPEGMode$1.STEREO = new MPEGMode$1(0);\nMPEGMode$1.JOINT_STEREO = new MPEGMode$1(1);\nMPEGMode$1.DUAL_CHANNEL = new MPEGMode$1(2);\nMPEGMode$1.MONO = new MPEGMode$1(3);\nMPEGMode$1.NOT_SET = new MPEGMode$1(4);\n\nvar MPEGMode_1 = MPEGMode$1;\n\nfunction LameGlobalFlags() {\n\n    this.class_id = 0;\n\n    /* input description */\n\n    /**\n     * number of samples. default=-1\n     */\n    this.num_samples = 0;\n    /**\n     * input number of channels. default=2\n     */\n    this.num_channels = 0;\n    /**\n     * input_samp_rate in Hz. default=44.1 kHz\n     */\n    this.in_samplerate = 0;\n    /**\n     * output_samp_rate. default: LAME picks best value at least not used for\n     * MP3 decoding: Remember 44.1 kHz MP3s and AC97\n     */\n    this.out_samplerate = 0;\n    /**\n     * scale input by this amount before encoding at least not used for MP3\n     * decoding\n     */\n    this.scale = 0.;\n    /**\n     * scale input of channel 0 (left) by this amount before encoding\n     */\n    this.scale_left = 0.;\n    /**\n     * scale input of channel 1 (right) by this amount before encoding\n     */\n    this.scale_right = 0.;\n\n    /* general control params */\n    /**\n     * collect data for a MP3 frame analyzer?\n     */\n    this.analysis = false;\n    /**\n     * add Xing VBR tag?\n     */\n    this.bWriteVbrTag = false;\n\n    /**\n     * use lame/mpglib to convert mp3 to wav\n     */\n    this.decode_only = false;\n    /**\n     * quality setting 0=best, 9=worst default=5\n     */\n    this.quality = 0;\n    /**\n     * see enum default = LAME picks best value\n     */\n    this.mode = MPEGMode_1.STEREO;\n    /**\n     * force M/S mode. requires mode=1\n     */\n    this.force_ms = false;\n    /**\n     * use free format? default=0\n     */\n    this.free_format = false;\n    /**\n     * find the RG value? default=0\n     */\n    this.findReplayGain = false;\n    /**\n     * decode on the fly? default=0\n     */\n    this.decode_on_the_fly = false;\n    /**\n     * 1 (default) writes ID3 tags, 0 not\n     */\n    this.write_id3tag_automatic = false;\n\n    /*\n     * set either brate>0 or compression_ratio>0, LAME will compute the value of\n     * the variable not set. Default is compression_ratio = 11.025\n     */\n    /**\n     * bitrate\n     */\n    this.brate = 0;\n    /**\n     * sizeof(wav file)/sizeof(mp3 file)\n     */\n    this.compression_ratio = 0.;\n\n    /* frame params */\n    /**\n     * mark as copyright. default=0\n     */\n    this.copyright = 0;\n    /**\n     * mark as original. default=1\n     */\n    this.original = 0;\n    /**\n     * the MP3 'private extension' bit. Meaningless\n     */\n    this.extension = 0;\n    /**\n     * Input PCM is emphased PCM (for instance from one of the rarely emphased\n     * CDs), it is STRONGLY not recommended to use this, because psycho does not\n     * take it into account, and last but not least many decoders don't care\n     * about these bits\n     */\n    this.emphasis = 0;\n    /**\n     * use 2 bytes per frame for a CRC checksum. default=0\n     */\n    this.error_protection = 0;\n    /**\n     * enforce ISO spec as much as possible\n     */\n    this.strict_ISO = false;\n\n    /**\n     * use bit reservoir?\n     */\n    this.disable_reservoir = false;\n\n    /* quantization/noise shaping */\n    this.quant_comp = 0;\n    this.quant_comp_short = 0;\n    this.experimentalY = false;\n    this.experimentalZ = 0;\n    this.exp_nspsytune = 0;\n\n    this.preset = 0;\n\n    /* VBR control */\n    this.VBR = null;\n    /**\n     * Range [0,...,1[\n     */\n    this.VBR_q_frac = 0.;\n    /**\n     * Range [0,...,9]\n     */\n    this.VBR_q = 0;\n    this.VBR_mean_bitrate_kbps = 0;\n    this.VBR_min_bitrate_kbps = 0;\n    this.VBR_max_bitrate_kbps = 0;\n    /**\n     * strictly enforce VBR_min_bitrate normaly, it will be violated for analog\n     * silence\n     */\n    this.VBR_hard_min = 0;\n\n    /* resampling and filtering */\n\n    /**\n     * freq in Hz. 0=lame choses. -1=no filter\n     */\n    this.lowpassfreq = 0;\n    /**\n     * freq in Hz. 0=lame choses. -1=no filter\n     */\n    this.highpassfreq = 0;\n    /**\n     * freq width of filter, in Hz (default=15%)\n     */\n    this.lowpasswidth = 0;\n    /**\n     * freq width of filter, in Hz (default=15%)\n     */\n    this.highpasswidth = 0;\n\n    /*\n     * psycho acoustics and other arguments which you should not change unless\n     * you know what you are doing\n     */\n\n    this.maskingadjust = 0.;\n    this.maskingadjust_short = 0.;\n    /**\n     * only use ATH\n     */\n    this.ATHonly = false;\n    /**\n     * only use ATH for short blocks\n     */\n    this.ATHshort = false;\n    /**\n     * disable ATH\n     */\n    this.noATH = false;\n    /**\n     * select ATH formula\n     */\n    this.ATHtype = 0;\n    /**\n     * change ATH formula 4 shape\n     */\n    this.ATHcurve = 0.;\n    /**\n     * lower ATH by this many db\n     */\n    this.ATHlower = 0.;\n    /**\n     * select ATH auto-adjust scheme\n     */\n    this.athaa_type = 0;\n    /**\n     * select ATH auto-adjust loudness calc\n     */\n    this.athaa_loudapprox = 0;\n    /**\n     * dB, tune active region of auto-level\n     */\n    this.athaa_sensitivity = 0.;\n    this.short_blocks = null;\n    /**\n     * use temporal masking effect\n     */\n    this.useTemporal = false;\n    this.interChRatio = 0.;\n    /**\n     * Naoki's adjustment of Mid/Side maskings\n     */\n    this.msfix = 0.;\n\n    /**\n     * 0 off, 1 on\n     */\n    this.tune = false;\n    /**\n     * used to pass values for debugging and stuff\n     */\n    this.tune_value_a = 0.;\n\n    /************************************************************************/\n    /* internal variables, do not set... */\n    /* provided because they may be of use to calling application */\n    /************************************************************************/\n\n    /**\n     * 0=MPEG-2/2.5 1=MPEG-1\n     */\n    this.version = 0;\n    this.encoder_delay = 0;\n    /**\n     * number of samples of padding appended to input\n     */\n    this.encoder_padding = 0;\n    this.framesize = 0;\n    /**\n     * number of frames encoded\n     */\n    this.frameNum = 0;\n    /**\n     * is this struct owned by calling program or lame?\n     */\n    this.lame_allocated_gfp = 0;\n    /**************************************************************************/\n    /* more internal variables are stored in this structure: */\n    /**************************************************************************/\n    this.internal_flags = null;\n}\n\nvar LameGlobalFlags_1 = LameGlobalFlags;\n\nvar L3Side$1 = {};\n\n\n\t/**\n\t * max scalefactor band, max(SBMAX_l, SBMAX_s*3, (SBMAX_s-3)*3+8)\n\t */\nL3Side$1.SFBMAX = (Encoder_1.SBMAX_s * 3);\n\nvar L3Side_1 = L3Side$1;\n\nvar new_float$10 = common.new_float;\nvar new_int$10 = common.new_int;\nfunction GrInfo() {\n    //float xr[] = new float[576];\n    this.xr = new_float$10(576);\n    //int l3_enc[] = new int[576];\n    this.l3_enc = new_int$10(576);\n    //int scalefac[] = new int[L3Side.SFBMAX];\n    this.scalefac = new_int$10(L3Side_1.SFBMAX);\n    this.xrpow_max = 0.;\n\n    this.part2_3_length = 0;\n    this.big_values = 0;\n    this.count1 = 0;\n    this.global_gain = 0;\n    this.scalefac_compress = 0;\n    this.block_type = 0;\n    this.mixed_block_flag = 0;\n    this.table_select = new_int$10(3);\n    this.subblock_gain = new_int$10(3 + 1);\n    this.region0_count = 0;\n    this.region1_count = 0;\n    this.preflag = 0;\n    this.scalefac_scale = 0;\n    this.count1table_select = 0;\n\n    this.part2_length = 0;\n    this.sfb_lmax = 0;\n    this.sfb_smin = 0;\n    this.psy_lmax = 0;\n    this.sfbmax = 0;\n    this.psymax = 0;\n    this.sfbdivide = 0;\n    this.width = new_int$10(L3Side_1.SFBMAX);\n    this.window = new_int$10(L3Side_1.SFBMAX);\n    this.count1bits = 0;\n    /**\n     * added for LSF\n     */\n    this.sfb_partition_table = null;\n    this.slen = new_int$10(4);\n\n    this.max_nonzero_coeff = 0;\n\n    var self = this;\n    function clone_int(array) {\n        return new Int32Array(array);\n    }\n    function clone_float(array) {\n        return new Float32Array(array);\n    }\n    this.assign = function (other) {\n        self.xr = clone_float(other.xr); //.slice(0); //clone();\n        self.l3_enc = clone_int(other.l3_enc); //.slice(0); //clone();\n        self.scalefac = clone_int(other.scalefac);//.slice(0); //clone();\n        self.xrpow_max = other.xrpow_max;\n\n        self.part2_3_length = other.part2_3_length;\n        self.big_values = other.big_values;\n        self.count1 = other.count1;\n        self.global_gain = other.global_gain;\n        self.scalefac_compress = other.scalefac_compress;\n        self.block_type = other.block_type;\n        self.mixed_block_flag = other.mixed_block_flag;\n        self.table_select = clone_int(other.table_select);//.slice(0); //clone();\n        self.subblock_gain = clone_int(other.subblock_gain); //.slice(0); //.clone();\n        self.region0_count = other.region0_count;\n        self.region1_count = other.region1_count;\n        self.preflag = other.preflag;\n        self.scalefac_scale = other.scalefac_scale;\n        self.count1table_select = other.count1table_select;\n\n        self.part2_length = other.part2_length;\n        self.sfb_lmax = other.sfb_lmax;\n        self.sfb_smin = other.sfb_smin;\n        self.psy_lmax = other.psy_lmax;\n        self.sfbmax = other.sfbmax;\n        self.psymax = other.psymax;\n        self.sfbdivide = other.sfbdivide;\n        self.width = clone_int(other.width); //.slice(0); //.clone();\n        self.window = clone_int(other.window); //.slice(0); //.clone();\n        self.count1bits = other.count1bits;\n\n        self.sfb_partition_table = other.sfb_partition_table.slice(0); //.clone();\n        self.slen = clone_int(other.slen); //.slice(0); //.clone();\n        self.max_nonzero_coeff = other.max_nonzero_coeff;\n    };\n}\n\nvar GrInfo_1 = GrInfo;\n\nvar new_int$9 = common.new_int;\nfunction IIISideInfo() {\n    this.tt = [[null, null], [null, null]];\n    this.main_data_begin = 0;\n    this.private_bits = 0;\n    this.resvDrain_pre = 0;\n    this.resvDrain_post = 0;\n    this.scfsi = [new_int$9(4), new_int$9(4)];\n\n    for (var gr = 0; gr < 2; gr++) {\n        for (var ch = 0; ch < 2; ch++) {\n            this.tt[gr][ch] = new GrInfo_1();\n        }\n    }\n}\n\nvar IIISideInfo_1 = IIISideInfo;\n\n//package mp3;\n\n/**\n * Layer III side information.\n *\n * @author Ken\n *\n */\n\n\nvar System$11 = common.System;\nvar new_int$11 = common.new_int;\nfunction ScaleFac(arrL, arrS, arr21, arr12) {\n\n    this.l = new_int$11(1 + Encoder_1.SBMAX_l);\n    this.s = new_int$11(1 + Encoder_1.SBMAX_s);\n    this.psfb21 = new_int$11(1 + Encoder_1.PSFB21);\n    this.psfb12 = new_int$11(1 + Encoder_1.PSFB12);\n    var l = this.l;\n    var s = this.s;\n\n    if (arguments.length == 4) {\n        //public ScaleFac(final int[] arrL, final int[] arrS, final int[] arr21,\n        //    final int[] arr12) {\n        this.arrL = arguments[0];\n        this.arrS = arguments[1];\n        this.arr21 = arguments[2];\n        this.arr12 = arguments[3];\n\n        System$11.arraycopy(this.arrL, 0, l, 0, Math.min(this.arrL.length, this.l.length));\n        System$11.arraycopy(this.arrS, 0, s, 0, Math.min(this.arrS.length, this.s.length));\n        System$11.arraycopy(this.arr21, 0, this.psfb21, 0, Math.min(this.arr21.length, this.psfb21.length));\n        System$11.arraycopy(this.arr12, 0, this.psfb12, 0, Math.min(this.arr12.length, this.psfb12.length));\n    }\n}\n\nvar ScaleFac_1 = ScaleFac;\n\nvar new_float$12 = common.new_float;\nvar new_float_n$12 = common.new_float_n;\nvar new_int$12 = common.new_int;\n//package mp3;\n\n/**\n * Variables used for --nspsytune\n *\n * @author Ken\n *\n */\nfunction NsPsy() {\n    this.last_en_subshort = new_float_n$12([4, 9]);\n    this.lastAttacks = new_int$12(4);\n    this.pefirbuf = new_float$12(19);\n    this.longfact = new_float$12(Encoder_1.SBMAX_l);\n    this.shortfact = new_float$12(Encoder_1.SBMAX_s);\n\n    /**\n     * short block tuning\n     */\n    this.attackthre = 0.;\n    this.attackthre_s = 0.;\n}\n\nvar NsPsy_1 = NsPsy;\n\n//package mp3;\n\nfunction VBRSeekInfo() {\n    /**\n     * What we have seen so far.\n     */\n    this.sum = 0;\n    /**\n     * How many frames we have seen in this chunk.\n     */\n    this.seen = 0;\n    /**\n     * How many frames we want to collect into one chunk.\n     */\n    this.want = 0;\n    /**\n     * Actual position in our bag.\n     */\n    this.pos = 0;\n    /**\n     * Size of our bag.\n     */\n    this.size = 0;\n    /**\n     * Pointer to our bag.\n     */\n    this.bag = null;\n    this.nVbrNumFrames = 0;\n    this.nBytesWritten = 0;\n    /* VBR tag data */\n    this.TotalFrameSize = 0;\n}\n\nvar VBRSeekInfo_1 = VBRSeekInfo;\n\nvar new_byte$8 = common.new_byte;\nvar new_double$8 = common.new_double;\nvar new_float$8 = common.new_float;\nvar new_float_n$8 = common.new_float_n;\nvar new_int$8 = common.new_int;\nvar new_int_n$8 = common.new_int_n;\nLameInternalFlags$1.MFSIZE = (3 * 1152 + Encoder_1.ENCDELAY - Encoder_1.MDCTDELAY);\nLameInternalFlags$1.MAX_HEADER_BUF = 256;\nLameInternalFlags$1.MAX_BITS_PER_CHANNEL = 4095;\nLameInternalFlags$1.MAX_BITS_PER_GRANULE = 7680;\nLameInternalFlags$1.BPC = 320;\n\nfunction LameInternalFlags$1() {\n    var MAX_HEADER_LEN = 40;\n\n\n    /********************************************************************\n     * internal variables NOT set by calling program, and should not be *\n     * modified by the calling program *\n     ********************************************************************/\n\n    /**\n     * Some remarks to the Class_ID field: The Class ID is an Identifier for a\n     * pointer to this struct. It is very unlikely that a pointer to\n     * lame_global_flags has the same 32 bits in it's structure (large and other\n     * special properties, for instance prime).\n     *\n     * To test that the structure is right and initialized, use: if ( gfc .\n     * Class_ID == LAME_ID ) ... Other remark: If you set a flag to 0 for uninit\n     * data and 1 for init data, the right test should be \"if (flag == 1)\" and\n     * NOT \"if (flag)\". Unintended modification of this element will be\n     * otherwise misinterpreted as an init.\n     */\n    this.Class_ID = 0;\n\n    this.lame_encode_frame_init = 0;\n    this.iteration_init_init = 0;\n    this.fill_buffer_resample_init = 0;\n\n    //public float mfbuf[][] = new float[2][MFSIZE];\n    this.mfbuf = new_float_n$8([2, LameInternalFlags$1.MFSIZE]);\n\n    /**\n     * granules per frame\n     */\n    this.mode_gr = 0;\n    /**\n     * number of channels in the input data stream (PCM or decoded PCM)\n     */\n    this.channels_in = 0;\n    /**\n     * number of channels in the output data stream (not used for decoding)\n     */\n    this.channels_out = 0;\n    /**\n     * input_samp_rate/output_samp_rate\n     */\n        //public double resample_ratio;\n    this.resample_ratio = 0.;\n\n    this.mf_samples_to_encode = 0;\n    this.mf_size = 0;\n    /**\n     * min bitrate index\n     */\n    this.VBR_min_bitrate = 0;\n    /**\n     * max bitrate index\n     */\n    this.VBR_max_bitrate = 0;\n    this.bitrate_index = 0;\n    this.samplerate_index = 0;\n    this.mode_ext = 0;\n\n    /* lowpass and highpass filter control */\n    /**\n     * normalized frequency bounds of passband\n     */\n    this.lowpass1 = 0.;\n    this.lowpass2 = 0.;\n    /**\n     * normalized frequency bounds of passband\n     */\n    this.highpass1 = 0.;\n    this.highpass2 = 0.;\n\n    /**\n     * 0 = none 1 = ISO AAC model 2 = allow scalefac_select=1\n     */\n    this.noise_shaping = 0;\n\n    /**\n     * 0 = ISO model: amplify all distorted bands<BR>\n     * 1 = amplify within 50% of max (on db scale)<BR>\n     * 2 = amplify only most distorted band<BR>\n     * 3 = method 1 and refine with method 2<BR>\n     */\n    this.noise_shaping_amp = 0;\n    /**\n     * 0 = no substep<BR>\n     * 1 = use substep shaping at last step(VBR only)<BR>\n     * (not implemented yet)<BR>\n     * 2 = use substep inside loop<BR>\n     * 3 = use substep inside loop and last step<BR>\n     */\n    this.substep_shaping = 0;\n\n    /**\n     * 1 = gpsycho. 0 = none\n     */\n    this.psymodel = 0;\n    /**\n     * 0 = stop at over=0, all scalefacs amplified or<BR>\n     * a scalefac has reached max value<BR>\n     * 1 = stop when all scalefacs amplified or a scalefac has reached max value<BR>\n     * 2 = stop when all scalefacs amplified\n     */\n    this.noise_shaping_stop = 0;\n\n    /**\n     * 0 = no, 1 = yes\n     */\n    this.subblock_gain = 0;\n    /**\n     * 0 = no. 1=outside loop 2=inside loop(slow)\n     */\n    this.use_best_huffman = 0;\n\n    /**\n     * 0 = stop early after 0 distortion found. 1 = full search\n     */\n    this.full_outer_loop = 0;\n\n    //public IIISideInfo l3_side = new IIISideInfo();\n    this.l3_side = new IIISideInfo_1();\n    this.ms_ratio = new_float$8(2);\n\n    /* used for padding */\n    /**\n     * padding for the current frame?\n     */\n    this.padding = 0;\n    this.frac_SpF = 0;\n    this.slot_lag = 0;\n\n    /**\n     * optional ID3 tags\n     */\n        //public ID3TagSpec tag_spec;\n    this.tag_spec = null;\n    this.nMusicCRC = 0;\n\n    /* variables used by Quantize */\n    //public int OldValue[] = new int[2];\n    this.OldValue = new_int$8(2);\n    //public int CurrentStep[] = new int[2];\n    this.CurrentStep = new_int$8(2);\n\n    this.masking_lower = 0.;\n    //public int bv_scf[] = new int[576];\n    this.bv_scf = new_int$8(576);\n    //public int pseudohalf[] = new int[L3Side.SFBMAX];\n    this.pseudohalf = new_int$8(L3Side_1.SFBMAX);\n\n    /**\n     * will be set in lame_init_params\n     */\n    this.sfb21_extra = false;\n\n    /* BPC = maximum number of filter convolution windows to precompute */\n    //public float[][] inbuf_old = new float[2][];\n    this.inbuf_old = new Array(2);\n    //public float[][] blackfilt = new float[2 * BPC + 1][];\n    this.blackfilt = new Array(2 * LameInternalFlags$1.BPC + 1);\n    //public double itime[] = new double[2];\n    this.itime = new_double$8(2);\n    this.sideinfo_len = 0;\n\n    /* variables for newmdct.c */\n    //public float sb_sample[][][][] = new float[2][2][18][Encoder.SBLIMIT];\n    this.sb_sample = new_float_n$8([2, 2, 18, Encoder_1.SBLIMIT]);\n    this.amp_filter = new_float$8(32);\n\n    /* variables for BitStream */\n\n    /**\n     * <PRE>\n     * mpeg1: buffer=511 bytes  smallest frame: 96-38(sideinfo)=58\n     * max number of frames in reservoir:  8\n     * mpeg2: buffer=255 bytes.  smallest frame: 24-23bytes=1\n     * with VBR, if you are encoding all silence, it is possible to\n     * have 8kbs/24khz frames with 1byte of data each, which means we need\n     * to buffer up to 255 headers!\n     * </PRE>\n     */\n    /**\n     * also, max_header_buf has to be a power of two\n     */\n    /**\n     * max size of header is 38\n     */\n\n    function Header() {\n        this.write_timing = 0;\n        this.ptr = 0;\n        //public byte buf[] = new byte[MAX_HEADER_LEN];\n        this.buf = new_byte$8(MAX_HEADER_LEN);\n    }\n\n    this.header = new Array(LameInternalFlags$1.MAX_HEADER_BUF);\n\n    this.h_ptr = 0;\n    this.w_ptr = 0;\n    this.ancillary_flag = 0;\n\n    /* variables for Reservoir */\n    /**\n     * in bits\n     */\n    this.ResvSize = 0;\n    /**\n     * in bits\n     */\n    this.ResvMax = 0;\n\n    //public ScaleFac scalefac_band = new ScaleFac();\n    this.scalefac_band = new ScaleFac_1();\n\n    /* daa from PsyModel */\n    /* The static variables \"r\", \"phi_sav\", \"new\", \"old\" and \"oldest\" have */\n    /* to be remembered for the unpredictability measure. For \"r\" and */\n    /* \"phi_sav\", the first index from the left is the channel select and */\n    /* the second index is the \"age\" of the data. */\n    this.minval_l = new_float$8(Encoder_1.CBANDS);\n    this.minval_s = new_float$8(Encoder_1.CBANDS);\n    this.nb_1 = new_float_n$8([4, Encoder_1.CBANDS]);\n    this.nb_2 = new_float_n$8([4, Encoder_1.CBANDS]);\n    this.nb_s1 = new_float_n$8([4, Encoder_1.CBANDS]);\n    this.nb_s2 = new_float_n$8([4, Encoder_1.CBANDS]);\n    this.s3_ss = null;\n    this.s3_ll = null;\n    this.decay = 0.;\n\n    //public III_psy_xmin[] thm = new III_psy_xmin[4];\n    //public III_psy_xmin[] en = new III_psy_xmin[4];\n    this.thm = new Array(4);\n    this.en = new Array(4);\n\n    /**\n     * fft and energy calculation\n     */\n    this.tot_ener = new_float$8(4);\n\n    /* loudness calculation (for adaptive threshold of hearing) */\n    /**\n     * loudness^2 approx. per granule and channel\n     */\n    this.loudness_sq = new_float_n$8([2, 2]);\n    /**\n     * account for granule delay of L3psycho_anal\n     */\n    this.loudness_sq_save = new_float$8(2);\n\n    /**\n     * Scale Factor Bands\n     */\n    this.mld_l = new_float$8(Encoder_1.SBMAX_l);\n    this.mld_s = new_float$8(Encoder_1.SBMAX_s);\n    this.bm_l = new_int$8(Encoder_1.SBMAX_l);\n    this.bo_l = new_int$8(Encoder_1.SBMAX_l);\n    this.bm_s = new_int$8(Encoder_1.SBMAX_s);\n    this.bo_s = new_int$8(Encoder_1.SBMAX_s);\n    this.npart_l = 0;\n    this.npart_s = 0;\n\n    this.s3ind = new_int_n$8([Encoder_1.CBANDS, 2]);\n    this.s3ind_s = new_int_n$8([Encoder_1.CBANDS, 2]);\n\n    this.numlines_s = new_int$8(Encoder_1.CBANDS);\n    this.numlines_l = new_int$8(Encoder_1.CBANDS);\n    this.rnumlines_l = new_float$8(Encoder_1.CBANDS);\n    this.mld_cb_l = new_float$8(Encoder_1.CBANDS);\n    this.mld_cb_s = new_float$8(Encoder_1.CBANDS);\n    this.numlines_s_num1 = 0;\n    this.numlines_l_num1 = 0;\n\n    /* ratios */\n    this.pe = new_float$8(4);\n    this.ms_ratio_s_old = 0.;\n    this.ms_ratio_l_old = 0.;\n    this.ms_ener_ratio_old = 0.;\n\n    /**\n     * block type\n     */\n    this.blocktype_old = new_int$8(2);\n\n    /**\n     * variables used for --nspsytune\n     */\n    this.nsPsy = new NsPsy_1();\n\n    /**\n     * used for Xing VBR header\n     */\n    this.VBR_seek_table = new VBRSeekInfo_1();\n\n    /**\n     * all ATH related stuff\n     */\n        //public ATH ATH;\n    this.ATH = null;\n\n    this.PSY = null;\n\n    this.nogap_total = 0;\n    this.nogap_current = 0;\n\n    /* ReplayGain */\n    this.decode_on_the_fly = true;\n    this.findReplayGain = true;\n    this.findPeakSample = true;\n    this.PeakSample = 0.;\n    this.RadioGain = 0;\n    this.AudiophileGain = 0;\n    //public ReplayGain rgdata;\n    this.rgdata = null;\n\n    /**\n     * gain change required for preventing clipping\n     */\n    this.noclipGainChange = 0;\n    /**\n     * user-specified scale factor required for preventing clipping\n     */\n    this.noclipScale = 0.;\n\n    /* simple statistics */\n    this.bitrate_stereoMode_Hist = new_int_n$8([16, 4 + 1]);\n    /**\n     * norm/start/short/stop/mixed(short)/sum\n     */\n    this.bitrate_blockType_Hist = new_int_n$8([16, 4 + 1 + 1]);\n\n    //public PlottingData pinfo;\n    //public MPGLib.mpstr_tag hip;\n    this.pinfo = null;\n    this.hip = null;\n\n    this.in_buffer_nsamples = 0;\n    //public float[] in_buffer_0;\n    //public float[] in_buffer_1;\n    this.in_buffer_0 = null;\n    this.in_buffer_1 = null;\n\n    //public IIterationLoop iteration_loop;\n    this.iteration_loop = null;\n\n    for (var i = 0; i < this.en.length; i++) {\n        this.en[i] = new III_psy_xmin_1();\n    }\n    for (var i = 0; i < this.thm.length; i++) {\n        this.thm[i] = new III_psy_xmin_1();\n    }\n    for (var i = 0; i < this.header.length; i++) {\n        this.header[i] = new Header();\n    }\n\n}\n\nvar LameInternalFlags_1 = LameInternalFlags$1;\n\nvar new_float$13 = common.new_float;\n/**\n * ATH related stuff, if something new ATH related has to be added, please plug\n * it here into the ATH.\n */\nfunction ATH() {\n    /**\n     * Method for the auto adjustment.\n     */\n    this.useAdjust = 0;\n    /**\n     * factor for tuning the (sample power) point below which adaptive threshold\n     * of hearing adjustment occurs\n     */\n    this.aaSensitivityP = 0.;\n    /**\n     * Lowering based on peak volume, 1 = no lowering.\n     */\n    this.adjust = 0.;\n    /**\n     * Limit for dynamic ATH adjust.\n     */\n    this.adjustLimit = 0.;\n    /**\n     * Determined to lower x dB each second.\n     */\n    this.decay = 0.;\n    /**\n     * Lowest ATH value.\n     */\n    this.floor = 0.;\n    /**\n     * ATH for sfbs in long blocks.\n     */\n    this.l = new_float$13(Encoder_1.SBMAX_l);\n    /**\n     * ATH for sfbs in short blocks.\n     */\n    this.s = new_float$13(Encoder_1.SBMAX_s);\n    /**\n     * ATH for partitioned sfb21 in long blocks.\n     */\n    this.psfb21 = new_float$13(Encoder_1.PSFB21);\n    /**\n     * ATH for partitioned sfb12 in short blocks.\n     */\n    this.psfb12 = new_float$13(Encoder_1.PSFB12);\n    /**\n     * ATH for long block convolution bands.\n     */\n    this.cb_l = new_float$13(Encoder_1.CBANDS);\n    /**\n     * ATH for short block convolution bands.\n     */\n    this.cb_s = new_float$13(Encoder_1.CBANDS);\n    /**\n     * Equal loudness weights (based on ATH).\n     */\n    this.eql_w = new_float$13(Encoder_1.BLKSIZE / 2);\n}\n\nvar ATH_1 = ATH;\n\n/*\n *  ReplayGainAnalysis - analyzes input samples and give the recommended dB change\n *  Copyright (C) 2001 David Robinson and Glen Sawyer\n *  Improvements and optimizations added by Frank Klemm, and by Marcel Muller \n *\n *  This library is free software; you can redistribute it and/or\n *  modify it under the terms of the GNU Lesser General Public\n *  License as published by the Free Software Foundation; either\n *  version 2.1 of the License, or (at your option) any later version.\n *\n *  This library is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n *  Lesser General Public License for more details.\n *\n *  You should have received a copy of the GNU Lesser General Public\n *  License along with this library; if not, write to the Free Software\n *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n *\n *  concept and filter values by David Robinson (David@Robinson.org)\n *    -- blame him if you think the idea is flawed\n *  original coding by Glen Sawyer (mp3gain@hotmail.com)\n *    -- blame him if you think this runs too slowly, or the coding is otherwise flawed\n *\n *  lots of code improvements by Frank Klemm ( http://www.uni-jena.de/~pfk/mpp/ )\n *    -- credit him for all the _good_ programming ;)\n *\n *\n *  For an explanation of the concepts and the basic algorithms involved, go to:\n *    http://www.replaygain.org/\n */\n\n/*\n *  Here's the deal. Call\n *\n *    InitGainAnalysis ( long samplefreq );\n *\n *  to initialize everything. Call\n *\n *    AnalyzeSamples ( var Float_t*  left_samples,\n *                     var Float_t*  right_samples,\n *                     size_t          num_samples,\n *                     int             num_channels );\n *\n *  as many times as you want, with as many or as few samples as you want.\n *  If mono, pass the sample buffer in through left_samples, leave\n *  right_samples NULL, and make sure num_channels = 1.\n *\n *    GetTitleGain()\n *\n *  will return the recommended dB level change for all samples analyzed\n *  SINCE THE LAST TIME you called GetTitleGain() OR InitGainAnalysis().\n *\n *    GetAlbumGain()\n *\n *  will return the recommended dB level change for all samples analyzed\n *  since InitGainAnalysis() was called and finalized with GetTitleGain().\n *\n *  Pseudo-code to process an album:\n *\n *    Float_t       l_samples [4096];\n *    Float_t       r_samples [4096];\n *    size_t        num_samples;\n *    unsigned int  num_songs;\n *    unsigned int  i;\n *\n *    InitGainAnalysis ( 44100 );\n *    for ( i = 1; i <= num_songs; i++ ) {\n *        while ( ( num_samples = getSongSamples ( song[i], left_samples, right_samples ) ) > 0 )\n *            AnalyzeSamples ( left_samples, right_samples, num_samples, 2 );\n *        fprintf (\"Recommended dB change for song %2d: %+6.2 dB\\n\", i, GetTitleGain() );\n *    }\n *    fprintf (\"Recommended dB change for whole album: %+6.2 dB\\n\", GetAlbumGain() );\n */\n\n/*\n *  So here's the main source of potential code confusion:\n *\n *  The filters applied to the incoming samples are IIR filters,\n *  meaning they rely on up to <filter order> number of previous samples\n *  AND up to <filter order> number of previous filtered samples.\n *\n *  I set up the AnalyzeSamples routine to minimize memory usage and interface\n *  complexity. The speed isn't compromised too much (I don't think), but the\n *  internal complexity is higher than it should be for such a relatively\n *  simple routine.\n *\n *  Optimization/clarity suggestions are welcome.\n */\n\nvar System$15 = common.System;\nvar Arrays$15 = common.Arrays;\n/**\n * Table entries per dB\n */\nGainAnalysis$1.STEPS_per_dB = 100.;\n/**\n * Table entries for 0...MAX_dB (normal max. values are 70...80 dB)\n */\nGainAnalysis$1.MAX_dB = 120.;\nGainAnalysis$1.GAIN_NOT_ENOUGH_SAMPLES = -24601;\nGainAnalysis$1.GAIN_ANALYSIS_ERROR = 0;\nGainAnalysis$1.GAIN_ANALYSIS_OK = 1;\nGainAnalysis$1.INIT_GAIN_ANALYSIS_ERROR = 0;\nGainAnalysis$1.INIT_GAIN_ANALYSIS_OK = 1;\n\nGainAnalysis$1.YULE_ORDER = 10;\nGainAnalysis$1.MAX_ORDER = GainAnalysis$1.YULE_ORDER;\n\nGainAnalysis$1.MAX_SAMP_FREQ = 48000;\nGainAnalysis$1.RMS_WINDOW_TIME_NUMERATOR = 1;\nGainAnalysis$1.RMS_WINDOW_TIME_DENOMINATOR = 20;\nGainAnalysis$1.MAX_SAMPLES_PER_WINDOW = ((GainAnalysis$1.MAX_SAMP_FREQ * GainAnalysis$1.RMS_WINDOW_TIME_NUMERATOR) / GainAnalysis$1.RMS_WINDOW_TIME_DENOMINATOR + 1);\n\nfunction GainAnalysis$1() {\n    /**\n     * calibration value for 89dB\n     */\n    var PINK_REF = 64.82;\n\n    var YULE_ORDER = GainAnalysis$1.YULE_ORDER;\n    /**\n     * percentile which is louder than the proposed level\n     */\n    var RMS_PERCENTILE = 0.95;\n    /**\n     * maximum allowed sample frequency [Hz]\n     */\n    var MAX_SAMP_FREQ = GainAnalysis$1.MAX_SAMP_FREQ;\n    var RMS_WINDOW_TIME_NUMERATOR = GainAnalysis$1.RMS_WINDOW_TIME_NUMERATOR;\n    /**\n     * numerator / denominator = time slice size [s]\n     */\n    var RMS_WINDOW_TIME_DENOMINATOR = GainAnalysis$1.RMS_WINDOW_TIME_DENOMINATOR;\n    /**\n     * max. Samples per Time slice\n     */\n    var MAX_SAMPLES_PER_WINDOW = GainAnalysis$1.MAX_SAMPLES_PER_WINDOW;\n\n\n    var ABYule = [\n        [0.03857599435200, -3.84664617118067, -0.02160367184185,\n            7.81501653005538, -0.00123395316851, -11.34170355132042,\n            -0.00009291677959, 13.05504219327545, -0.01655260341619,\n            -12.28759895145294, 0.02161526843274, 9.48293806319790,\n            -0.02074045215285, -5.87257861775999, 0.00594298065125,\n            2.75465861874613, 0.00306428023191, -0.86984376593551,\n            0.00012025322027, 0.13919314567432, 0.00288463683916],\n        [0.05418656406430, -3.47845948550071, -0.02911007808948,\n            6.36317777566148, -0.00848709379851, -8.54751527471874,\n            -0.00851165645469, 9.47693607801280, -0.00834990904936,\n            -8.81498681370155, 0.02245293253339, 6.85401540936998,\n            -0.02596338512915, -4.39470996079559, 0.01624864962975,\n            2.19611684890774, -0.00240879051584, -0.75104302451432,\n            0.00674613682247, 0.13149317958808, -0.00187763777362],\n        [0.15457299681924, -2.37898834973084, -0.09331049056315,\n            2.84868151156327, -0.06247880153653, -2.64577170229825,\n            0.02163541888798, 2.23697657451713, -0.05588393329856,\n            -1.67148153367602, 0.04781476674921, 1.00595954808547,\n            0.00222312597743, -0.45953458054983, 0.03174092540049,\n            0.16378164858596, -0.01390589421898, -0.05032077717131,\n            0.00651420667831, 0.02347897407020, -0.00881362733839],\n        [0.30296907319327, -1.61273165137247, -0.22613988682123,\n            1.07977492259970, -0.08587323730772, -0.25656257754070,\n            0.03282930172664, -0.16276719120440, -0.00915702933434,\n            -0.22638893773906, -0.02364141202522, 0.39120800788284,\n            -0.00584456039913, -0.22138138954925, 0.06276101321749,\n            0.04500235387352, -0.00000828086748, 0.02005851806501,\n            0.00205861885564, 0.00302439095741, -0.02950134983287],\n        [0.33642304856132, -1.49858979367799, -0.25572241425570,\n            0.87350271418188, -0.11828570177555, 0.12205022308084,\n            0.11921148675203, -0.80774944671438, -0.07834489609479,\n            0.47854794562326, -0.00469977914380, -0.12453458140019,\n            -0.00589500224440, -0.04067510197014, 0.05724228140351,\n            0.08333755284107, 0.00832043980773, -0.04237348025746,\n            -0.01635381384540, 0.02977207319925, -0.01760176568150],\n        [0.44915256608450, -0.62820619233671, -0.14351757464547,\n            0.29661783706366, -0.22784394429749, -0.37256372942400,\n            -0.01419140100551, 0.00213767857124, 0.04078262797139,\n            -0.42029820170918, -0.12398163381748, 0.22199650564824,\n            0.04097565135648, 0.00613424350682, 0.10478503600251,\n            0.06747620744683, -0.01863887810927, 0.05784820375801,\n            -0.03193428438915, 0.03222754072173, 0.00541907748707],\n        [0.56619470757641, -1.04800335126349, -0.75464456939302,\n            0.29156311971249, 0.16242137742230, -0.26806001042947,\n            0.16744243493672, 0.00819999645858, -0.18901604199609,\n            0.45054734505008, 0.30931782841830, -0.33032403314006,\n            -0.27562961986224, 0.06739368333110, 0.00647310677246,\n            -0.04784254229033, 0.08647503780351, 0.01639907836189,\n            -0.03788984554840, 0.01807364323573, -0.00588215443421],\n        [0.58100494960553, -0.51035327095184, -0.53174909058578,\n            -0.31863563325245, -0.14289799034253, -0.20256413484477,\n            0.17520704835522, 0.14728154134330, 0.02377945217615,\n            0.38952639978999, 0.15558449135573, -0.23313271880868,\n            -0.25344790059353, -0.05246019024463, 0.01628462406333,\n            -0.02505961724053, 0.06920467763959, 0.02442357316099,\n            -0.03721611395801, 0.01818801111503, -0.00749618797172],\n        [0.53648789255105, -0.25049871956020, -0.42163034350696,\n            -0.43193942311114, -0.00275953611929, -0.03424681017675,\n            0.04267842219415, -0.04678328784242, -0.10214864179676,\n            0.26408300200955, 0.14590772289388, 0.15113130533216,\n            -0.02459864859345, -0.17556493366449, -0.11202315195388,\n            -0.18823009262115, -0.04060034127000, 0.05477720428674,\n            0.04788665548180, 0.04704409688120, -0.02217936801134]];\n\n    var ABButter = [\n        [0.98621192462708, -1.97223372919527, -1.97242384925416,\n            0.97261396931306, 0.98621192462708],\n        [0.98500175787242, -1.96977855582618, -1.97000351574484,\n            0.97022847566350, 0.98500175787242],\n        [0.97938932735214, -1.95835380975398, -1.95877865470428,\n            0.95920349965459, 0.97938932735214],\n        [0.97531843204928, -1.95002759149878, -1.95063686409857,\n            0.95124613669835, 0.97531843204928],\n        [0.97316523498161, -1.94561023566527, -1.94633046996323,\n            0.94705070426118, 0.97316523498161],\n        [0.96454515552826, -1.92783286977036, -1.92909031105652,\n            0.93034775234268, 0.96454515552826],\n        [0.96009142950541, -1.91858953033784, -1.92018285901082,\n            0.92177618768381, 0.96009142950541],\n        [0.95856916599601, -1.91542108074780, -1.91713833199203,\n            0.91885558323625, 0.95856916599601],\n        [0.94597685600279, -1.88903307939452, -1.89195371200558,\n            0.89487434461664, 0.94597685600279]];\n\n\n    /**\n     * When calling this procedure, make sure that ip[-order] and op[-order]\n     * point to real data\n     */\n    //private void filterYule(final float[] input, int inputPos, float[] output,\n    //int outputPos, int nSamples, final float[] kernel) {\n    function filterYule(input, inputPos, output, outputPos, nSamples, kernel) {\n\n        while ((nSamples--) != 0) {\n            /* 1e-10 is a hack to avoid slowdown because of denormals */\n            output[outputPos] = 1e-10 + input[inputPos + 0] * kernel[0]\n                - output[outputPos - 1] * kernel[1] + input[inputPos - 1]\n                * kernel[2] - output[outputPos - 2] * kernel[3]\n                + input[inputPos - 2] * kernel[4] - output[outputPos - 3]\n                * kernel[5] + input[inputPos - 3] * kernel[6]\n                - output[outputPos - 4] * kernel[7] + input[inputPos - 4]\n                * kernel[8] - output[outputPos - 5] * kernel[9]\n                + input[inputPos - 5] * kernel[10] - output[outputPos - 6]\n                * kernel[11] + input[inputPos - 6] * kernel[12]\n                - output[outputPos - 7] * kernel[13] + input[inputPos - 7]\n                * kernel[14] - output[outputPos - 8] * kernel[15]\n                + input[inputPos - 8] * kernel[16] - output[outputPos - 9]\n                * kernel[17] + input[inputPos - 9] * kernel[18]\n                - output[outputPos - 10] * kernel[19]\n                + input[inputPos - 10] * kernel[20];\n            ++outputPos;\n            ++inputPos;\n        }\n    }\n\n//private void filterButter(final float[] input, int inputPos,\n//    float[] output, int outputPos, int nSamples, final float[] kernel) {\n    function filterButter(input, inputPos, output, outputPos, nSamples, kernel) {\n\n        while ((nSamples--) != 0) {\n            output[outputPos] = input[inputPos + 0] * kernel[0]\n                - output[outputPos - 1] * kernel[1] + input[inputPos - 1]\n                * kernel[2] - output[outputPos - 2] * kernel[3]\n                + input[inputPos - 2] * kernel[4];\n            ++outputPos;\n            ++inputPos;\n        }\n    }\n\n    /**\n     * @return INIT_GAIN_ANALYSIS_OK if successful, INIT_GAIN_ANALYSIS_ERROR if\n     *         not\n     */\n    function ResetSampleFrequency(rgData, samplefreq) {\n        /* zero out initial values */\n        for (var i = 0; i < MAX_ORDER; i++)\n            rgData.linprebuf[i] = rgData.lstepbuf[i] = rgData.loutbuf[i] = rgData.rinprebuf[i] = rgData.rstepbuf[i] = rgData.routbuf[i] = 0.;\n\n        switch (0 | (samplefreq)) {\n            case 48000:\n                rgData.reqindex = 0;\n                break;\n            case 44100:\n                rgData.reqindex = 1;\n                break;\n            case 32000:\n                rgData.reqindex = 2;\n                break;\n            case 24000:\n                rgData.reqindex = 3;\n                break;\n            case 22050:\n                rgData.reqindex = 4;\n                break;\n            case 16000:\n                rgData.reqindex = 5;\n                break;\n            case 12000:\n                rgData.reqindex = 6;\n                break;\n            case 11025:\n                rgData.reqindex = 7;\n                break;\n            case 8000:\n                rgData.reqindex = 8;\n                break;\n            default:\n                return INIT_GAIN_ANALYSIS_ERROR;\n        }\n\n        rgData.sampleWindow = 0 | ((samplefreq * RMS_WINDOW_TIME_NUMERATOR\n            + RMS_WINDOW_TIME_DENOMINATOR - 1) / RMS_WINDOW_TIME_DENOMINATOR);\n\n        rgData.lsum = 0.;\n        rgData.rsum = 0.;\n        rgData.totsamp = 0;\n\n        Arrays$15.ill(rgData.A, 0);\n\n        return INIT_GAIN_ANALYSIS_OK;\n    }\n\n    this.InitGainAnalysis = function (rgData, samplefreq) {\n        if (ResetSampleFrequency(rgData, samplefreq) != INIT_GAIN_ANALYSIS_OK) {\n            return INIT_GAIN_ANALYSIS_ERROR;\n        }\n\n        rgData.linpre = MAX_ORDER;\n        rgData.rinpre = MAX_ORDER;\n        rgData.lstep = MAX_ORDER;\n        rgData.rstep = MAX_ORDER;\n        rgData.lout = MAX_ORDER;\n        rgData.rout = MAX_ORDER;\n\n        Arrays$15.fill(rgData.B, 0);\n\n        return INIT_GAIN_ANALYSIS_OK;\n    };\n\n    /**\n     * square\n     */\n    function fsqr(d) {\n        return d * d;\n    }\n\n    this.AnalyzeSamples = function (rgData, left_samples, left_samplesPos, right_samples, right_samplesPos, num_samples,\n                                    num_channels) {\n        var curleft;\n        var curleftBase;\n        var curright;\n        var currightBase;\n        var batchsamples;\n        var cursamples;\n        var cursamplepos;\n\n        if (num_samples == 0)\n            return GAIN_ANALYSIS_OK;\n\n        cursamplepos = 0;\n        batchsamples = num_samples;\n\n        switch (num_channels) {\n            case 1:\n                right_samples = left_samples;\n                right_samplesPos = left_samplesPos;\n                break;\n            case 2:\n                break;\n            default:\n                return GAIN_ANALYSIS_ERROR;\n        }\n\n        if (num_samples < MAX_ORDER) {\n            System$15.arraycopy(left_samples, left_samplesPos, rgData.linprebuf,\n                MAX_ORDER, num_samples);\n            System$15.arraycopy(right_samples, right_samplesPos, rgData.rinprebuf,\n                MAX_ORDER, num_samples);\n        } else {\n            System$15.arraycopy(left_samples, left_samplesPos, rgData.linprebuf,\n                MAX_ORDER, MAX_ORDER);\n            System$15.arraycopy(right_samples, right_samplesPos, rgData.rinprebuf,\n                MAX_ORDER, MAX_ORDER);\n        }\n\n        while (batchsamples > 0) {\n            cursamples = batchsamples > rgData.sampleWindow - rgData.totsamp ? rgData.sampleWindow\n            - rgData.totsamp\n                : batchsamples;\n            if (cursamplepos < MAX_ORDER) {\n                curleft = rgData.linpre + cursamplepos;\n                curleftBase = rgData.linprebuf;\n                curright = rgData.rinpre + cursamplepos;\n                currightBase = rgData.rinprebuf;\n                if (cursamples > MAX_ORDER - cursamplepos)\n                    cursamples = MAX_ORDER - cursamplepos;\n            } else {\n                curleft = left_samplesPos + cursamplepos;\n                curleftBase = left_samples;\n                curright = right_samplesPos + cursamplepos;\n                currightBase = right_samples;\n            }\n\n            filterYule(curleftBase, curleft, rgData.lstepbuf, rgData.lstep\n                + rgData.totsamp, cursamples, ABYule[rgData.reqindex]);\n            filterYule(currightBase, curright, rgData.rstepbuf, rgData.rstep\n                + rgData.totsamp, cursamples, ABYule[rgData.reqindex]);\n\n            filterButter(rgData.lstepbuf, rgData.lstep + rgData.totsamp,\n                rgData.loutbuf, rgData.lout + rgData.totsamp, cursamples,\n                ABButter[rgData.reqindex]);\n            filterButter(rgData.rstepbuf, rgData.rstep + rgData.totsamp,\n                rgData.routbuf, rgData.rout + rgData.totsamp, cursamples,\n                ABButter[rgData.reqindex]);\n\n            curleft = rgData.lout + rgData.totsamp;\n            /* Get the squared values */\n            curleftBase = rgData.loutbuf;\n            curright = rgData.rout + rgData.totsamp;\n            currightBase = rgData.routbuf;\n\n            var i = cursamples % 8;\n            while ((i--) != 0) {\n                rgData.lsum += fsqr(curleftBase[curleft++]);\n                rgData.rsum += fsqr(currightBase[curright++]);\n            }\n            i = cursamples / 8;\n            while ((i--) != 0) {\n                rgData.lsum += fsqr(curleftBase[curleft + 0])\n                    + fsqr(curleftBase[curleft + 1])\n                    + fsqr(curleftBase[curleft + 2])\n                    + fsqr(curleftBase[curleft + 3])\n                    + fsqr(curleftBase[curleft + 4])\n                    + fsqr(curleftBase[curleft + 5])\n                    + fsqr(curleftBase[curleft + 6])\n                    + fsqr(curleftBase[curleft + 7]);\n                curleft += 8;\n                rgData.rsum += fsqr(currightBase[curright + 0])\n                    + fsqr(currightBase[curright + 1])\n                    + fsqr(currightBase[curright + 2])\n                    + fsqr(currightBase[curright + 3])\n                    + fsqr(currightBase[curright + 4])\n                    + fsqr(currightBase[curright + 5])\n                    + fsqr(currightBase[curright + 6])\n                    + fsqr(currightBase[curright + 7]);\n                curright += 8;\n            }\n\n            batchsamples -= cursamples;\n            cursamplepos += cursamples;\n            rgData.totsamp += cursamples;\n            if (rgData.totsamp == rgData.sampleWindow) {\n                /* Get the Root Mean Square (RMS) for this set of samples */\n                var val = GainAnalysis$1.STEPS_per_dB\n                    * 10.\n                    * Math.log10((rgData.lsum + rgData.rsum)\n                        / rgData.totsamp * 0.5 + 1.e-37);\n                var ival = (val <= 0) ? 0 : 0 | val;\n                if (ival >= rgData.A.length)\n                    ival = rgData.A.length - 1;\n                rgData.A[ival]++;\n                rgData.lsum = rgData.rsum = 0.;\n\n                System$15.arraycopy(rgData.loutbuf, rgData.totsamp,\n                    rgData.loutbuf, 0, MAX_ORDER);\n                System$15.arraycopy(rgData.routbuf, rgData.totsamp,\n                    rgData.routbuf, 0, MAX_ORDER);\n                System$15.arraycopy(rgData.lstepbuf, rgData.totsamp,\n                    rgData.lstepbuf, 0, MAX_ORDER);\n                System$15.arraycopy(rgData.rstepbuf, rgData.totsamp,\n                    rgData.rstepbuf, 0, MAX_ORDER);\n                rgData.totsamp = 0;\n            }\n            if (rgData.totsamp > rgData.sampleWindow) {\n                /*\n                 * somehow I really screwed up: Error in programming! Contact\n                 * author about totsamp > sampleWindow\n                 */\n                return GAIN_ANALYSIS_ERROR;\n            }\n        }\n        if (num_samples < MAX_ORDER) {\n            System$15.arraycopy(rgData.linprebuf, num_samples, rgData.linprebuf,\n                0, MAX_ORDER - num_samples);\n            System$15.arraycopy(rgData.rinprebuf, num_samples, rgData.rinprebuf,\n                0, MAX_ORDER - num_samples);\n            System$15.arraycopy(left_samples, left_samplesPos, rgData.linprebuf,\n                MAX_ORDER - num_samples, num_samples);\n            System$15.arraycopy(right_samples, right_samplesPos, rgData.rinprebuf,\n                MAX_ORDER - num_samples, num_samples);\n        } else {\n            System$15.arraycopy(left_samples, left_samplesPos + num_samples\n                - MAX_ORDER, rgData.linprebuf, 0, MAX_ORDER);\n            System$15.arraycopy(right_samples, right_samplesPos + num_samples\n                - MAX_ORDER, rgData.rinprebuf, 0, MAX_ORDER);\n        }\n\n        return GAIN_ANALYSIS_OK;\n    };\n\n    function analyzeResult(Array, len) {\n        var i;\n\n        var elems = 0;\n        for (i = 0; i < len; i++)\n            elems += Array[i];\n        if (elems == 0)\n            return GAIN_NOT_ENOUGH_SAMPLES;\n\n        var upper = 0 | Math.ceil(elems * (1. - RMS_PERCENTILE));\n        for (i = len; i-- > 0;) {\n            if ((upper -= Array[i]) <= 0)\n                break;\n        }\n\n        //return (float) ((float) PINK_REF - (float) i / (float) STEPS_per_dB);\n        return (PINK_REF - i / GainAnalysis$1.STEPS_per_dB);\n    }\n\n    this.GetTitleGain = function (rgData) {\n        var retval = analyzeResult(rgData.A, rgData.A.length);\n\n        for (var i = 0; i < rgData.A.length; i++) {\n            rgData.B[i] += rgData.A[i];\n            rgData.A[i] = 0;\n        }\n\n        for (var i = 0; i < MAX_ORDER; i++)\n            rgData.linprebuf[i] = rgData.lstepbuf[i] = rgData.loutbuf[i] = rgData.rinprebuf[i] = rgData.rstepbuf[i] = rgData.routbuf[i] = 0.;\n\n        rgData.totsamp = 0;\n        rgData.lsum = rgData.rsum = 0.;\n        return retval;\n    };\n\n}\n\nvar GainAnalysis_1 = GainAnalysis$1;\n\nvar new_float$14 = common.new_float;\nvar new_int$14 = common.new_int;\nfunction ReplayGain() {\n    this.linprebuf = new_float$14(GainAnalysis_1.MAX_ORDER * 2);\n    /**\n     * left input samples, with pre-buffer\n     */\n    this.linpre = 0;\n    this.lstepbuf = new_float$14(GainAnalysis_1.MAX_SAMPLES_PER_WINDOW + GainAnalysis_1.MAX_ORDER);\n    /**\n     * left \"first step\" (i.e. post first filter) samples\n     */\n    this.lstep = 0;\n    this.loutbuf = new_float$14(GainAnalysis_1.MAX_SAMPLES_PER_WINDOW + GainAnalysis_1.MAX_ORDER);\n    /**\n     * left \"out\" (i.e. post second filter) samples\n     */\n    this.lout = 0;\n    this.rinprebuf = new_float$14(GainAnalysis_1.MAX_ORDER * 2);\n    /**\n     * right input samples ...\n     */\n    this.rinpre = 0;\n    this.rstepbuf = new_float$14(GainAnalysis_1.MAX_SAMPLES_PER_WINDOW + GainAnalysis_1.MAX_ORDER);\n    this.rstep = 0;\n    this.routbuf = new_float$14(GainAnalysis_1.MAX_SAMPLES_PER_WINDOW + GainAnalysis_1.MAX_ORDER);\n    this.rout = 0;\n    /**\n     * number of samples required to reach number of milliseconds required\n     * for RMS window\n     */\n    this.sampleWindow = 0;\n    this.totsamp = 0;\n    this.lsum = 0.;\n    this.rsum = 0.;\n    this.freqindex = 0;\n    this.first = 0;\n    this.A = new_int$14(0 | (GainAnalysis_1.STEPS_per_dB * GainAnalysis_1.MAX_dB));\n    this.B = new_int$14(0 | (GainAnalysis_1.STEPS_per_dB * GainAnalysis_1.MAX_dB));\n\n}\n\nvar ReplayGain_1 = ReplayGain;\n\nfunction MeanBits$1(meanBits) {\n    this.bits = meanBits;\n}\n\nvar MeanBits_1 = MeanBits$1;\n\nvar new_float$16 = common.new_float;\nvar new_int$16 = common.new_int;\nvar assert$16 = common.assert;\n\n\n\n\n\n\nfunction CBRNewIterationLoop(_quantize)  {\n    var quantize = _quantize;\n    this.quantize = quantize;\n\tthis.iteration_loop = function(gfp, pe, ms_ener_ratio, ratio) {\n\t\tvar gfc = gfp.internal_flags;\n        var l3_xmin = new_float$16(L3Side_1.SFBMAX);\n\t\tvar xrpow = new_float$16(576);\n\t\tvar targ_bits = new_int$16(2);\n\t\tvar mean_bits = 0, max_bits;\n\t\tvar l3_side = gfc.l3_side;\n\n\t\tvar mb = new MeanBits_1(mean_bits);\n\t\tthis.quantize.rv.ResvFrameBegin(gfp, mb);\n\t\tmean_bits = mb.bits;\n\n\t\t/* quantize! */\n\t\tfor (var gr = 0; gr < gfc.mode_gr; gr++) {\n\n\t\t\t/*\n\t\t\t * calculate needed bits\n\t\t\t */\n\t\t\tmax_bits = this.quantize.qupvt.on_pe(gfp, pe, targ_bits, mean_bits,\n\t\t\t\t\tgr, gr);\n\n\t\t\tif (gfc.mode_ext == Encoder_1.MPG_MD_MS_LR) {\n\t\t\t\tthis.quantize.ms_convert(gfc.l3_side, gr);\n\t\t\t\tthis.quantize.qupvt.reduce_side(targ_bits, ms_ener_ratio[gr],\n\t\t\t\t\t\tmean_bits, max_bits);\n\t\t\t}\n\n\t\t\tfor (var ch = 0; ch < gfc.channels_out; ch++) {\n\t\t\t\tvar adjust, masking_lower_db;\n\t\t\t\tvar cod_info = l3_side.tt[gr][ch];\n\n\t\t\t\tif (cod_info.block_type != Encoder_1.SHORT_TYPE) {\n\t\t\t\t\t// NORM, START or STOP type\n\t\t\t\t\tadjust = 0;\n\t\t\t\t\tmasking_lower_db = gfc.PSY.mask_adjust - adjust;\n\t\t\t\t} else {\n\t\t\t\t\tadjust = 0;\n\t\t\t\t\tmasking_lower_db = gfc.PSY.mask_adjust_short - adjust;\n\t\t\t\t}\n\t\t\t\tgfc.masking_lower =  Math.pow(10.0,\n\t\t\t\t\t\tmasking_lower_db * 0.1);\n\n\t\t\t\t/*\n\t\t\t\t * init_outer_loop sets up cod_info, scalefac and xrpow\n\t\t\t\t */\n\t\t\t\tthis.quantize.init_outer_loop(gfc, cod_info);\n\t\t\t\tif (this.quantize.init_xrpow(gfc, cod_info, xrpow)) {\n\t\t\t\t\t/*\n\t\t\t\t\t * xr contains energy we will have to encode calculate the\n\t\t\t\t\t * masking abilities find some good quantization in\n\t\t\t\t\t * outer_loop\n\t\t\t\t\t */\n\t\t\t\t\tthis.quantize.qupvt.calc_xmin(gfp, ratio[gr][ch], cod_info,\n\t\t\t\t\t\t\tl3_xmin);\n\t\t\t\t\tthis.quantize.outer_loop(gfp, cod_info, l3_xmin, xrpow, ch,\n\t\t\t\t\t\t\ttarg_bits[ch]);\n\t\t\t\t}\n\n\t\t\t\tthis.quantize.iteration_finish_one(gfc, gr, ch);\n\t\t\t\tassert$16 (cod_info.part2_3_length <= LameInternalFlags_1.MAX_BITS_PER_CHANNEL);\n\t\t\t\tassert$16 (cod_info.part2_3_length <= targ_bits[ch]);\n\t\t\t} /* for ch */\n\t\t} /* for gr */\n\n\t\tthis.quantize.rv.ResvFrameEnd(gfc, mean_bits);\n\t};\n}\nvar CBRNewIterationLoop_1 = CBRNewIterationLoop;\n\nfunction HuffCodeTab(len, max, tab, hl) {\n    this.xlen = len;\n    this.linmax = max;\n    this.table = tab;\n    this.hlen = hl;\n}\n\nvar Tables$1 = {};\n\n\nTables$1.t1HB = [\n    1, 1,\n    1, 0\n];\n\nTables$1.t2HB = [\n    1, 2, 1,\n    3, 1, 1,\n    3, 2, 0\n];\n\nTables$1.t3HB = [\n    3, 2, 1,\n    1, 1, 1,\n    3, 2, 0\n];\n\nTables$1.t5HB = [\n    1, 2, 6, 5,\n    3, 1, 4, 4,\n    7, 5, 7, 1,\n    6, 1, 1, 0\n];\n\nTables$1.t6HB = [\n    7, 3, 5, 1,\n    6, 2, 3, 2,\n    5, 4, 4, 1,\n    3, 3, 2, 0\n];\n\nTables$1.t7HB = [\n    1, 2, 10, 19, 16, 10,\n    3, 3, 7, 10, 5, 3,\n    11, 4, 13, 17, 8, 4,\n    12, 11, 18, 15, 11, 2,\n    7, 6, 9, 14, 3, 1,\n    6, 4, 5, 3, 2, 0\n];\n\nTables$1.t8HB = [\n    3, 4, 6, 18, 12, 5,\n    5, 1, 2, 16, 9, 3,\n    7, 3, 5, 14, 7, 3,\n    19, 17, 15, 13, 10, 4,\n    13, 5, 8, 11, 5, 1,\n    12, 4, 4, 1, 1, 0\n];\n\nTables$1.t9HB = [\n    7, 5, 9, 14, 15, 7,\n    6, 4, 5, 5, 6, 7,\n    7, 6, 8, 8, 8, 5,\n    15, 6, 9, 10, 5, 1,\n    11, 7, 9, 6, 4, 1,\n    14, 4, 6, 2, 6, 0\n];\n\nTables$1.t10HB = [\n    1, 2, 10, 23, 35, 30, 12, 17,\n    3, 3, 8, 12, 18, 21, 12, 7,\n    11, 9, 15, 21, 32, 40, 19, 6,\n    14, 13, 22, 34, 46, 23, 18, 7,\n    20, 19, 33, 47, 27, 22, 9, 3,\n    31, 22, 41, 26, 21, 20, 5, 3,\n    14, 13, 10, 11, 16, 6, 5, 1,\n    9, 8, 7, 8, 4, 4, 2, 0\n];\n\nTables$1.t11HB = [\n    3, 4, 10, 24, 34, 33, 21, 15,\n    5, 3, 4, 10, 32, 17, 11, 10,\n    11, 7, 13, 18, 30, 31, 20, 5,\n    25, 11, 19, 59, 27, 18, 12, 5,\n    35, 33, 31, 58, 30, 16, 7, 5,\n    28, 26, 32, 19, 17, 15, 8, 14,\n    14, 12, 9, 13, 14, 9, 4, 1,\n    11, 4, 6, 6, 6, 3, 2, 0\n];\n\nTables$1.t12HB = [\n    9, 6, 16, 33, 41, 39, 38, 26,\n    7, 5, 6, 9, 23, 16, 26, 11,\n    17, 7, 11, 14, 21, 30, 10, 7,\n    17, 10, 15, 12, 18, 28, 14, 5,\n    32, 13, 22, 19, 18, 16, 9, 5,\n    40, 17, 31, 29, 17, 13, 4, 2,\n    27, 12, 11, 15, 10, 7, 4, 1,\n    27, 12, 8, 12, 6, 3, 1, 0\n];\n\nTables$1.t13HB = [\n    1, 5, 14, 21, 34, 51, 46, 71, 42, 52, 68, 52, 67, 44, 43, 19,\n    3, 4, 12, 19, 31, 26, 44, 33, 31, 24, 32, 24, 31, 35, 22, 14,\n    15, 13, 23, 36, 59, 49, 77, 65, 29, 40, 30, 40, 27, 33, 42, 16,\n    22, 20, 37, 61, 56, 79, 73, 64, 43, 76, 56, 37, 26, 31, 25, 14,\n    35, 16, 60, 57, 97, 75, 114, 91, 54, 73, 55, 41, 48, 53, 23, 24,\n    58, 27, 50, 96, 76, 70, 93, 84, 77, 58, 79, 29, 74, 49, 41, 17,\n    47, 45, 78, 74, 115, 94, 90, 79, 69, 83, 71, 50, 59, 38, 36, 15,\n    72, 34, 56, 95, 92, 85, 91, 90, 86, 73, 77, 65, 51, 44, 43, 42,\n    43, 20, 30, 44, 55, 78, 72, 87, 78, 61, 46, 54, 37, 30, 20, 16,\n    53, 25, 41, 37, 44, 59, 54, 81, 66, 76, 57, 54, 37, 18, 39, 11,\n    35, 33, 31, 57, 42, 82, 72, 80, 47, 58, 55, 21, 22, 26, 38, 22,\n    53, 25, 23, 38, 70, 60, 51, 36, 55, 26, 34, 23, 27, 14, 9, 7,\n    34, 32, 28, 39, 49, 75, 30, 52, 48, 40, 52, 28, 18, 17, 9, 5,\n    45, 21, 34, 64, 56, 50, 49, 45, 31, 19, 12, 15, 10, 7, 6, 3,\n    48, 23, 20, 39, 36, 35, 53, 21, 16, 23, 13, 10, 6, 1, 4, 2,\n    16, 15, 17, 27, 25, 20, 29, 11, 17, 12, 16, 8, 1, 1, 0, 1\n];\n\nTables$1.t15HB = [\n    7, 12, 18, 53, 47, 76, 124, 108, 89, 123, 108, 119, 107, 81, 122, 63,\n    13, 5, 16, 27, 46, 36, 61, 51, 42, 70, 52, 83, 65, 41, 59, 36,\n    19, 17, 15, 24, 41, 34, 59, 48, 40, 64, 50, 78, 62, 80, 56, 33,\n    29, 28, 25, 43, 39, 63, 55, 93, 76, 59, 93, 72, 54, 75, 50, 29,\n    52, 22, 42, 40, 67, 57, 95, 79, 72, 57, 89, 69, 49, 66, 46, 27,\n    77, 37, 35, 66, 58, 52, 91, 74, 62, 48, 79, 63, 90, 62, 40, 38,\n    125, 32, 60, 56, 50, 92, 78, 65, 55, 87, 71, 51, 73, 51, 70, 30,\n    109, 53, 49, 94, 88, 75, 66, 122, 91, 73, 56, 42, 64, 44, 21, 25,\n    90, 43, 41, 77, 73, 63, 56, 92, 77, 66, 47, 67, 48, 53, 36, 20,\n    71, 34, 67, 60, 58, 49, 88, 76, 67, 106, 71, 54, 38, 39, 23, 15,\n    109, 53, 51, 47, 90, 82, 58, 57, 48, 72, 57, 41, 23, 27, 62, 9,\n    86, 42, 40, 37, 70, 64, 52, 43, 70, 55, 42, 25, 29, 18, 11, 11,\n    118, 68, 30, 55, 50, 46, 74, 65, 49, 39, 24, 16, 22, 13, 14, 7,\n    91, 44, 39, 38, 34, 63, 52, 45, 31, 52, 28, 19, 14, 8, 9, 3,\n    123, 60, 58, 53, 47, 43, 32, 22, 37, 24, 17, 12, 15, 10, 2, 1,\n    71, 37, 34, 30, 28, 20, 17, 26, 21, 16, 10, 6, 8, 6, 2, 0\n];\n\nTables$1.t16HB = [\n    1, 5, 14, 44, 74, 63, 110, 93, 172, 149, 138, 242, 225, 195, 376, 17,\n    3, 4, 12, 20, 35, 62, 53, 47, 83, 75, 68, 119, 201, 107, 207, 9,\n    15, 13, 23, 38, 67, 58, 103, 90, 161, 72, 127, 117, 110, 209, 206, 16,\n    45, 21, 39, 69, 64, 114, 99, 87, 158, 140, 252, 212, 199, 387, 365, 26,\n    75, 36, 68, 65, 115, 101, 179, 164, 155, 264, 246, 226, 395, 382, 362, 9,\n    66, 30, 59, 56, 102, 185, 173, 265, 142, 253, 232, 400, 388, 378, 445, 16,\n    111, 54, 52, 100, 184, 178, 160, 133, 257, 244, 228, 217, 385, 366, 715, 10,\n    98, 48, 91, 88, 165, 157, 148, 261, 248, 407, 397, 372, 380, 889, 884, 8,\n    85, 84, 81, 159, 156, 143, 260, 249, 427, 401, 392, 383, 727, 713, 708, 7,\n    154, 76, 73, 141, 131, 256, 245, 426, 406, 394, 384, 735, 359, 710, 352, 11,\n    139, 129, 67, 125, 247, 233, 229, 219, 393, 743, 737, 720, 885, 882, 439, 4,\n    243, 120, 118, 115, 227, 223, 396, 746, 742, 736, 721, 712, 706, 223, 436, 6,\n    202, 224, 222, 218, 216, 389, 386, 381, 364, 888, 443, 707, 440, 437, 1728, 4,\n    747, 211, 210, 208, 370, 379, 734, 723, 714, 1735, 883, 877, 876, 3459, 865, 2,\n    377, 369, 102, 187, 726, 722, 358, 711, 709, 866, 1734, 871, 3458, 870, 434, 0,\n    12, 10, 7, 11, 10, 17, 11, 9, 13, 12, 10, 7, 5, 3, 1, 3\n];\n\nTables$1.t24HB = [\n    15, 13, 46, 80, 146, 262, 248, 434, 426, 669, 653, 649, 621, 517, 1032, 88,\n    14, 12, 21, 38, 71, 130, 122, 216, 209, 198, 327, 345, 319, 297, 279, 42,\n    47, 22, 41, 74, 68, 128, 120, 221, 207, 194, 182, 340, 315, 295, 541, 18,\n    81, 39, 75, 70, 134, 125, 116, 220, 204, 190, 178, 325, 311, 293, 271, 16,\n    147, 72, 69, 135, 127, 118, 112, 210, 200, 188, 352, 323, 306, 285, 540, 14,\n    263, 66, 129, 126, 119, 114, 214, 202, 192, 180, 341, 317, 301, 281, 262, 12,\n    249, 123, 121, 117, 113, 215, 206, 195, 185, 347, 330, 308, 291, 272, 520, 10,\n    435, 115, 111, 109, 211, 203, 196, 187, 353, 332, 313, 298, 283, 531, 381, 17,\n    427, 212, 208, 205, 201, 193, 186, 177, 169, 320, 303, 286, 268, 514, 377, 16,\n    335, 199, 197, 191, 189, 181, 174, 333, 321, 305, 289, 275, 521, 379, 371, 11,\n    668, 184, 183, 179, 175, 344, 331, 314, 304, 290, 277, 530, 383, 373, 366, 10,\n    652, 346, 171, 168, 164, 318, 309, 299, 287, 276, 263, 513, 375, 368, 362, 6,\n    648, 322, 316, 312, 307, 302, 292, 284, 269, 261, 512, 376, 370, 364, 359, 4,\n    620, 300, 296, 294, 288, 282, 273, 266, 515, 380, 374, 369, 365, 361, 357, 2,\n    1033, 280, 278, 274, 267, 264, 259, 382, 378, 372, 367, 363, 360, 358, 356, 0,\n    43, 20, 19, 17, 15, 13, 11, 9, 7, 6, 4, 7, 5, 3, 1, 3\n];\n\nTables$1.t32HB = [\n    1 << 0, 5 << 1, 4 << 1, 5 << 2, 6 << 1, 5 << 2, 4 << 2, 4 << 3,\n    7 << 1, 3 << 2, 6 << 2, 0 << 3, 7 << 2, 2 << 3, 3 << 3, 1 << 4\n];\n\nTables$1.t33HB = [\n    15 << 0, 14 << 1, 13 << 1, 12 << 2, 11 << 1, 10 << 2, 9 << 2, 8 << 3,\n    7 << 1, 6 << 2, 5 << 2, 4 << 3, 3 << 2, 2 << 3, 1 << 3, 0 << 4\n];\n\nTables$1.t1l = [\n    1, 4,\n    3, 5\n];\n\nTables$1.t2l = [\n    1, 4, 7,\n    4, 5, 7,\n    6, 7, 8\n];\n\nTables$1.t3l = [\n    2, 3, 7,\n    4, 4, 7,\n    6, 7, 8\n];\n\nTables$1.t5l = [\n    1, 4, 7, 8,\n    4, 5, 8, 9,\n    7, 8, 9, 10,\n    8, 8, 9, 10\n];\n\nTables$1.t6l = [\n    3, 4, 6, 8,\n    4, 4, 6, 7,\n    5, 6, 7, 8,\n    7, 7, 8, 9\n];\n\nTables$1.t7l = [\n    1, 4, 7, 9, 9, 10,\n    4, 6, 8, 9, 9, 10,\n    7, 7, 9, 10, 10, 11,\n    8, 9, 10, 11, 11, 11,\n    8, 9, 10, 11, 11, 12,\n    9, 10, 11, 12, 12, 12\n];\n\nTables$1.t8l = [\n    2, 4, 7, 9, 9, 10,\n    4, 4, 6, 10, 10, 10,\n    7, 6, 8, 10, 10, 11,\n    9, 10, 10, 11, 11, 12,\n    9, 9, 10, 11, 12, 12,\n    10, 10, 11, 11, 13, 13\n];\n\nTables$1.t9l = [\n    3, 4, 6, 7, 9, 10,\n    4, 5, 6, 7, 8, 10,\n    5, 6, 7, 8, 9, 10,\n    7, 7, 8, 9, 9, 10,\n    8, 8, 9, 9, 10, 11,\n    9, 9, 10, 10, 11, 11\n];\n\nTables$1.t10l = [\n    1, 4, 7, 9, 10, 10, 10, 11,\n    4, 6, 8, 9, 10, 11, 10, 10,\n    7, 8, 9, 10, 11, 12, 11, 11,\n    8, 9, 10, 11, 12, 12, 11, 12,\n    9, 10, 11, 12, 12, 12, 12, 12,\n    10, 11, 12, 12, 13, 13, 12, 13,\n    9, 10, 11, 12, 12, 12, 13, 13,\n    10, 10, 11, 12, 12, 13, 13, 13\n];\n\nTables$1.t11l = [\n    2, 4, 6, 8, 9, 10, 9, 10,\n    4, 5, 6, 8, 10, 10, 9, 10,\n    6, 7, 8, 9, 10, 11, 10, 10,\n    8, 8, 9, 11, 10, 12, 10, 11,\n    9, 10, 10, 11, 11, 12, 11, 12,\n    9, 10, 11, 12, 12, 13, 12, 13,\n    9, 9, 9, 10, 11, 12, 12, 12,\n    9, 9, 10, 11, 12, 12, 12, 12\n];\n\nTables$1.t12l = [\n    4, 4, 6, 8, 9, 10, 10, 10,\n    4, 5, 6, 7, 9, 9, 10, 10,\n    6, 6, 7, 8, 9, 10, 9, 10,\n    7, 7, 8, 8, 9, 10, 10, 10,\n    8, 8, 9, 9, 10, 10, 10, 11,\n    9, 9, 10, 10, 10, 11, 10, 11,\n    9, 9, 9, 10, 10, 11, 11, 12,\n    10, 10, 10, 11, 11, 11, 11, 12\n];\n\nTables$1.t13l = [\n    1, 5, 7, 8, 9, 10, 10, 11, 10, 11, 12, 12, 13, 13, 14, 14,\n    4, 6, 8, 9, 10, 10, 11, 11, 11, 11, 12, 12, 13, 14, 14, 14,\n    7, 8, 9, 10, 11, 11, 12, 12, 11, 12, 12, 13, 13, 14, 15, 15,\n    8, 9, 10, 11, 11, 12, 12, 12, 12, 13, 13, 13, 13, 14, 15, 15,\n    9, 9, 11, 11, 12, 12, 13, 13, 12, 13, 13, 14, 14, 15, 15, 16,\n    10, 10, 11, 12, 12, 12, 13, 13, 13, 13, 14, 13, 15, 15, 16, 16,\n    10, 11, 12, 12, 13, 13, 13, 13, 13, 14, 14, 14, 15, 15, 16, 16,\n    11, 11, 12, 13, 13, 13, 14, 14, 14, 14, 15, 15, 15, 16, 18, 18,\n    10, 10, 11, 12, 12, 13, 13, 14, 14, 14, 14, 15, 15, 16, 17, 17,\n    11, 11, 12, 12, 13, 13, 13, 15, 14, 15, 15, 16, 16, 16, 18, 17,\n    11, 12, 12, 13, 13, 14, 14, 15, 14, 15, 16, 15, 16, 17, 18, 19,\n    12, 12, 12, 13, 14, 14, 14, 14, 15, 15, 15, 16, 17, 17, 17, 18,\n    12, 13, 13, 14, 14, 15, 14, 15, 16, 16, 17, 17, 17, 18, 18, 18,\n    13, 13, 14, 15, 15, 15, 16, 16, 16, 16, 16, 17, 18, 17, 18, 18,\n    14, 14, 14, 15, 15, 15, 17, 16, 16, 19, 17, 17, 17, 19, 18, 18,\n    13, 14, 15, 16, 16, 16, 17, 16, 17, 17, 18, 18, 21, 20, 21, 18\n];\n\nTables$1.t15l = [\n    3, 5, 6, 8, 8, 9, 10, 10, 10, 11, 11, 12, 12, 12, 13, 14,\n    5, 5, 7, 8, 9, 9, 10, 10, 10, 11, 11, 12, 12, 12, 13, 13,\n    6, 7, 7, 8, 9, 9, 10, 10, 10, 11, 11, 12, 12, 13, 13, 13,\n    7, 8, 8, 9, 9, 10, 10, 11, 11, 11, 12, 12, 12, 13, 13, 13,\n    8, 8, 9, 9, 10, 10, 11, 11, 11, 11, 12, 12, 12, 13, 13, 13,\n    9, 9, 9, 10, 10, 10, 11, 11, 11, 11, 12, 12, 13, 13, 13, 14,\n    10, 9, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 13, 13, 14, 14,\n    10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 13, 13, 14,\n    10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 13, 13, 14, 14, 14,\n    10, 10, 11, 11, 11, 11, 12, 12, 12, 13, 13, 13, 13, 14, 14, 14,\n    11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 13, 13, 13, 14, 15, 14,\n    11, 11, 11, 11, 12, 12, 12, 12, 13, 13, 13, 13, 14, 14, 14, 15,\n    12, 12, 11, 12, 12, 12, 13, 13, 13, 13, 13, 13, 14, 14, 15, 15,\n    12, 12, 12, 12, 12, 13, 13, 13, 13, 14, 14, 14, 14, 14, 15, 15,\n    13, 13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 15, 15, 14, 15,\n    13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 15, 15, 15, 15\n];\n\nTables$1.t16_5l = [\n    1, 5, 7, 9, 10, 10, 11, 11, 12, 12, 12, 13, 13, 13, 14, 11,\n    4, 6, 8, 9, 10, 11, 11, 11, 12, 12, 12, 13, 14, 13, 14, 11,\n    7, 8, 9, 10, 11, 11, 12, 12, 13, 12, 13, 13, 13, 14, 14, 12,\n    9, 9, 10, 11, 11, 12, 12, 12, 13, 13, 14, 14, 14, 15, 15, 13,\n    10, 10, 11, 11, 12, 12, 13, 13, 13, 14, 14, 14, 15, 15, 15, 12,\n    10, 10, 11, 11, 12, 13, 13, 14, 13, 14, 14, 15, 15, 15, 16, 13,\n    11, 11, 11, 12, 13, 13, 13, 13, 14, 14, 14, 14, 15, 15, 16, 13,\n    11, 11, 12, 12, 13, 13, 13, 14, 14, 15, 15, 15, 15, 17, 17, 13,\n    11, 12, 12, 13, 13, 13, 14, 14, 15, 15, 15, 15, 16, 16, 16, 13,\n    12, 12, 12, 13, 13, 14, 14, 15, 15, 15, 15, 16, 15, 16, 15, 14,\n    12, 13, 12, 13, 14, 14, 14, 14, 15, 16, 16, 16, 17, 17, 16, 13,\n    13, 13, 13, 13, 14, 14, 15, 16, 16, 16, 16, 16, 16, 15, 16, 14,\n    13, 14, 14, 14, 14, 15, 15, 15, 15, 17, 16, 16, 16, 16, 18, 14,\n    15, 14, 14, 14, 15, 15, 16, 16, 16, 18, 17, 17, 17, 19, 17, 14,\n    14, 15, 13, 14, 16, 16, 15, 16, 16, 17, 18, 17, 19, 17, 16, 14,\n    11, 11, 11, 12, 12, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 12\n];\n\nTables$1.t16l = [\n    1, 5, 7, 9, 10, 10, 11, 11, 12, 12, 12, 13, 13, 13, 14, 10,\n    4, 6, 8, 9, 10, 11, 11, 11, 12, 12, 12, 13, 14, 13, 14, 10,\n    7, 8, 9, 10, 11, 11, 12, 12, 13, 12, 13, 13, 13, 14, 14, 11,\n    9, 9, 10, 11, 11, 12, 12, 12, 13, 13, 14, 14, 14, 15, 15, 12,\n    10, 10, 11, 11, 12, 12, 13, 13, 13, 14, 14, 14, 15, 15, 15, 11,\n    10, 10, 11, 11, 12, 13, 13, 14, 13, 14, 14, 15, 15, 15, 16, 12,\n    11, 11, 11, 12, 13, 13, 13, 13, 14, 14, 14, 14, 15, 15, 16, 12,\n    11, 11, 12, 12, 13, 13, 13, 14, 14, 15, 15, 15, 15, 17, 17, 12,\n    11, 12, 12, 13, 13, 13, 14, 14, 15, 15, 15, 15, 16, 16, 16, 12,\n    12, 12, 12, 13, 13, 14, 14, 15, 15, 15, 15, 16, 15, 16, 15, 13,\n    12, 13, 12, 13, 14, 14, 14, 14, 15, 16, 16, 16, 17, 17, 16, 12,\n    13, 13, 13, 13, 14, 14, 15, 16, 16, 16, 16, 16, 16, 15, 16, 13,\n    13, 14, 14, 14, 14, 15, 15, 15, 15, 17, 16, 16, 16, 16, 18, 13,\n    15, 14, 14, 14, 15, 15, 16, 16, 16, 18, 17, 17, 17, 19, 17, 13,\n    14, 15, 13, 14, 16, 16, 15, 16, 16, 17, 18, 17, 19, 17, 16, 13,\n    10, 10, 10, 11, 11, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 10\n];\n\nTables$1.t24l = [\n    4, 5, 7, 8, 9, 10, 10, 11, 11, 12, 12, 12, 12, 12, 13, 10,\n    5, 6, 7, 8, 9, 10, 10, 11, 11, 11, 12, 12, 12, 12, 12, 10,\n    7, 7, 8, 9, 9, 10, 10, 11, 11, 11, 11, 12, 12, 12, 13, 9,\n    8, 8, 9, 9, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 9,\n    9, 9, 9, 10, 10, 10, 10, 11, 11, 11, 12, 12, 12, 12, 13, 9,\n    10, 9, 10, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 12, 9,\n    10, 10, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 9,\n    11, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 13, 10,\n    11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 13, 13, 10,\n    11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 13, 13, 10,\n    12, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 10,\n    12, 12, 11, 11, 11, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 10,\n    12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 10,\n    12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 10,\n    13, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 10,\n    9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 6\n];\n\nTables$1.t32l = [\n    1 + 0, 4 + 1, 4 + 1, 5 + 2, 4 + 1, 6 + 2, 5 + 2, 6 + 3,\n    4 + 1, 5 + 2, 5 + 2, 6 + 3, 5 + 2, 6 + 3, 6 + 3, 6 + 4\n];\n\nTables$1.t33l = [\n    4 + 0, 4 + 1, 4 + 1, 4 + 2, 4 + 1, 4 + 2, 4 + 2, 4 + 3,\n    4 + 1, 4 + 2, 4 + 2, 4 + 3, 4 + 2, 4 + 3, 4 + 3, 4 + 4\n];\n\nTables$1.ht = [\n    /* xlen, linmax, table, hlen */\n    new HuffCodeTab(0, 0, null, null),\n    new HuffCodeTab(2, 0, Tables$1.t1HB, Tables$1.t1l),\n    new HuffCodeTab(3, 0, Tables$1.t2HB, Tables$1.t2l),\n    new HuffCodeTab(3, 0, Tables$1.t3HB, Tables$1.t3l),\n    new HuffCodeTab(0, 0, null, null), /* Apparently not used */\n    new HuffCodeTab(4, 0, Tables$1.t5HB, Tables$1.t5l),\n    new HuffCodeTab(4, 0, Tables$1.t6HB, Tables$1.t6l),\n    new HuffCodeTab(6, 0, Tables$1.t7HB, Tables$1.t7l),\n    new HuffCodeTab(6, 0, Tables$1.t8HB, Tables$1.t8l),\n    new HuffCodeTab(6, 0, Tables$1.t9HB, Tables$1.t9l),\n    new HuffCodeTab(8, 0, Tables$1.t10HB, Tables$1.t10l),\n    new HuffCodeTab(8, 0, Tables$1.t11HB, Tables$1.t11l),\n    new HuffCodeTab(8, 0, Tables$1.t12HB, Tables$1.t12l),\n    new HuffCodeTab(16, 0, Tables$1.t13HB, Tables$1.t13l),\n    new HuffCodeTab(0, 0, null, Tables$1.t16_5l), /* Apparently not used */\n    new HuffCodeTab(16, 0, Tables$1.t15HB, Tables$1.t15l),\n\n    new HuffCodeTab(1, 1, Tables$1.t16HB, Tables$1.t16l),\n    new HuffCodeTab(2, 3, Tables$1.t16HB, Tables$1.t16l),\n    new HuffCodeTab(3, 7, Tables$1.t16HB, Tables$1.t16l),\n    new HuffCodeTab(4, 15, Tables$1.t16HB, Tables$1.t16l),\n    new HuffCodeTab(6, 63, Tables$1.t16HB, Tables$1.t16l),\n    new HuffCodeTab(8, 255, Tables$1.t16HB, Tables$1.t16l),\n    new HuffCodeTab(10, 1023, Tables$1.t16HB, Tables$1.t16l),\n    new HuffCodeTab(13, 8191, Tables$1.t16HB, Tables$1.t16l),\n\n    new HuffCodeTab(4, 15, Tables$1.t24HB, Tables$1.t24l),\n    new HuffCodeTab(5, 31, Tables$1.t24HB, Tables$1.t24l),\n    new HuffCodeTab(6, 63, Tables$1.t24HB, Tables$1.t24l),\n    new HuffCodeTab(7, 127, Tables$1.t24HB, Tables$1.t24l),\n    new HuffCodeTab(8, 255, Tables$1.t24HB, Tables$1.t24l),\n    new HuffCodeTab(9, 511, Tables$1.t24HB, Tables$1.t24l),\n    new HuffCodeTab(11, 2047, Tables$1.t24HB, Tables$1.t24l),\n    new HuffCodeTab(13, 8191, Tables$1.t24HB, Tables$1.t24l),\n\n    new HuffCodeTab(0, 0, Tables$1.t32HB, Tables$1.t32l),\n    new HuffCodeTab(0, 0, Tables$1.t33HB, Tables$1.t33l),\n];\n\n/**\n * <CODE>\n *  for (i = 0; i < 16*16; i++) [\n *      largetbl[i] = ((ht[16].hlen[i]) << 16) + ht[24].hlen[i];\n *  ]\n * </CODE>\n *\n */\nTables$1.largetbl = [\n    0x010004, 0x050005, 0x070007, 0x090008, 0x0a0009, 0x0a000a, 0x0b000a, 0x0b000b,\n    0x0c000b, 0x0c000c, 0x0c000c, 0x0d000c, 0x0d000c, 0x0d000c, 0x0e000d, 0x0a000a,\n    0x040005, 0x060006, 0x080007, 0x090008, 0x0a0009, 0x0b000a, 0x0b000a, 0x0b000b,\n    0x0c000b, 0x0c000b, 0x0c000c, 0x0d000c, 0x0e000c, 0x0d000c, 0x0e000c, 0x0a000a,\n    0x070007, 0x080007, 0x090008, 0x0a0009, 0x0b0009, 0x0b000a, 0x0c000a, 0x0c000b,\n    0x0d000b, 0x0c000b, 0x0d000b, 0x0d000c, 0x0d000c, 0x0e000c, 0x0e000d, 0x0b0009,\n    0x090008, 0x090008, 0x0a0009, 0x0b0009, 0x0b000a, 0x0c000a, 0x0c000a, 0x0c000b,\n    0x0d000b, 0x0d000b, 0x0e000b, 0x0e000c, 0x0e000c, 0x0f000c, 0x0f000c, 0x0c0009,\n    0x0a0009, 0x0a0009, 0x0b0009, 0x0b000a, 0x0c000a, 0x0c000a, 0x0d000a, 0x0d000b,\n    0x0d000b, 0x0e000b, 0x0e000c, 0x0e000c, 0x0f000c, 0x0f000c, 0x0f000d, 0x0b0009,\n    0x0a000a, 0x0a0009, 0x0b000a, 0x0b000a, 0x0c000a, 0x0d000a, 0x0d000b, 0x0e000b,\n    0x0d000b, 0x0e000b, 0x0e000c, 0x0f000c, 0x0f000c, 0x0f000c, 0x10000c, 0x0c0009,\n    0x0b000a, 0x0b000a, 0x0b000a, 0x0c000a, 0x0d000a, 0x0d000b, 0x0d000b, 0x0d000b,\n    0x0e000b, 0x0e000c, 0x0e000c, 0x0e000c, 0x0f000c, 0x0f000c, 0x10000d, 0x0c0009,\n    0x0b000b, 0x0b000a, 0x0c000a, 0x0c000a, 0x0d000b, 0x0d000b, 0x0d000b, 0x0e000b,\n    0x0e000c, 0x0f000c, 0x0f000c, 0x0f000c, 0x0f000c, 0x11000d, 0x11000d, 0x0c000a,\n    0x0b000b, 0x0c000b, 0x0c000b, 0x0d000b, 0x0d000b, 0x0d000b, 0x0e000b, 0x0e000b,\n    0x0f000b, 0x0f000c, 0x0f000c, 0x0f000c, 0x10000c, 0x10000d, 0x10000d, 0x0c000a,\n    0x0c000b, 0x0c000b, 0x0c000b, 0x0d000b, 0x0d000b, 0x0e000b, 0x0e000b, 0x0f000c,\n    0x0f000c, 0x0f000c, 0x0f000c, 0x10000c, 0x0f000d, 0x10000d, 0x0f000d, 0x0d000a,\n    0x0c000c, 0x0d000b, 0x0c000b, 0x0d000b, 0x0e000b, 0x0e000c, 0x0e000c, 0x0e000c,\n    0x0f000c, 0x10000c, 0x10000c, 0x10000d, 0x11000d, 0x11000d, 0x10000d, 0x0c000a,\n    0x0d000c, 0x0d000c, 0x0d000b, 0x0d000b, 0x0e000b, 0x0e000c, 0x0f000c, 0x10000c,\n    0x10000c, 0x10000c, 0x10000c, 0x10000d, 0x10000d, 0x0f000d, 0x10000d, 0x0d000a,\n    0x0d000c, 0x0e000c, 0x0e000c, 0x0e000c, 0x0e000c, 0x0f000c, 0x0f000c, 0x0f000c,\n    0x0f000c, 0x11000c, 0x10000d, 0x10000d, 0x10000d, 0x10000d, 0x12000d, 0x0d000a,\n    0x0f000c, 0x0e000c, 0x0e000c, 0x0e000c, 0x0f000c, 0x0f000c, 0x10000c, 0x10000c,\n    0x10000d, 0x12000d, 0x11000d, 0x11000d, 0x11000d, 0x13000d, 0x11000d, 0x0d000a,\n    0x0e000d, 0x0f000c, 0x0d000c, 0x0e000c, 0x10000c, 0x10000c, 0x0f000c, 0x10000d,\n    0x10000d, 0x11000d, 0x12000d, 0x11000d, 0x13000d, 0x11000d, 0x10000d, 0x0d000a,\n    0x0a0009, 0x0a0009, 0x0a0009, 0x0b0009, 0x0b0009, 0x0c0009, 0x0c0009, 0x0c0009,\n    0x0d0009, 0x0d0009, 0x0d0009, 0x0d000a, 0x0d000a, 0x0d000a, 0x0d000a, 0x0a0006\n];\n/**\n * <CODE>\n *  for (i = 0; i < 3*3; i++) [\n *      table23[i] = ((ht[2].hlen[i]) << 16) + ht[3].hlen[i];\n *  ]\n * </CODE>\n *\n */\nTables$1.table23 = [\n    0x010002, 0x040003, 0x070007,\n    0x040004, 0x050004, 0x070007,\n    0x060006, 0x070007, 0x080008\n];\n\n/**\n * <CODE>\n *  for (i = 0; i < 4*4; i++) [\n *       table56[i] = ((ht[5].hlen[i]) << 16) + ht[6].hlen[i];\n *   ]\n * </CODE>\n *\n */\nTables$1.table56 = [\n    0x010003, 0x040004, 0x070006, 0x080008, 0x040004, 0x050004, 0x080006, 0x090007,\n    0x070005, 0x080006, 0x090007, 0x0a0008, 0x080007, 0x080007, 0x090008, 0x0a0009\n];\n\nTables$1.bitrate_table = [\n    [0, 8, 16, 24, 32, 40, 48, 56, 64, 80, 96, 112, 128, 144, 160, -1], /* MPEG 2 */\n    [0, 32, 40, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256, 320, -1], /* MPEG 1 */\n    [0, 8, 16, 24, 32, 40, 48, 56, 64, -1, -1, -1, -1, -1, -1, -1], /* MPEG 2.5 */\n];\n\n/**\n * MPEG 2, MPEG 1, MPEG 2.5.\n */\nTables$1.samplerate_table = [\n    [22050, 24000, 16000, -1],\n    [44100, 48000, 32000, -1],\n    [11025, 12000, 8000, -1],\n];\n\n/**\n * This is the scfsi_band table from 2.4.2.7 of the IS.\n */\nTables$1.scfsi_band = [0, 6, 11, 16, 21];\n\nvar Tables_1 = Tables$1;\n\nvar VbrMode$19 = common.VbrMode;\nvar Float$19 = common.Float;\nvar Util$19 = common.Util;\nvar new_float$19 = common.new_float;\nvar new_int$19 = common.new_int;\nvar assert$19 = common.assert;\n\n\n\n\n\nQuantizePVT$1.Q_MAX = (256 + 1);\nQuantizePVT$1.Q_MAX2 = 116;\nQuantizePVT$1.LARGE_BITS = 100000;\nQuantizePVT$1.IXMAX_VAL = 8206;\n\nfunction QuantizePVT$1() {\n\n    var tak = null;\n    var rv = null;\n    var psy = null;\n\n    this.setModules = function (_tk, _rv, _psy) {\n        tak = _tk;\n        rv = _rv;\n        psy = _psy;\n    };\n\n    function POW20(x) {\n        assert$19(0 <= (x + QuantizePVT$1.Q_MAX2) && x < QuantizePVT$1.Q_MAX);\n        return pow20[x + QuantizePVT$1.Q_MAX2];\n    }\n\n    this.IPOW20 = function (x) {\n        assert$19(0 <= x && x < QuantizePVT$1.Q_MAX);\n        return ipow20[x];\n    };\n\n    /**\n     * smallest such that 1.0+DBL_EPSILON != 1.0\n     */\n    var DBL_EPSILON = 2.2204460492503131e-016;\n\n    /**\n     * ix always <= 8191+15. see count_bits()\n     */\n    var IXMAX_VAL = QuantizePVT$1.IXMAX_VAL;\n\n    var PRECALC_SIZE = (IXMAX_VAL + 2);\n\n    var Q_MAX = QuantizePVT$1.Q_MAX;\n\n\n    /**\n     * <CODE>\n     * minimum possible number of\n     * -cod_info.global_gain + ((scalefac[] + (cod_info.preflag ? pretab[sfb] : 0))\n     * << (cod_info.scalefac_scale + 1)) + cod_info.subblock_gain[cod_info.window[sfb]] * 8;\n     *\n     * for long block, 0+((15+3)<<2) = 18*4 = 72\n     * for short block, 0+(15<<2)+7*8 = 15*4+56 = 116\n     * </CODE>\n     */\n    var Q_MAX2 = QuantizePVT$1.Q_MAX2;\n\n    var LARGE_BITS = QuantizePVT$1.LARGE_BITS;\n\n\n    /**\n     * Assuming dynamic range=96dB, this value should be 92\n     */\n    var NSATHSCALE = 100;\n\n    /**\n     * The following table is used to implement the scalefactor partitioning for\n     * MPEG2 as described in section 2.4.3.2 of the IS. The indexing corresponds\n     * to the way the tables are presented in the IS:\n     *\n     * [table_number][row_in_table][column of nr_of_sfb]\n     */\n    this.nr_of_sfb_block = [\n        [[6, 5, 5, 5], [9, 9, 9, 9], [6, 9, 9, 9]],\n        [[6, 5, 7, 3], [9, 9, 12, 6], [6, 9, 12, 6]],\n        [[11, 10, 0, 0], [18, 18, 0, 0], [15, 18, 0, 0]],\n        [[7, 7, 7, 0], [12, 12, 12, 0], [6, 15, 12, 0]],\n        [[6, 6, 6, 3], [12, 9, 9, 6], [6, 12, 9, 6]],\n        [[8, 8, 5, 0], [15, 12, 9, 0], [6, 18, 9, 0]]];\n\n    /**\n     * Table B.6: layer3 preemphasis\n     */\n    var pretab = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1,\n        2, 2, 3, 3, 3, 2, 0];\n    this.pretab = pretab;\n\n    /**\n     * Here are MPEG1 Table B.8 and MPEG2 Table B.1 -- Layer III scalefactor\n     * bands. <BR>\n     * Index into this using a method such as:<BR>\n     * idx = fr_ps.header.sampling_frequency + (fr_ps.header.version * 3)\n     */\n    this.sfBandIndex = [\n        // Table B.2.b: 22.05 kHz\n        new ScaleFac_1([0, 6, 12, 18, 24, 30, 36, 44, 54, 66, 80, 96, 116, 140, 168, 200, 238, 284, 336, 396, 464,\n                522, 576],\n            [0, 4, 8, 12, 18, 24, 32, 42, 56, 74, 100, 132, 174, 192]\n            , [0, 0, 0, 0, 0, 0, 0] //  sfb21 pseudo sub bands\n            , [0, 0, 0, 0, 0, 0, 0] //  sfb12 pseudo sub bands\n        ),\n        /* Table B.2.c: 24 kHz */ /* docs: 332. mpg123(broken): 330 */\n        new ScaleFac_1([0, 6, 12, 18, 24, 30, 36, 44, 54, 66, 80, 96, 114, 136, 162, 194, 232, 278, 332, 394, 464,\n                540, 576],\n            [0, 4, 8, 12, 18, 26, 36, 48, 62, 80, 104, 136, 180, 192]\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb21 pseudo sub bands */\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb12 pseudo sub bands */\n        ),\n        /* Table B.2.a: 16 kHz */\n        new ScaleFac_1([0, 6, 12, 18, 24, 30, 36, 44, 54, 66, 80, 96, 116, 140, 168, 200, 238, 284, 336, 396, 464,\n                522, 576],\n            [0, 4, 8, 12, 18, 26, 36, 48, 62, 80, 104, 134, 174, 192]\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb21 pseudo sub bands */\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb12 pseudo sub bands */\n        ),\n        /* Table B.8.b: 44.1 kHz */\n        new ScaleFac_1([0, 4, 8, 12, 16, 20, 24, 30, 36, 44, 52, 62, 74, 90, 110, 134, 162, 196, 238, 288, 342, 418,\n                576],\n            [0, 4, 8, 12, 16, 22, 30, 40, 52, 66, 84, 106, 136, 192]\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb21 pseudo sub bands */\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb12 pseudo sub bands */\n        ),\n        /* Table B.8.c: 48 kHz */\n        new ScaleFac_1([0, 4, 8, 12, 16, 20, 24, 30, 36, 42, 50, 60, 72, 88, 106, 128, 156, 190, 230, 276, 330, 384,\n                576],\n            [0, 4, 8, 12, 16, 22, 28, 38, 50, 64, 80, 100, 126, 192]\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb21 pseudo sub bands */\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb12 pseudo sub bands */\n        ),\n        /* Table B.8.a: 32 kHz */\n        new ScaleFac_1([0, 4, 8, 12, 16, 20, 24, 30, 36, 44, 54, 66, 82, 102, 126, 156, 194, 240, 296, 364, 448, 550,\n                576],\n            [0, 4, 8, 12, 16, 22, 30, 42, 58, 78, 104, 138, 180, 192]\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb21 pseudo sub bands */\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb12 pseudo sub bands */\n        ),\n        /* MPEG-2.5 11.025 kHz */\n        new ScaleFac_1([0, 6, 12, 18, 24, 30, 36, 44, 54, 66, 80, 96, 116, 140, 168, 200, 238, 284, 336, 396, 464,\n                522, 576],\n            [0 / 3, 12 / 3, 24 / 3, 36 / 3, 54 / 3, 78 / 3, 108 / 3, 144 / 3, 186 / 3, 240 / 3, 312 / 3,\n                402 / 3, 522 / 3, 576 / 3]\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb21 pseudo sub bands */\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb12 pseudo sub bands */\n        ),\n        /* MPEG-2.5 12 kHz */\n        new ScaleFac_1([0, 6, 12, 18, 24, 30, 36, 44, 54, 66, 80, 96, 116, 140, 168, 200, 238, 284, 336, 396, 464,\n                522, 576],\n            [0 / 3, 12 / 3, 24 / 3, 36 / 3, 54 / 3, 78 / 3, 108 / 3, 144 / 3, 186 / 3, 240 / 3, 312 / 3,\n                402 / 3, 522 / 3, 576 / 3]\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb21 pseudo sub bands */\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb12 pseudo sub bands */\n        ),\n        /* MPEG-2.5 8 kHz */\n        new ScaleFac_1([0, 12, 24, 36, 48, 60, 72, 88, 108, 132, 160, 192, 232, 280, 336, 400, 476, 566, 568, 570,\n                572, 574, 576],\n            [0 / 3, 24 / 3, 48 / 3, 72 / 3, 108 / 3, 156 / 3, 216 / 3, 288 / 3, 372 / 3, 480 / 3, 486 / 3,\n                492 / 3, 498 / 3, 576 / 3]\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb21 pseudo sub bands */\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb12 pseudo sub bands */\n        )\n    ];\n\n    var pow20 = new_float$19(Q_MAX + Q_MAX2 + 1);\n    var ipow20 = new_float$19(Q_MAX);\n    var pow43 = new_float$19(PRECALC_SIZE);\n\n    var adj43 = new_float$19(PRECALC_SIZE);\n    this.adj43 = adj43;\n\n    /**\n     * <PRE>\n     * compute the ATH for each scalefactor band cd range: 0..96db\n     *\n     * Input: 3.3kHz signal 32767 amplitude (3.3kHz is where ATH is smallest =\n     * -5db) longblocks: sfb=12 en0/bw=-11db max_en0 = 1.3db shortblocks: sfb=5\n     * -9db 0db\n     *\n     * Input: 1 1 1 1 1 1 1 -1 -1 -1 -1 -1 -1 -1 (repeated) longblocks: amp=1\n     * sfb=12 en0/bw=-103 db max_en0 = -92db amp=32767 sfb=12 -12 db -1.4db\n     *\n     * Input: 1 1 1 1 1 1 1 -1 -1 -1 -1 -1 -1 -1 (repeated) shortblocks: amp=1\n     * sfb=5 en0/bw= -99 -86 amp=32767 sfb=5 -9 db 4db\n     *\n     *\n     * MAX energy of largest wave at 3.3kHz = 1db AVE energy of largest wave at\n     * 3.3kHz = -11db Let's take AVE: -11db = maximum signal in sfb=12. Dynamic\n     * range of CD: 96db. Therefor energy of smallest audible wave in sfb=12 =\n     * -11 - 96 = -107db = ATH at 3.3kHz.\n     *\n     * ATH formula for this wave: -5db. To adjust to LAME scaling, we need ATH =\n     * ATH_formula - 103 (db) ATH = ATH * 2.5e-10 (ener)\n     * </PRE>\n     */\n    function ATHmdct(gfp, f) {\n        var ath = psy.ATHformula(f, gfp);\n\n        ath -= NSATHSCALE;\n\n        /* modify the MDCT scaling for the ATH and convert to energy */\n        ath = Math.pow(10.0, ath / 10.0 + gfp.ATHlower);\n        return ath;\n    }\n\n    function compute_ath(gfp) {\n        var ATH_l = gfp.internal_flags.ATH.l;\n        var ATH_psfb21 = gfp.internal_flags.ATH.psfb21;\n        var ATH_s = gfp.internal_flags.ATH.s;\n        var ATH_psfb12 = gfp.internal_flags.ATH.psfb12;\n        var gfc = gfp.internal_flags;\n        var samp_freq = gfp.out_samplerate;\n\n        for (var sfb = 0; sfb < Encoder_1.SBMAX_l; sfb++) {\n            var start = gfc.scalefac_band.l[sfb];\n            var end = gfc.scalefac_band.l[sfb + 1];\n            ATH_l[sfb] = Float$19.MAX_VALUE;\n            for (var i = start; i < end; i++) {\n                var freq = i * samp_freq / (2 * 576);\n                var ATH_f = ATHmdct(gfp, freq);\n                /* freq in kHz */\n                ATH_l[sfb] = Math.min(ATH_l[sfb], ATH_f);\n            }\n        }\n\n        for (var sfb = 0; sfb < Encoder_1.PSFB21; sfb++) {\n            var start = gfc.scalefac_band.psfb21[sfb];\n            var end = gfc.scalefac_band.psfb21[sfb + 1];\n            ATH_psfb21[sfb] = Float$19.MAX_VALUE;\n            for (var i = start; i < end; i++) {\n                var freq = i * samp_freq / (2 * 576);\n                var ATH_f = ATHmdct(gfp, freq);\n                /* freq in kHz */\n                ATH_psfb21[sfb] = Math.min(ATH_psfb21[sfb], ATH_f);\n            }\n        }\n\n        for (var sfb = 0; sfb < Encoder_1.SBMAX_s; sfb++) {\n            var start = gfc.scalefac_band.s[sfb];\n            var end = gfc.scalefac_band.s[sfb + 1];\n            ATH_s[sfb] = Float$19.MAX_VALUE;\n            for (var i = start; i < end; i++) {\n                var freq = i * samp_freq / (2 * 192);\n                var ATH_f = ATHmdct(gfp, freq);\n                /* freq in kHz */\n                ATH_s[sfb] = Math.min(ATH_s[sfb], ATH_f);\n            }\n            ATH_s[sfb] *= (gfc.scalefac_band.s[sfb + 1] - gfc.scalefac_band.s[sfb]);\n        }\n\n        for (var sfb = 0; sfb < Encoder_1.PSFB12; sfb++) {\n            var start = gfc.scalefac_band.psfb12[sfb];\n            var end = gfc.scalefac_band.psfb12[sfb + 1];\n            ATH_psfb12[sfb] = Float$19.MAX_VALUE;\n            for (var i = start; i < end; i++) {\n                var freq = i * samp_freq / (2 * 192);\n                var ATH_f = ATHmdct(gfp, freq);\n                /* freq in kHz */\n                ATH_psfb12[sfb] = Math.min(ATH_psfb12[sfb], ATH_f);\n            }\n            /* not sure about the following */\n            ATH_psfb12[sfb] *= (gfc.scalefac_band.s[13] - gfc.scalefac_band.s[12]);\n        }\n\n        /*\n         * no-ATH mode: reduce ATH to -200 dB\n         */\n        if (gfp.noATH) {\n            for (var sfb = 0; sfb < Encoder_1.SBMAX_l; sfb++) {\n                ATH_l[sfb] = 1E-20;\n            }\n            for (var sfb = 0; sfb < Encoder_1.PSFB21; sfb++) {\n                ATH_psfb21[sfb] = 1E-20;\n            }\n            for (var sfb = 0; sfb < Encoder_1.SBMAX_s; sfb++) {\n                ATH_s[sfb] = 1E-20;\n            }\n            for (var sfb = 0; sfb < Encoder_1.PSFB12; sfb++) {\n                ATH_psfb12[sfb] = 1E-20;\n            }\n        }\n\n        /*\n         * work in progress, don't rely on it too much\n         */\n        gfc.ATH.floor = 10. * Math.log10(ATHmdct(gfp, -1.));\n    }\n\n    /**\n     * initialization for iteration_loop\n     */\n    this.iteration_init = function (gfp) {\n        var gfc = gfp.internal_flags;\n        var l3_side = gfc.l3_side;\n        var i;\n\n        if (gfc.iteration_init_init == 0) {\n            gfc.iteration_init_init = 1;\n\n            l3_side.main_data_begin = 0;\n            compute_ath(gfp);\n\n            pow43[0] = 0.0;\n            for (i = 1; i < PRECALC_SIZE; i++)\n                pow43[i] = Math.pow(i, 4.0 / 3.0);\n\n            for (i = 0; i < PRECALC_SIZE - 1; i++)\n                adj43[i] = ((i + 1) - Math.pow(\n                    0.5 * (pow43[i] + pow43[i + 1]), 0.75));\n            adj43[i] = 0.5;\n\n            for (i = 0; i < Q_MAX; i++)\n                ipow20[i] = Math.pow(2.0, (i - 210) * -0.1875);\n            for (i = 0; i <= Q_MAX + Q_MAX2; i++)\n                pow20[i] = Math.pow(2.0, (i - 210 - Q_MAX2) * 0.25);\n\n            tak.huffman_init(gfc);\n\n            {\n                var bass, alto, treble, sfb21;\n\n                i = (gfp.exp_nspsytune >> 2) & 63;\n                if (i >= 32)\n                    i -= 64;\n                bass = Math.pow(10, i / 4.0 / 10.0);\n\n                i = (gfp.exp_nspsytune >> 8) & 63;\n                if (i >= 32)\n                    i -= 64;\n                alto = Math.pow(10, i / 4.0 / 10.0);\n\n                i = (gfp.exp_nspsytune >> 14) & 63;\n                if (i >= 32)\n                    i -= 64;\n                treble = Math.pow(10, i / 4.0 / 10.0);\n\n                /*\n                 * to be compatible with Naoki's original code, the next 6 bits\n                 * define only the amount of changing treble for sfb21\n                 */\n                i = (gfp.exp_nspsytune >> 20) & 63;\n                if (i >= 32)\n                    i -= 64;\n                sfb21 = treble * Math.pow(10, i / 4.0 / 10.0);\n                for (i = 0; i < Encoder_1.SBMAX_l; i++) {\n                    var f;\n                    if (i <= 6)\n                        f = bass;\n                    else if (i <= 13)\n                        f = alto;\n                    else if (i <= 20)\n                        f = treble;\n                    else\n                        f = sfb21;\n\n                    gfc.nsPsy.longfact[i] = f;\n                }\n                for (i = 0; i < Encoder_1.SBMAX_s; i++) {\n                    var f;\n                    if (i <= 5)\n                        f = bass;\n                    else if (i <= 10)\n                        f = alto;\n                    else if (i <= 11)\n                        f = treble;\n                    else\n                        f = sfb21;\n\n                    gfc.nsPsy.shortfact[i] = f;\n                }\n            }\n        }\n    };\n\n    /**\n     * allocate bits among 2 channels based on PE<BR>\n     * mt 6/99<BR>\n     * bugfixes rh 8/01: often allocated more than the allowed 4095 bits\n     */\n    this.on_pe = function (gfp, pe,\n                           targ_bits, mean_bits, gr, cbr) {\n        var gfc = gfp.internal_flags;\n        var tbits = 0, bits;\n        var add_bits = new_int$19(2);\n        var ch;\n\n        /* allocate targ_bits for granule */\n        var mb = new MeanBits_1(tbits);\n        var extra_bits = rv.ResvMaxBits(gfp, mean_bits, mb, cbr);\n        tbits = mb.bits;\n        /* maximum allowed bits for this granule */\n        var max_bits = tbits + extra_bits;\n        if (max_bits > LameInternalFlags_1.MAX_BITS_PER_GRANULE) {\n            // hard limit per granule\n            max_bits = LameInternalFlags_1.MAX_BITS_PER_GRANULE;\n        }\n        for (bits = 0, ch = 0; ch < gfc.channels_out; ++ch) {\n            /******************************************************************\n             * allocate bits for each channel\n             ******************************************************************/\n            targ_bits[ch] = Math.min(LameInternalFlags_1.MAX_BITS_PER_CHANNEL,\n                tbits / gfc.channels_out);\n\n            add_bits[ch] = 0 | (targ_bits[ch] * pe[gr][ch] / 700.0 - targ_bits[ch]);\n\n            /* at most increase bits by 1.5*average */\n            if (add_bits[ch] > mean_bits * 3 / 4)\n                add_bits[ch] = mean_bits * 3 / 4;\n            if (add_bits[ch] < 0)\n                add_bits[ch] = 0;\n\n            if (add_bits[ch] + targ_bits[ch] > LameInternalFlags_1.MAX_BITS_PER_CHANNEL)\n                add_bits[ch] = Math.max(0,\n                    LameInternalFlags_1.MAX_BITS_PER_CHANNEL - targ_bits[ch]);\n\n            bits += add_bits[ch];\n        }\n        if (bits > extra_bits) {\n            for (ch = 0; ch < gfc.channels_out; ++ch) {\n                add_bits[ch] = extra_bits * add_bits[ch] / bits;\n            }\n        }\n\n        for (ch = 0; ch < gfc.channels_out; ++ch) {\n            targ_bits[ch] += add_bits[ch];\n            extra_bits -= add_bits[ch];\n        }\n\n        for (bits = 0, ch = 0; ch < gfc.channels_out; ++ch) {\n            bits += targ_bits[ch];\n        }\n        if (bits > LameInternalFlags_1.MAX_BITS_PER_GRANULE) {\n            var sum = 0;\n            for (ch = 0; ch < gfc.channels_out; ++ch) {\n                targ_bits[ch] *= LameInternalFlags_1.MAX_BITS_PER_GRANULE;\n                targ_bits[ch] /= bits;\n                sum += targ_bits[ch];\n            }\n            assert$19(sum <= LameInternalFlags_1.MAX_BITS_PER_GRANULE);\n        }\n\n        return max_bits;\n    };\n\n    this.reduce_side = function (targ_bits, ms_ener_ratio, mean_bits, max_bits) {\n        assert$19(max_bits <= LameInternalFlags_1.MAX_BITS_PER_GRANULE);\n        assert$19(targ_bits[0] + targ_bits[1] <= LameInternalFlags_1.MAX_BITS_PER_GRANULE);\n\n        /*\n         * ms_ener_ratio = 0: allocate 66/33 mid/side fac=.33 ms_ener_ratio =.5:\n         * allocate 50/50 mid/side fac= 0\n         */\n        /* 75/25 split is fac=.5 */\n        var fac = .33 * (.5 - ms_ener_ratio) / .5;\n        if (fac < 0)\n            fac = 0;\n        if (fac > .5)\n            fac = .5;\n\n        /* number of bits to move from side channel to mid channel */\n        /* move_bits = fac*targ_bits[1]; */\n        var move_bits = 0 | (fac * .5 * (targ_bits[0] + targ_bits[1]));\n\n        if (move_bits > LameInternalFlags_1.MAX_BITS_PER_CHANNEL - targ_bits[0]) {\n            move_bits = LameInternalFlags_1.MAX_BITS_PER_CHANNEL - targ_bits[0];\n        }\n        if (move_bits < 0)\n            move_bits = 0;\n\n        if (targ_bits[1] >= 125) {\n            /* dont reduce side channel below 125 bits */\n            if (targ_bits[1] - move_bits > 125) {\n\n                /* if mid channel already has 2x more than average, dont bother */\n                /* mean_bits = bits per granule (for both channels) */\n                if (targ_bits[0] < mean_bits)\n                    targ_bits[0] += move_bits;\n                targ_bits[1] -= move_bits;\n            } else {\n                targ_bits[0] += targ_bits[1] - 125;\n                targ_bits[1] = 125;\n            }\n        }\n\n        move_bits = targ_bits[0] + targ_bits[1];\n        if (move_bits > max_bits) {\n            targ_bits[0] = (max_bits * targ_bits[0]) / move_bits;\n            targ_bits[1] = (max_bits * targ_bits[1]) / move_bits;\n        }\n        assert$19(targ_bits[0] <= LameInternalFlags_1.MAX_BITS_PER_CHANNEL);\n        assert$19(targ_bits[1] <= LameInternalFlags_1.MAX_BITS_PER_CHANNEL);\n        assert$19(targ_bits[0] + targ_bits[1] <= LameInternalFlags_1.MAX_BITS_PER_GRANULE);\n    };\n\n    /**\n     *  Robert Hegemann 2001-04-27:\n     *  this adjusts the ATH, keeping the original noise floor\n     *  affects the higher frequencies more than the lower ones\n     */\n    this.athAdjust = function (a, x, athFloor) {\n        /*\n         * work in progress\n         */\n        var o = 90.30873362;\n        var p = 94.82444863;\n        var u = Util$19.FAST_LOG10_X(x, 10.0);\n        var v = a * a;\n        var w = 0.0;\n        u -= athFloor;\n        /* undo scaling */\n        if (v > 1E-20)\n            w = 1. + Util$19.FAST_LOG10_X(v, 10.0 / o);\n        if (w < 0)\n            w = 0.;\n        u *= w;\n        u += athFloor + o - p;\n        /* redo scaling */\n\n        return Math.pow(10., 0.1 * u);\n    };\n\n    /**\n     * Calculate the allowed distortion for each scalefactor band, as determined\n     * by the psychoacoustic model. xmin(sb) = ratio(sb) * en(sb) / bw(sb)\n     *\n     * returns number of sfb's with energy > ATH\n     */\n    this.calc_xmin = function (gfp, ratio, cod_info, pxmin) {\n        var pxminPos = 0;\n        var gfc = gfp.internal_flags;\n        var gsfb, j = 0, ath_over = 0;\n        var ATH = gfc.ATH;\n        var xr = cod_info.xr;\n        var enable_athaa_fix = (gfp.VBR == VbrMode$19.vbr_mtrh) ? 1 : 0;\n        var masking_lower = gfc.masking_lower;\n\n        if (gfp.VBR == VbrMode$19.vbr_mtrh || gfp.VBR == VbrMode$19.vbr_mt) {\n            /* was already done in PSY-Model */\n            masking_lower = 1.0;\n        }\n\n        for (gsfb = 0; gsfb < cod_info.psy_lmax; gsfb++) {\n            var en0, xmin;\n            var rh1, rh2;\n            var width, l;\n\n            if (gfp.VBR == VbrMode$19.vbr_rh || gfp.VBR == VbrMode$19.vbr_mtrh)\n                xmin = athAdjust(ATH.adjust, ATH.l[gsfb], ATH.floor);\n            else\n                xmin = ATH.adjust * ATH.l[gsfb];\n\n            width = cod_info.width[gsfb];\n            rh1 = xmin / width;\n            rh2 = DBL_EPSILON;\n            l = width >> 1;\n            en0 = 0.0;\n            do {\n                var xa, xb;\n                xa = xr[j] * xr[j];\n                en0 += xa;\n                rh2 += (xa < rh1) ? xa : rh1;\n                j++;\n                xb = xr[j] * xr[j];\n                en0 += xb;\n                rh2 += (xb < rh1) ? xb : rh1;\n                j++;\n            } while (--l > 0);\n            if (en0 > xmin)\n                ath_over++;\n\n            if (gsfb == Encoder_1.SBPSY_l) {\n                var x = xmin * gfc.nsPsy.longfact[gsfb];\n                if (rh2 < x) {\n                    rh2 = x;\n                }\n            }\n            if (enable_athaa_fix != 0) {\n                xmin = rh2;\n            }\n            if (!gfp.ATHonly) {\n                var e = ratio.en.l[gsfb];\n                if (e > 0.0) {\n                    var x;\n                    x = en0 * ratio.thm.l[gsfb] * masking_lower / e;\n                    if (enable_athaa_fix != 0)\n                        x *= gfc.nsPsy.longfact[gsfb];\n                    if (xmin < x)\n                        xmin = x;\n                }\n            }\n            if (enable_athaa_fix != 0)\n                pxmin[pxminPos++] = xmin;\n            else\n                pxmin[pxminPos++] = xmin * gfc.nsPsy.longfact[gsfb];\n        }\n        /* end of long block loop */\n\n        /* use this function to determine the highest non-zero coeff */\n        var max_nonzero = 575;\n        if (cod_info.block_type != Encoder_1.SHORT_TYPE) {\n            // NORM, START or STOP type, but not SHORT\n            var k = 576;\n            while (k-- != 0 && BitStream.EQ(xr[k], 0)) {\n                max_nonzero = k;\n            }\n        }\n        cod_info.max_nonzero_coeff = max_nonzero;\n\n        for (var sfb = cod_info.sfb_smin; gsfb < cod_info.psymax; sfb++, gsfb += 3) {\n            var width, b;\n            var tmpATH;\n            if (gfp.VBR == VbrMode$19.vbr_rh || gfp.VBR == VbrMode$19.vbr_mtrh)\n                tmpATH = athAdjust(ATH.adjust, ATH.s[sfb], ATH.floor);\n            else\n                tmpATH = ATH.adjust * ATH.s[sfb];\n\n            width = cod_info.width[gsfb];\n            for (b = 0; b < 3; b++) {\n                var en0 = 0.0, xmin;\n                var rh1, rh2;\n                var l = width >> 1;\n\n                rh1 = tmpATH / width;\n                rh2 = DBL_EPSILON;\n                do {\n                    var xa, xb;\n                    xa = xr[j] * xr[j];\n                    en0 += xa;\n                    rh2 += (xa < rh1) ? xa : rh1;\n                    j++;\n                    xb = xr[j] * xr[j];\n                    en0 += xb;\n                    rh2 += (xb < rh1) ? xb : rh1;\n                    j++;\n                } while (--l > 0);\n                if (en0 > tmpATH)\n                    ath_over++;\n                if (sfb == Encoder_1.SBPSY_s) {\n                    var x = tmpATH * gfc.nsPsy.shortfact[sfb];\n                    if (rh2 < x) {\n                        rh2 = x;\n                    }\n                }\n                if (enable_athaa_fix != 0)\n                    xmin = rh2;\n                else\n                    xmin = tmpATH;\n\n                if (!gfp.ATHonly && !gfp.ATHshort) {\n                    var e = ratio.en.s[sfb][b];\n                    if (e > 0.0) {\n                        var x;\n                        x = en0 * ratio.thm.s[sfb][b] * masking_lower / e;\n                        if (enable_athaa_fix != 0)\n                            x *= gfc.nsPsy.shortfact[sfb];\n                        if (xmin < x)\n                            xmin = x;\n                    }\n                }\n                if (enable_athaa_fix != 0)\n                    pxmin[pxminPos++] = xmin;\n                else\n                    pxmin[pxminPos++] = xmin * gfc.nsPsy.shortfact[sfb];\n            }\n            /* b */\n            if (gfp.useTemporal) {\n                if (pxmin[pxminPos - 3] > pxmin[pxminPos - 3 + 1])\n                    pxmin[pxminPos - 3 + 1] += (pxmin[pxminPos - 3] - pxmin[pxminPos - 3 + 1])\n                        * gfc.decay;\n                if (pxmin[pxminPos - 3 + 1] > pxmin[pxminPos - 3 + 2])\n                    pxmin[pxminPos - 3 + 2] += (pxmin[pxminPos - 3 + 1] - pxmin[pxminPos - 3 + 2])\n                        * gfc.decay;\n            }\n        }\n        /* end of short block sfb loop */\n\n        return ath_over;\n    };\n\n    function StartLine(j) {\n        this.s = j;\n    }\n\n    this.calc_noise_core = function (cod_info, startline, l, step) {\n        var noise = 0;\n        var j = startline.s;\n        var ix = cod_info.l3_enc;\n\n        if (j > cod_info.count1) {\n            while ((l--) != 0) {\n                var temp;\n                temp = cod_info.xr[j];\n                j++;\n                noise += temp * temp;\n                temp = cod_info.xr[j];\n                j++;\n                noise += temp * temp;\n            }\n        } else if (j > cod_info.big_values) {\n            var ix01 = new_float$19(2);\n            ix01[0] = 0;\n            ix01[1] = step;\n            while ((l--) != 0) {\n                var temp;\n                temp = Math.abs(cod_info.xr[j]) - ix01[ix[j]];\n                j++;\n                noise += temp * temp;\n                temp = Math.abs(cod_info.xr[j]) - ix01[ix[j]];\n                j++;\n                noise += temp * temp;\n            }\n        } else {\n            while ((l--) != 0) {\n                var temp;\n                temp = Math.abs(cod_info.xr[j]) - pow43[ix[j]] * step;\n                j++;\n                noise += temp * temp;\n                temp = Math.abs(cod_info.xr[j]) - pow43[ix[j]] * step;\n                j++;\n                noise += temp * temp;\n            }\n        }\n\n        startline.s = j;\n        return noise;\n    };\n\n    /**\n     * <PRE>\n     * -oo dB  =>  -1.00\n     * - 6 dB  =>  -0.97\n     * - 3 dB  =>  -0.80\n     * - 2 dB  =>  -0.64\n     * - 1 dB  =>  -0.38\n     *   0 dB  =>   0.00\n     * + 1 dB  =>  +0.49\n     * + 2 dB  =>  +1.06\n     * + 3 dB  =>  +1.68\n     * + 6 dB  =>  +3.69\n     * +10 dB  =>  +6.45\n     * </PRE>\n     */\n    this.calc_noise = function (cod_info, l3_xmin, distort, res, prev_noise) {\n        var distortPos = 0;\n        var l3_xminPos = 0;\n        var sfb, l, over = 0;\n        var over_noise_db = 0;\n        /* 0 dB relative to masking */\n        var tot_noise_db = 0;\n        /* -200 dB relative to masking */\n        var max_noise = -20.0;\n        var j = 0;\n        var scalefac = cod_info.scalefac;\n        var scalefacPos = 0;\n\n        res.over_SSD = 0;\n\n        for (sfb = 0; sfb < cod_info.psymax; sfb++) {\n            var s = cod_info.global_gain\n                - (((scalefac[scalefacPos++]) + (cod_info.preflag != 0 ? pretab[sfb]\n                    : 0)) << (cod_info.scalefac_scale + 1))\n                - cod_info.subblock_gain[cod_info.window[sfb]] * 8;\n            var noise = 0.0;\n\n            if (prev_noise != null && (prev_noise.step[sfb] == s)) {\n\n                /* use previously computed values */\n                noise = prev_noise.noise[sfb];\n                j += cod_info.width[sfb];\n                distort[distortPos++] = noise / l3_xmin[l3_xminPos++];\n\n                noise = prev_noise.noise_log[sfb];\n\n            } else {\n                var step = POW20(s);\n                l = cod_info.width[sfb] >> 1;\n\n                if ((j + cod_info.width[sfb]) > cod_info.max_nonzero_coeff) {\n                    var usefullsize;\n                    usefullsize = cod_info.max_nonzero_coeff - j + 1;\n\n                    if (usefullsize > 0)\n                        l = usefullsize >> 1;\n                    else\n                        l = 0;\n                }\n\n                var sl = new StartLine(j);\n                noise = this.calc_noise_core(cod_info, sl, l, step);\n                j = sl.s;\n\n                if (prev_noise != null) {\n                    /* save noise values */\n                    prev_noise.step[sfb] = s;\n                    prev_noise.noise[sfb] = noise;\n                }\n\n                noise = distort[distortPos++] = noise / l3_xmin[l3_xminPos++];\n\n                /* multiplying here is adding in dB, but can overflow */\n                noise = Util$19.FAST_LOG10(Math.max(noise, 1E-20));\n\n                if (prev_noise != null) {\n                    /* save noise values */\n                    prev_noise.noise_log[sfb] = noise;\n                }\n            }\n\n            if (prev_noise != null) {\n                /* save noise values */\n                prev_noise.global_gain = cod_info.global_gain;\n            }\n\n            tot_noise_db += noise;\n\n            if (noise > 0.0) {\n                var tmp;\n\n                tmp = Math.max(0 | (noise * 10 + .5), 1);\n                res.over_SSD += tmp * tmp;\n\n                over++;\n                /* multiplying here is adding in dB -but can overflow */\n                /* over_noise *= noise; */\n                over_noise_db += noise;\n            }\n            max_noise = Math.max(max_noise, noise);\n\n        }\n\n        res.over_count = over;\n        res.tot_noise = tot_noise_db;\n        res.over_noise = over_noise_db;\n        res.max_noise = max_noise;\n\n        return over;\n    };\n\n    /**\n     * updates plotting data\n     *\n     * Mark Taylor 2000-??-??\n     *\n     * Robert Hegemann: moved noise/distortion calc into it\n     */\n    this.set_pinfo = function (gfp, cod_info, ratio, gr, ch) {\n        var gfc = gfp.internal_flags;\n        var sfb, sfb2;\n        var l;\n        var en0, en1;\n        var ifqstep = (cod_info.scalefac_scale == 0) ? .5 : 1.0;\n        var scalefac = cod_info.scalefac;\n\n        var l3_xmin = new_float$19(L3Side.SFBMAX);\n        var xfsf = new_float$19(L3Side.SFBMAX);\n        var noise = new CalcNoiseResult();\n\n        calc_xmin(gfp, ratio, cod_info, l3_xmin);\n        calc_noise(cod_info, l3_xmin, xfsf, noise, null);\n\n        var j = 0;\n        sfb2 = cod_info.sfb_lmax;\n        if (cod_info.block_type != Encoder_1.SHORT_TYPE\n            && 0 == cod_info.mixed_block_flag)\n            sfb2 = 22;\n        for (sfb = 0; sfb < sfb2; sfb++) {\n            var start = gfc.scalefac_band.l[sfb];\n            var end = gfc.scalefac_band.l[sfb + 1];\n            var bw = end - start;\n            for (en0 = 0.0; j < end; j++)\n                en0 += cod_info.xr[j] * cod_info.xr[j];\n            en0 /= bw;\n            /* convert to MDCT units */\n            /* scaling so it shows up on FFT plot */\n            en1 = 1e15;\n            gfc.pinfo.en[gr][ch][sfb] = en1 * en0;\n            gfc.pinfo.xfsf[gr][ch][sfb] = en1 * l3_xmin[sfb] * xfsf[sfb] / bw;\n\n            if (ratio.en.l[sfb] > 0 && !gfp.ATHonly)\n                en0 = en0 / ratio.en.l[sfb];\n            else\n                en0 = 0.0;\n\n            gfc.pinfo.thr[gr][ch][sfb] = en1\n                * Math.max(en0 * ratio.thm.l[sfb], gfc.ATH.l[sfb]);\n\n            /* there is no scalefactor bands >= SBPSY_l */\n            gfc.pinfo.LAMEsfb[gr][ch][sfb] = 0;\n            if (cod_info.preflag != 0 && sfb >= 11)\n                gfc.pinfo.LAMEsfb[gr][ch][sfb] = -ifqstep * pretab[sfb];\n\n            if (sfb < Encoder_1.SBPSY_l) {\n                /* scfsi should be decoded by caller side */\n                assert$19(scalefac[sfb] >= 0);\n                gfc.pinfo.LAMEsfb[gr][ch][sfb] -= ifqstep * scalefac[sfb];\n            }\n        }\n        /* for sfb */\n\n        if (cod_info.block_type == Encoder_1.SHORT_TYPE) {\n            sfb2 = sfb;\n            for (sfb = cod_info.sfb_smin; sfb < Encoder_1.SBMAX_s; sfb++) {\n                var start = gfc.scalefac_band.s[sfb];\n                var end = gfc.scalefac_band.s[sfb + 1];\n                var bw = end - start;\n                for (var i = 0; i < 3; i++) {\n                    for (en0 = 0.0, l = start; l < end; l++) {\n                        en0 += cod_info.xr[j] * cod_info.xr[j];\n                        j++;\n                    }\n                    en0 = Math.max(en0 / bw, 1e-20);\n                    /* convert to MDCT units */\n                    /* scaling so it shows up on FFT plot */\n                    en1 = 1e15;\n\n                    gfc.pinfo.en_s[gr][ch][3 * sfb + i] = en1 * en0;\n                    gfc.pinfo.xfsf_s[gr][ch][3 * sfb + i] = en1 * l3_xmin[sfb2]\n                        * xfsf[sfb2] / bw;\n                    if (ratio.en.s[sfb][i] > 0)\n                        en0 = en0 / ratio.en.s[sfb][i];\n                    else\n                        en0 = 0.0;\n                    if (gfp.ATHonly || gfp.ATHshort)\n                        en0 = 0;\n\n                    gfc.pinfo.thr_s[gr][ch][3 * sfb + i] = en1\n                        * Math.max(en0 * ratio.thm.s[sfb][i],\n                            gfc.ATH.s[sfb]);\n\n                    /* there is no scalefactor bands >= SBPSY_s */\n                    gfc.pinfo.LAMEsfb_s[gr][ch][3 * sfb + i] = -2.0\n                        * cod_info.subblock_gain[i];\n                    if (sfb < Encoder_1.SBPSY_s) {\n                        gfc.pinfo.LAMEsfb_s[gr][ch][3 * sfb + i] -= ifqstep\n                            * scalefac[sfb2];\n                    }\n                    sfb2++;\n                }\n            }\n        }\n        /* block type short */\n        gfc.pinfo.LAMEqss[gr][ch] = cod_info.global_gain;\n        gfc.pinfo.LAMEmainbits[gr][ch] = cod_info.part2_3_length\n            + cod_info.part2_length;\n        gfc.pinfo.LAMEsfbits[gr][ch] = cod_info.part2_length;\n\n        gfc.pinfo.over[gr][ch] = noise.over_count;\n        gfc.pinfo.max_noise[gr][ch] = noise.max_noise * 10.0;\n        gfc.pinfo.over_noise[gr][ch] = noise.over_noise * 10.0;\n        gfc.pinfo.tot_noise[gr][ch] = noise.tot_noise * 10.0;\n        gfc.pinfo.over_SSD[gr][ch] = noise.over_SSD;\n    };\n\n    /**\n     * updates plotting data for a whole frame\n     *\n     * Robert Hegemann 2000-10-21\n     */\n    \n\n}\n\nvar QuantizePVT_1 = QuantizePVT$1;\n\n/*\n *\tMP3 huffman table selecting and bit counting\n *\n *\tCopyright (c) 1999-2005 Takehiro TOMINAGA\n *\tCopyright (c) 2002-2005 Gabriel Bouvigne\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\t See the GNU\n * Library General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\n * Boston, MA 02111-1307, USA.\n */\n\n/* $Id: Takehiro.java,v 1.26 2011/05/24 20:48:06 kenchis Exp $ */\n\n//package mp3;\n\n//import java.util.Arrays;\n\nvar System$18 = common.System;\nvar Arrays$18 = common.Arrays;\nvar new_int$18 = common.new_int;\nvar assert$18 = common.assert;\n\n\n\n\n\n\n\nfunction Takehiro$1() {\n\n    var qupvt = null;\n    this.qupvt = null;\n\n    this.setModules = function (_qupvt) {\n        this.qupvt = _qupvt;\n        qupvt = _qupvt;\n    };\n\n    function Bits(b) {\n        this.bits = 0 | b;\n    }\n\n    var subdv_table = [[0, 0], /* 0 bands */\n        [0, 0], /* 1 bands */\n        [0, 0], /* 2 bands */\n        [0, 0], /* 3 bands */\n        [0, 0], /* 4 bands */\n        [0, 1], /* 5 bands */\n        [1, 1], /* 6 bands */\n        [1, 1], /* 7 bands */\n        [1, 2], /* 8 bands */\n        [2, 2], /* 9 bands */\n        [2, 3], /* 10 bands */\n        [2, 3], /* 11 bands */\n        [3, 4], /* 12 bands */\n        [3, 4], /* 13 bands */\n        [3, 4], /* 14 bands */\n        [4, 5], /* 15 bands */\n        [4, 5], /* 16 bands */\n        [4, 6], /* 17 bands */\n        [5, 6], /* 18 bands */\n        [5, 6], /* 19 bands */\n        [5, 7], /* 20 bands */\n        [6, 7], /* 21 bands */\n        [6, 7], /* 22 bands */\n    ];\n\n    /**\n     * nonlinear quantization of xr More accurate formula than the ISO formula.\n     * Takes into account the fact that we are quantizing xr . ix, but we want\n     * ix^4/3 to be as close as possible to x^4/3. (taking the nearest int would\n     * mean ix is as close as possible to xr, which is different.)\n     *\n     * From Segher Boessenkool <segher@eastsite.nl> 11/1999\n     *\n     * 09/2000: ASM code removed in favor of IEEE754 hack by Takehiro Tominaga.\n     * If you need the ASM code, check CVS circa Aug 2000.\n     *\n     * 01/2004: Optimizations by Gabriel Bouvigne\n     */\n    function quantize_lines_xrpow_01(l, istep, xr, xrPos, ix, ixPos) {\n        var compareval0 = (1.0 - 0.4054) / istep;\n\n        assert$18(l > 0);\n        l = l >> 1;\n        while ((l--) != 0) {\n            ix[ixPos++] = (compareval0 > xr[xrPos++]) ? 0 : 1;\n            ix[ixPos++] = (compareval0 > xr[xrPos++]) ? 0 : 1;\n        }\n    }\n\n    /**\n     * XRPOW_FTOI is a macro to convert floats to ints.<BR>\n     * if XRPOW_FTOI(x) = nearest_int(x), then QUANTFAC(x)=adj43asm[x]<BR>\n     * ROUNDFAC= -0.0946<BR>\n     *\n     * if XRPOW_FTOI(x) = floor(x), then QUANTFAC(x)=asj43[x]<BR>\n     * ROUNDFAC=0.4054<BR>\n     *\n     * Note: using floor() or 0| is extremely slow. On machines where the\n     * TAKEHIRO_IEEE754_HACK code above does not work, it is worthwile to write\n     * some ASM for XRPOW_FTOI().\n     */\n    function quantize_lines_xrpow(l, istep, xr, xrPos, ix, ixPos) {\n        assert$18(l > 0);\n\n        l = l >> 1;\n        var remaining = l % 2;\n        l = l >> 1;\n        while (l-- != 0) {\n            var x0, x1, x2, x3;\n            var rx0, rx1, rx2, rx3;\n\n            x0 = xr[xrPos++] * istep;\n            x1 = xr[xrPos++] * istep;\n            rx0 = 0 | x0;\n            x2 = xr[xrPos++] * istep;\n            rx1 = 0 | x1;\n            x3 = xr[xrPos++] * istep;\n            rx2 = 0 | x2;\n            x0 += qupvt.adj43[rx0];\n            rx3 = 0 | x3;\n            x1 += qupvt.adj43[rx1];\n            ix[ixPos++] = 0 | x0;\n            x2 += qupvt.adj43[rx2];\n            ix[ixPos++] = 0 | x1;\n            x3 += qupvt.adj43[rx3];\n            ix[ixPos++] = 0 | x2;\n            ix[ixPos++] = 0 | x3;\n        }\n        if (remaining != 0) {\n            var x0, x1;\n            var rx0, rx1;\n\n            x0 = xr[xrPos++] * istep;\n            x1 = xr[xrPos++] * istep;\n            rx0 = 0 | x0;\n            rx1 = 0 | x1;\n            x0 += qupvt.adj43[rx0];\n            x1 += qupvt.adj43[rx1];\n            ix[ixPos++] = 0 | x0;\n            ix[ixPos++] = 0 | x1;\n        }\n    }\n\n    /**\n     * Quantization function This function will select which lines to quantize\n     * and call the proper quantization function\n     */\n    function quantize_xrpow(xp, pi, istep, codInfo, prevNoise) {\n        /* quantize on xr^(3/4) instead of xr */\n        var sfb;\n        var sfbmax;\n        var j = 0;\n        var prev_data_use;\n        var accumulate = 0;\n        var accumulate01 = 0;\n        var xpPos = 0;\n        var iData = pi;\n        var iDataPos = 0;\n        var acc_iData = iData;\n        var acc_iDataPos = 0;\n        var acc_xp = xp;\n        var acc_xpPos = 0;\n\n        /*\n         * Reusing previously computed data does not seems to work if global\n         * gain is changed. Finding why it behaves this way would allow to use a\n         * cache of previously computed values (let's 10 cached values per sfb)\n         * that would probably provide a noticeable speedup\n         */\n        prev_data_use = (prevNoise != null && (codInfo.global_gain == prevNoise.global_gain));\n\n        if (codInfo.block_type == Encoder_1.SHORT_TYPE)\n            sfbmax = 38;\n        else\n            sfbmax = 21;\n\n        for (sfb = 0; sfb <= sfbmax; sfb++) {\n            var step = -1;\n\n            if (prev_data_use || codInfo.block_type == Encoder_1.NORM_TYPE) {\n                step = codInfo.global_gain\n                    - ((codInfo.scalefac[sfb] + (codInfo.preflag != 0 ? qupvt.pretab[sfb]\n                        : 0)) << (codInfo.scalefac_scale + 1))\n                    - codInfo.subblock_gain[codInfo.window[sfb]] * 8;\n            }\n            assert$18(codInfo.width[sfb] >= 0);\n            if (prev_data_use && (prevNoise.step[sfb] == step)) {\n                /*\n                 * do not recompute this part, but compute accumulated lines\n                 */\n                if (accumulate != 0) {\n                    quantize_lines_xrpow(accumulate, istep, acc_xp, acc_xpPos,\n                        acc_iData, acc_iDataPos);\n                    accumulate = 0;\n                }\n                if (accumulate01 != 0) {\n                    quantize_lines_xrpow_01(accumulate01, istep, acc_xp,\n                        acc_xpPos, acc_iData, acc_iDataPos);\n                    accumulate01 = 0;\n                }\n            } else { /* should compute this part */\n                var l = codInfo.width[sfb];\n\n                if ((j + codInfo.width[sfb]) > codInfo.max_nonzero_coeff) {\n                    /* do not compute upper zero part */\n                    var usefullsize;\n                    usefullsize = codInfo.max_nonzero_coeff - j + 1;\n                    Arrays$18.fill(pi, codInfo.max_nonzero_coeff, 576, 0);\n                    l = usefullsize;\n\n                    if (l < 0) {\n                        l = 0;\n                    }\n\n                    /* no need to compute higher sfb values */\n                    sfb = sfbmax + 1;\n                }\n\n                /* accumulate lines to quantize */\n                if (0 == accumulate && 0 == accumulate01) {\n                    acc_iData = iData;\n                    acc_iDataPos = iDataPos;\n                    acc_xp = xp;\n                    acc_xpPos = xpPos;\n                }\n                if (prevNoise != null && prevNoise.sfb_count1 > 0\n                    && sfb >= prevNoise.sfb_count1\n                    && prevNoise.step[sfb] > 0\n                    && step >= prevNoise.step[sfb]) {\n\n                    if (accumulate != 0) {\n                        quantize_lines_xrpow(accumulate, istep, acc_xp,\n                            acc_xpPos, acc_iData, acc_iDataPos);\n                        accumulate = 0;\n                        acc_iData = iData;\n                        acc_iDataPos = iDataPos;\n                        acc_xp = xp;\n                        acc_xpPos = xpPos;\n                    }\n                    accumulate01 += l;\n                } else {\n                    if (accumulate01 != 0) {\n                        quantize_lines_xrpow_01(accumulate01, istep, acc_xp,\n                            acc_xpPos, acc_iData, acc_iDataPos);\n                        accumulate01 = 0;\n                        acc_iData = iData;\n                        acc_iDataPos = iDataPos;\n                        acc_xp = xp;\n                        acc_xpPos = xpPos;\n                    }\n                    accumulate += l;\n                }\n\n                if (l <= 0) {\n                    /*\n                     * rh: 20040215 may happen due to \"prev_data_use\"\n                     * optimization\n                     */\n                    if (accumulate01 != 0) {\n                        quantize_lines_xrpow_01(accumulate01, istep, acc_xp,\n                            acc_xpPos, acc_iData, acc_iDataPos);\n                        accumulate01 = 0;\n                    }\n                    if (accumulate != 0) {\n                        quantize_lines_xrpow(accumulate, istep, acc_xp,\n                            acc_xpPos, acc_iData, acc_iDataPos);\n                        accumulate = 0;\n                    }\n\n                    break;\n                    /* ends for-loop */\n                }\n            }\n            if (sfb <= sfbmax) {\n                iDataPos += codInfo.width[sfb];\n                xpPos += codInfo.width[sfb];\n                j += codInfo.width[sfb];\n            }\n        }\n        if (accumulate != 0) { /* last data part */\n            quantize_lines_xrpow(accumulate, istep, acc_xp, acc_xpPos,\n                acc_iData, acc_iDataPos);\n            accumulate = 0;\n        }\n        if (accumulate01 != 0) { /* last data part */\n            quantize_lines_xrpow_01(accumulate01, istep, acc_xp, acc_xpPos,\n                acc_iData, acc_iDataPos);\n            accumulate01 = 0;\n        }\n\n    }\n\n    /**\n     * ix_max\n     */\n    function ix_max(ix, ixPos, endPos) {\n        var max1 = 0, max2 = 0;\n\n        do {\n            var x1 = ix[ixPos++];\n            var x2 = ix[ixPos++];\n            if (max1 < x1)\n                max1 = x1;\n\n            if (max2 < x2)\n                max2 = x2;\n        } while (ixPos < endPos);\n        if (max1 < max2)\n            max1 = max2;\n        return max1;\n    }\n\n    function count_bit_ESC(ix, ixPos, end, t1, t2, s) {\n        /* ESC-table is used */\n        var linbits = Tables_1.ht[t1].xlen * 65536 + Tables_1.ht[t2].xlen;\n        var sum = 0, sum2;\n\n        do {\n            var x = ix[ixPos++];\n            var y = ix[ixPos++];\n\n            if (x != 0) {\n                if (x > 14) {\n                    x = 15;\n                    sum += linbits;\n                }\n                x *= 16;\n            }\n\n            if (y != 0) {\n                if (y > 14) {\n                    y = 15;\n                    sum += linbits;\n                }\n                x += y;\n            }\n\n            sum += Tables_1.largetbl[x];\n        } while (ixPos < end);\n\n        sum2 = sum & 0xffff;\n        sum >>= 16;\n\n        if (sum > sum2) {\n            sum = sum2;\n            t1 = t2;\n        }\n\n        s.bits += sum;\n        return t1;\n    }\n\n    function count_bit_noESC(ix, ixPos, end, s) {\n        /* No ESC-words */\n        var sum1 = 0;\n        var hlen1 = Tables_1.ht[1].hlen;\n\n        do {\n            var x = ix[ixPos + 0] * 2 + ix[ixPos + 1];\n            ixPos += 2;\n            sum1 += hlen1[x];\n        } while (ixPos < end);\n\n        s.bits += sum1;\n        return 1;\n    }\n\n    function count_bit_noESC_from2(ix, ixPos, end, t1, s) {\n        /* No ESC-words */\n        var sum = 0, sum2;\n        var xlen = Tables_1.ht[t1].xlen;\n        var hlen;\n        if (t1 == 2)\n            hlen = Tables_1.table23;\n        else\n            hlen = Tables_1.table56;\n\n        do {\n            var x = ix[ixPos + 0] * xlen + ix[ixPos + 1];\n            ixPos += 2;\n            sum += hlen[x];\n        } while (ixPos < end);\n\n        sum2 = sum & 0xffff;\n        sum >>= 16;\n\n        if (sum > sum2) {\n            sum = sum2;\n            t1++;\n        }\n\n        s.bits += sum;\n        return t1;\n    }\n\n    function count_bit_noESC_from3(ix, ixPos, end, t1, s) {\n        /* No ESC-words */\n        var sum1 = 0;\n        var sum2 = 0;\n        var sum3 = 0;\n        var xlen = Tables_1.ht[t1].xlen;\n        var hlen1 = Tables_1.ht[t1].hlen;\n        var hlen2 = Tables_1.ht[t1 + 1].hlen;\n        var hlen3 = Tables_1.ht[t1 + 2].hlen;\n\n        do {\n            var x = ix[ixPos + 0] * xlen + ix[ixPos + 1];\n            ixPos += 2;\n            sum1 += hlen1[x];\n            sum2 += hlen2[x];\n            sum3 += hlen3[x];\n        } while (ixPos < end);\n        var t = t1;\n        if (sum1 > sum2) {\n            sum1 = sum2;\n            t++;\n        }\n        if (sum1 > sum3) {\n            sum1 = sum3;\n            t = t1 + 2;\n        }\n        s.bits += sum1;\n\n        return t;\n    }\n\n    /*************************************************************************/\n    /* choose table */\n    /*************************************************************************/\n\n    var huf_tbl_noESC = [1, 2, 5, 7, 7, 10, 10, 13, 13,\n        13, 13, 13, 13, 13, 13];\n\n    /**\n     * Choose the Huffman table that will encode ix[begin..end] with the fewest\n     * bits.\n     *\n     * Note: This code contains knowledge about the sizes and characteristics of\n     * the Huffman tables as defined in the IS (Table B.7), and will not work\n     * with any arbitrary tables.\n     */\n    function choose_table(ix, ixPos, endPos, s) {\n        var max = ix_max(ix, ixPos, endPos);\n\n        switch (max) {\n            case 0:\n                return max;\n\n            case 1:\n                return count_bit_noESC(ix, ixPos, endPos, s);\n\n            case 2:\n            case 3:\n                return count_bit_noESC_from2(ix, ixPos, endPos,\n                    huf_tbl_noESC[max - 1], s);\n\n            case 4:\n            case 5:\n            case 6:\n            case 7:\n            case 8:\n            case 9:\n            case 10:\n            case 11:\n            case 12:\n            case 13:\n            case 14:\n            case 15:\n                return count_bit_noESC_from3(ix, ixPos, endPos,\n                    huf_tbl_noESC[max - 1], s);\n\n            default:\n                /* try tables with linbits */\n                if (max > QuantizePVT_1.IXMAX_VAL) {\n                    s.bits = QuantizePVT_1.LARGE_BITS;\n                    return -1;\n                }\n                max -= 15;\n                var choice2;\n                for (choice2 = 24; choice2 < 32; choice2++) {\n                    if (Tables_1.ht[choice2].linmax >= max) {\n                        break;\n                    }\n                }\n                var choice;\n                for (choice = choice2 - 8; choice < 24; choice++) {\n                    if (Tables_1.ht[choice].linmax >= max) {\n                        break;\n                    }\n                }\n                return count_bit_ESC(ix, ixPos, endPos, choice, choice2, s);\n        }\n    }\n\n    /**\n     * count_bit\n     */\n    this.noquant_count_bits = function (gfc, gi, prev_noise) {\n        var ix = gi.l3_enc;\n        var i = Math.min(576, ((gi.max_nonzero_coeff + 2) >> 1) << 1);\n\n        if (prev_noise != null)\n            prev_noise.sfb_count1 = 0;\n\n        /* Determine count1 region */\n        for (; i > 1; i -= 2)\n            if ((ix[i - 1] | ix[i - 2]) != 0)\n                break;\n        gi.count1 = i;\n\n        /* Determines the number of bits to encode the quadruples. */\n        var a1 = 0;\n        var a2 = 0;\n        for (; i > 3; i -= 4) {\n            var p;\n            /* hack to check if all values <= 1 */\n            //throw \"TODO: HACK         if ((((long) ix[i - 1] | (long) ix[i - 2] | (long) ix[i - 3] | (long) ix[i - 4]) & 0xffffffffL) > 1L        \"\n            //if (true) {\n            if (((ix[i - 1] | ix[i - 2] | ix[i - 3] | ix[i - 4]) & 0x7fffffff) > 1) {\n                break;\n            }\n            p = ((ix[i - 4] * 2 + ix[i - 3]) * 2 + ix[i - 2]) * 2 + ix[i - 1];\n            a1 += Tables_1.t32l[p];\n            a2 += Tables_1.t33l[p];\n        }\n        var bits = a1;\n        gi.count1table_select = 0;\n        if (a1 > a2) {\n            bits = a2;\n            gi.count1table_select = 1;\n        }\n\n        gi.count1bits = bits;\n        gi.big_values = i;\n        if (i == 0)\n            return bits;\n\n        if (gi.block_type == Encoder_1.SHORT_TYPE) {\n            a1 = 3 * gfc.scalefac_band.s[3];\n            if (a1 > gi.big_values)\n                a1 = gi.big_values;\n            a2 = gi.big_values;\n\n        } else if (gi.block_type == Encoder_1.NORM_TYPE) {\n            assert$18(i <= 576);\n            /* bv_scf has 576 entries (0..575) */\n            a1 = gi.region0_count = gfc.bv_scf[i - 2];\n            a2 = gi.region1_count = gfc.bv_scf[i - 1];\n\n            assert$18(a1 + a2 + 2 < Encoder_1.SBPSY_l);\n            a2 = gfc.scalefac_band.l[a1 + a2 + 2];\n            a1 = gfc.scalefac_band.l[a1 + 1];\n            if (a2 < i) {\n                var bi = new Bits(bits);\n                gi.table_select[2] = choose_table(ix, a2, i, bi);\n                bits = bi.bits;\n            }\n        } else {\n            gi.region0_count = 7;\n            /* gi.region1_count = SBPSY_l - 7 - 1; */\n            gi.region1_count = Encoder_1.SBMAX_l - 1 - 7 - 1;\n            a1 = gfc.scalefac_band.l[7 + 1];\n            a2 = i;\n            if (a1 > a2) {\n                a1 = a2;\n            }\n        }\n\n        /* have to allow for the case when bigvalues < region0 < region1 */\n        /* (and region0, region1 are ignored) */\n        a1 = Math.min(a1, i);\n        a2 = Math.min(a2, i);\n\n        assert$18(a1 >= 0);\n        assert$18(a2 >= 0);\n\n        /* Count the number of bits necessary to code the bigvalues region. */\n        if (0 < a1) {\n            var bi = new Bits(bits);\n            gi.table_select[0] = choose_table(ix, 0, a1, bi);\n            bits = bi.bits;\n        }\n        if (a1 < a2) {\n            var bi = new Bits(bits);\n            gi.table_select[1] = choose_table(ix, a1, a2, bi);\n            bits = bi.bits;\n        }\n        if (gfc.use_best_huffman == 2) {\n            gi.part2_3_length = bits;\n            best_huffman_divide(gfc, gi);\n            bits = gi.part2_3_length;\n        }\n\n        if (prev_noise != null) {\n            if (gi.block_type == Encoder_1.NORM_TYPE) {\n                var sfb = 0;\n                while (gfc.scalefac_band.l[sfb] < gi.big_values) {\n                    sfb++;\n                }\n                prev_noise.sfb_count1 = sfb;\n            }\n        }\n\n        return bits;\n    };\n\n    this.count_bits = function (gfc, xr, gi, prev_noise) {\n        var ix = gi.l3_enc;\n\n        /* since quantize_xrpow uses table lookup, we need to check this first: */\n        var w = (QuantizePVT_1.IXMAX_VAL) / qupvt.IPOW20(gi.global_gain);\n\n        if (gi.xrpow_max > w)\n            return QuantizePVT_1.LARGE_BITS;\n\n        quantize_xrpow(xr, ix, qupvt.IPOW20(gi.global_gain), gi, prev_noise);\n\n        if ((gfc.substep_shaping & 2) != 0) {\n            var j = 0;\n            /* 0.634521682242439 = 0.5946*2**(.5*0.1875) */\n            var gain = gi.global_gain + gi.scalefac_scale;\n            var roundfac = 0.634521682242439 / qupvt.IPOW20(gain);\n            for (var sfb = 0; sfb < gi.sfbmax; sfb++) {\n                var width = gi.width[sfb];\n                assert$18(width >= 0);\n                if (0 == gfc.pseudohalf[sfb]) {\n                    j += width;\n                } else {\n                    var k;\n                    for (k = j, j += width; k < j; ++k) {\n                        ix[k] = (xr[k] >= roundfac) ? ix[k] : 0;\n                    }\n                }\n            }\n        }\n        return this.noquant_count_bits(gfc, gi, prev_noise);\n    };\n\n    /**\n     * re-calculate the best scalefac_compress using scfsi the saved bits are\n     * kept in the bit reservoir.\n     */\n    function recalc_divide_init(gfc, cod_info, ix, r01_bits, r01_div, r0_tbl, r1_tbl) {\n        var bigv = cod_info.big_values;\n\n        for (var r0 = 0; r0 <= 7 + 15; r0++) {\n            r01_bits[r0] = QuantizePVT_1.LARGE_BITS;\n        }\n\n        for (var r0 = 0; r0 < 16; r0++) {\n            var a1 = gfc.scalefac_band.l[r0 + 1];\n            if (a1 >= bigv)\n                break;\n            var r0bits = 0;\n            var bi = new Bits(r0bits);\n            var r0t = choose_table(ix, 0, a1, bi);\n            r0bits = bi.bits;\n\n            for (var r1 = 0; r1 < 8; r1++) {\n                var a2 = gfc.scalefac_band.l[r0 + r1 + 2];\n                if (a2 >= bigv)\n                    break;\n                var bits = r0bits;\n                bi = new Bits(bits);\n                var r1t = choose_table(ix, a1, a2, bi);\n                bits = bi.bits;\n                if (r01_bits[r0 + r1] > bits) {\n                    r01_bits[r0 + r1] = bits;\n                    r01_div[r0 + r1] = r0;\n                    r0_tbl[r0 + r1] = r0t;\n                    r1_tbl[r0 + r1] = r1t;\n                }\n            }\n        }\n    }\n\n    function recalc_divide_sub(gfc, cod_info2, gi, ix, r01_bits, r01_div, r0_tbl, r1_tbl) {\n        var bigv = cod_info2.big_values;\n\n        for (var r2 = 2; r2 < Encoder_1.SBMAX_l + 1; r2++) {\n            var a2 = gfc.scalefac_band.l[r2];\n            if (a2 >= bigv)\n                break;\n            var bits = r01_bits[r2 - 2] + cod_info2.count1bits;\n            if (gi.part2_3_length <= bits)\n                break;\n\n            var bi = new Bits(bits);\n            var r2t = choose_table(ix, a2, bigv, bi);\n            bits = bi.bits;\n            if (gi.part2_3_length <= bits)\n                continue;\n\n            gi.assign(cod_info2);\n            gi.part2_3_length = bits;\n            gi.region0_count = r01_div[r2 - 2];\n            gi.region1_count = r2 - 2 - r01_div[r2 - 2];\n            gi.table_select[0] = r0_tbl[r2 - 2];\n            gi.table_select[1] = r1_tbl[r2 - 2];\n            gi.table_select[2] = r2t;\n        }\n    }\n\n    this.best_huffman_divide = function (gfc, gi) {\n        var cod_info2 = new GrInfo_1();\n        var ix = gi.l3_enc;\n        var r01_bits = new_int$18(7 + 15 + 1);\n        var r01_div = new_int$18(7 + 15 + 1);\n        var r0_tbl = new_int$18(7 + 15 + 1);\n        var r1_tbl = new_int$18(7 + 15 + 1);\n\n        /* SHORT BLOCK stuff fails for MPEG2 */\n        if (gi.block_type == Encoder_1.SHORT_TYPE && gfc.mode_gr == 1)\n            return;\n\n        cod_info2.assign(gi);\n        if (gi.block_type == Encoder_1.NORM_TYPE) {\n            recalc_divide_init(gfc, gi, ix, r01_bits, r01_div, r0_tbl, r1_tbl);\n            recalc_divide_sub(gfc, cod_info2, gi, ix, r01_bits, r01_div,\n                r0_tbl, r1_tbl);\n        }\n        var i = cod_info2.big_values;\n        if (i == 0 || (ix[i - 2] | ix[i - 1]) > 1)\n            return;\n\n        i = gi.count1 + 2;\n        if (i > 576)\n            return;\n\n        /* Determines the number of bits to encode the quadruples. */\n        cod_info2.assign(gi);\n        cod_info2.count1 = i;\n        var a1 = 0;\n        var a2 = 0;\n\n        assert$18(i <= 576);\n\n        for (; i > cod_info2.big_values; i -= 4) {\n            var p = ((ix[i - 4] * 2 + ix[i - 3]) * 2 + ix[i - 2]) * 2\n                + ix[i - 1];\n            a1 += Tables_1.t32l[p];\n            a2 += Tables_1.t33l[p];\n        }\n        cod_info2.big_values = i;\n\n        cod_info2.count1table_select = 0;\n        if (a1 > a2) {\n            a1 = a2;\n            cod_info2.count1table_select = 1;\n        }\n\n        cod_info2.count1bits = a1;\n\n        if (cod_info2.block_type == Encoder_1.NORM_TYPE)\n            recalc_divide_sub(gfc, cod_info2, gi, ix, r01_bits, r01_div,\n                r0_tbl, r1_tbl);\n        else {\n            /* Count the number of bits necessary to code the bigvalues region. */\n            cod_info2.part2_3_length = a1;\n            a1 = gfc.scalefac_band.l[7 + 1];\n            if (a1 > i) {\n                a1 = i;\n            }\n            if (a1 > 0) {\n                var bi = new Bits(cod_info2.part2_3_length);\n                cod_info2.table_select[0] = choose_table(ix, 0, a1, bi);\n                cod_info2.part2_3_length = bi.bits;\n            }\n            if (i > a1) {\n                var bi = new Bits(cod_info2.part2_3_length);\n                cod_info2.table_select[1] = choose_table(ix, a1, i, bi);\n                cod_info2.part2_3_length = bi.bits;\n            }\n            if (gi.part2_3_length > cod_info2.part2_3_length)\n                gi.assign(cod_info2);\n        }\n    };\n\n    var slen1_n = [1, 1, 1, 1, 8, 2, 2, 2, 4, 4, 4, 8, 8, 8, 16, 16];\n    var slen2_n = [1, 2, 4, 8, 1, 2, 4, 8, 2, 4, 8, 2, 4, 8, 4, 8];\n    var slen1_tab = [0, 0, 0, 0, 3, 1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4];\n    var slen2_tab = [0, 1, 2, 3, 0, 1, 2, 3, 1, 2, 3, 1, 2, 3, 2, 3];\n    Takehiro$1.slen1_tab = slen1_tab;\n    Takehiro$1.slen2_tab = slen2_tab;\n\n    function scfsi_calc(ch, l3_side) {\n        var sfb;\n        var gi = l3_side.tt[1][ch];\n        var g0 = l3_side.tt[0][ch];\n\n        for (var i = 0; i < Tables_1.scfsi_band.length - 1; i++) {\n            for (sfb = Tables_1.scfsi_band[i]; sfb < Tables_1.scfsi_band[i + 1]; sfb++) {\n                if (g0.scalefac[sfb] != gi.scalefac[sfb]\n                    && gi.scalefac[sfb] >= 0)\n                    break;\n            }\n            if (sfb == Tables_1.scfsi_band[i + 1]) {\n                for (sfb = Tables_1.scfsi_band[i]; sfb < Tables_1.scfsi_band[i + 1]; sfb++) {\n                    gi.scalefac[sfb] = -1;\n                }\n                l3_side.scfsi[ch][i] = 1;\n            }\n        }\n        var s1 = 0;\n        var c1 = 0;\n        for (sfb = 0; sfb < 11; sfb++) {\n            if (gi.scalefac[sfb] == -1)\n                continue;\n            c1++;\n            if (s1 < gi.scalefac[sfb])\n                s1 = gi.scalefac[sfb];\n        }\n        var s2 = 0;\n        var c2 = 0;\n        for (; sfb < Encoder_1.SBPSY_l; sfb++) {\n            if (gi.scalefac[sfb] == -1)\n                continue;\n            c2++;\n            if (s2 < gi.scalefac[sfb])\n                s2 = gi.scalefac[sfb];\n        }\n\n        for (var i = 0; i < 16; i++) {\n            if (s1 < slen1_n[i] && s2 < slen2_n[i]) {\n                var c = slen1_tab[i] * c1 + slen2_tab[i] * c2;\n                if (gi.part2_length > c) {\n                    gi.part2_length = c;\n                    gi.scalefac_compress = i;\n                }\n            }\n        }\n    }\n\n    /**\n     * Find the optimal way to store the scalefactors. Only call this routine\n     * after final scalefactors have been chosen and the channel/granule will\n     * not be re-encoded.\n     */\n    this.best_scalefac_store = function (gfc, gr, ch, l3_side) {\n        /* use scalefac_scale if we can */\n        var gi = l3_side.tt[gr][ch];\n        var sfb, i, j, l;\n        var recalc = 0;\n\n        /*\n         * remove scalefacs from bands with ix=0. This idea comes from the AAC\n         * ISO docs. added mt 3/00\n         */\n        /* check if l3_enc=0 */\n        j = 0;\n        for (sfb = 0; sfb < gi.sfbmax; sfb++) {\n            var width = gi.width[sfb];\n            assert$18(width >= 0);\n            j += width;\n            for (l = -width; l < 0; l++) {\n                if (gi.l3_enc[l + j] != 0)\n                    break;\n            }\n            if (l == 0)\n                gi.scalefac[sfb] = recalc = -2;\n            /* anything goes. */\n            /*\n             * only best_scalefac_store and calc_scfsi know--and only they\n             * should know--about the magic number -2.\n             */\n        }\n\n        if (0 == gi.scalefac_scale && 0 == gi.preflag) {\n            var s = 0;\n            for (sfb = 0; sfb < gi.sfbmax; sfb++)\n                if (gi.scalefac[sfb] > 0)\n                    s |= gi.scalefac[sfb];\n\n            if (0 == (s & 1) && s != 0) {\n                for (sfb = 0; sfb < gi.sfbmax; sfb++)\n                    if (gi.scalefac[sfb] > 0)\n                        gi.scalefac[sfb] >>= 1;\n\n                gi.scalefac_scale = recalc = 1;\n            }\n        }\n\n        if (0 == gi.preflag && gi.block_type != Encoder_1.SHORT_TYPE\n            && gfc.mode_gr == 2) {\n            for (sfb = 11; sfb < Encoder_1.SBPSY_l; sfb++)\n                if (gi.scalefac[sfb] < qupvt.pretab[sfb]\n                    && gi.scalefac[sfb] != -2)\n                    break;\n            if (sfb == Encoder_1.SBPSY_l) {\n                for (sfb = 11; sfb < Encoder_1.SBPSY_l; sfb++)\n                    if (gi.scalefac[sfb] > 0)\n                        gi.scalefac[sfb] -= qupvt.pretab[sfb];\n\n                gi.preflag = recalc = 1;\n            }\n        }\n\n        for (i = 0; i < 4; i++)\n            l3_side.scfsi[ch][i] = 0;\n\n        if (gfc.mode_gr == 2 && gr == 1\n            && l3_side.tt[0][ch].block_type != Encoder_1.SHORT_TYPE\n            && l3_side.tt[1][ch].block_type != Encoder_1.SHORT_TYPE) {\n            scfsi_calc(ch, l3_side);\n            recalc = 0;\n        }\n        for (sfb = 0; sfb < gi.sfbmax; sfb++) {\n            if (gi.scalefac[sfb] == -2) {\n                gi.scalefac[sfb] = 0;\n                /* if anything goes, then 0 is a good choice */\n            }\n        }\n        if (recalc != 0) {\n            if (gfc.mode_gr == 2) {\n                this.scale_bitcount(gi);\n            } else {\n                this.scale_bitcount_lsf(gfc, gi);\n            }\n        }\n    };\n\n    function all_scalefactors_not_negative(scalefac, n) {\n        for (var i = 0; i < n; ++i) {\n            if (scalefac[i] < 0)\n                return false;\n        }\n        return true;\n    }\n\n    /**\n     * number of bits used to encode scalefacs.\n     *\n     * 18*slen1_tab[i] + 18*slen2_tab[i]\n     */\n    var scale_short = [0, 18, 36, 54, 54, 36, 54, 72,\n        54, 72, 90, 72, 90, 108, 108, 126];\n\n    /**\n     * number of bits used to encode scalefacs.\n     *\n     * 17*slen1_tab[i] + 18*slen2_tab[i]\n     */\n    var scale_mixed = [0, 18, 36, 54, 51, 35, 53, 71,\n        52, 70, 88, 69, 87, 105, 104, 122];\n\n    /**\n     * number of bits used to encode scalefacs.\n     *\n     * 11*slen1_tab[i] + 10*slen2_tab[i]\n     */\n    var scale_long = [0, 10, 20, 30, 33, 21, 31, 41, 32, 42,\n        52, 43, 53, 63, 64, 74];\n\n    /**\n     * Also calculates the number of bits necessary to code the scalefactors.\n     */\n    this.scale_bitcount = function (cod_info) {\n        var k, sfb, max_slen1 = 0, max_slen2 = 0;\n\n        /* maximum values */\n        var tab;\n        var scalefac = cod_info.scalefac;\n\n        assert$18(all_scalefactors_not_negative(scalefac, cod_info.sfbmax));\n\n        if (cod_info.block_type == Encoder_1.SHORT_TYPE) {\n            tab = scale_short;\n            if (cod_info.mixed_block_flag != 0)\n                tab = scale_mixed;\n        } else { /* block_type == 1,2,or 3 */\n            tab = scale_long;\n            if (0 == cod_info.preflag) {\n                for (sfb = 11; sfb < Encoder_1.SBPSY_l; sfb++)\n                    if (scalefac[sfb] < qupvt.pretab[sfb])\n                        break;\n\n                if (sfb == Encoder_1.SBPSY_l) {\n                    cod_info.preflag = 1;\n                    for (sfb = 11; sfb < Encoder_1.SBPSY_l; sfb++)\n                        scalefac[sfb] -= qupvt.pretab[sfb];\n                }\n            }\n        }\n\n        for (sfb = 0; sfb < cod_info.sfbdivide; sfb++)\n            if (max_slen1 < scalefac[sfb])\n                max_slen1 = scalefac[sfb];\n\n        for (; sfb < cod_info.sfbmax; sfb++)\n            if (max_slen2 < scalefac[sfb])\n                max_slen2 = scalefac[sfb];\n\n        /*\n         * from Takehiro TOMINAGA <tominaga@isoternet.org> 10/99 loop over *all*\n         * posible values of scalefac_compress to find the one which uses the\n         * smallest number of bits. ISO would stop at first valid index\n         */\n        cod_info.part2_length = QuantizePVT_1.LARGE_BITS;\n        for (k = 0; k < 16; k++) {\n            if (max_slen1 < slen1_n[k] && max_slen2 < slen2_n[k]\n                && cod_info.part2_length > tab[k]) {\n                cod_info.part2_length = tab[k];\n                cod_info.scalefac_compress = k;\n            }\n        }\n        return cod_info.part2_length == QuantizePVT_1.LARGE_BITS;\n    };\n\n    /**\n     * table of largest scalefactor values for MPEG2\n     */\n    var max_range_sfac_tab = [[15, 15, 7, 7],\n        [15, 15, 7, 0], [7, 3, 0, 0], [15, 31, 31, 0],\n        [7, 7, 7, 0], [3, 3, 0, 0]];\n\n    /**\n     * Also counts the number of bits to encode the scalefacs but for MPEG 2\n     * Lower sampling frequencies (24, 22.05 and 16 kHz.)\n     *\n     * This is reverse-engineered from section 2.4.3.2 of the MPEG2 IS,\n     * \"Audio Decoding Layer III\"\n     */\n    this.scale_bitcount_lsf = function (gfc, cod_info) {\n        var table_number, row_in_table, partition, nr_sfb, window;\n        var over;\n        var i, sfb;\n        var max_sfac = new_int$18(4);\n//var partition_table;\n        var scalefac = cod_info.scalefac;\n\n        /*\n         * Set partition table. Note that should try to use table one, but do\n         * not yet...\n         */\n        if (cod_info.preflag != 0)\n            table_number = 2;\n        else\n            table_number = 0;\n\n        for (i = 0; i < 4; i++)\n            max_sfac[i] = 0;\n\n        if (cod_info.block_type == Encoder_1.SHORT_TYPE) {\n            row_in_table = 1;\n            var partition_table = qupvt.nr_of_sfb_block[table_number][row_in_table];\n            for (sfb = 0, partition = 0; partition < 4; partition++) {\n                nr_sfb = partition_table[partition] / 3;\n                for (i = 0; i < nr_sfb; i++, sfb++)\n                    for (window = 0; window < 3; window++)\n                        if (scalefac[sfb * 3 + window] > max_sfac[partition])\n                            max_sfac[partition] = scalefac[sfb * 3 + window];\n            }\n        } else {\n            row_in_table = 0;\n            var partition_table = qupvt.nr_of_sfb_block[table_number][row_in_table];\n            for (sfb = 0, partition = 0; partition < 4; partition++) {\n                nr_sfb = partition_table[partition];\n                for (i = 0; i < nr_sfb; i++, sfb++)\n                    if (scalefac[sfb] > max_sfac[partition])\n                        max_sfac[partition] = scalefac[sfb];\n            }\n        }\n\n        for (over = false, partition = 0; partition < 4; partition++) {\n            if (max_sfac[partition] > max_range_sfac_tab[table_number][partition])\n                over = true;\n        }\n        if (!over) {\n            var slen1, slen2, slen3, slen4;\n\n            cod_info.sfb_partition_table = qupvt.nr_of_sfb_block[table_number][row_in_table];\n            for (partition = 0; partition < 4; partition++)\n                cod_info.slen[partition] = log2tab[max_sfac[partition]];\n\n            /* set scalefac_compress */\n            slen1 = cod_info.slen[0];\n            slen2 = cod_info.slen[1];\n            slen3 = cod_info.slen[2];\n            slen4 = cod_info.slen[3];\n\n            switch (table_number) {\n                case 0:\n                    cod_info.scalefac_compress = (((slen1 * 5) + slen2) << 4)\n                        + (slen3 << 2) + slen4;\n                    break;\n\n                case 1:\n                    cod_info.scalefac_compress = 400 + (((slen1 * 5) + slen2) << 2)\n                        + slen3;\n                    break;\n\n                case 2:\n                    cod_info.scalefac_compress = 500 + (slen1 * 3) + slen2;\n                    break;\n\n                default:\n                    System$18.err.printf(\"intensity stereo not implemented yet\\n\");\n                    break;\n            }\n        }\n        if (!over) {\n            assert$18(cod_info.sfb_partition_table != null);\n            cod_info.part2_length = 0;\n            for (partition = 0; partition < 4; partition++)\n                cod_info.part2_length += cod_info.slen[partition]\n                    * cod_info.sfb_partition_table[partition];\n        }\n        return over;\n    };\n\n    /*\n     * Since no bands have been over-amplified, we can set scalefac_compress and\n     * slen[] for the formatter\n     */\n    var log2tab = [0, 1, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4,\n        4, 4, 4, 4];\n\n    this.huffman_init = function (gfc) {\n        for (var i = 2; i <= 576; i += 2) {\n            var scfb_anz = 0, bv_index;\n            while (gfc.scalefac_band.l[++scfb_anz] < i)\n                ;\n\n            bv_index = subdv_table[scfb_anz][0]; // .region0_count\n            while (gfc.scalefac_band.l[bv_index + 1] > i)\n                bv_index--;\n\n            if (bv_index < 0) {\n                /*\n                 * this is an indication that everything is going to be encoded\n                 * as region0: bigvalues < region0 < region1 so lets set\n                 * region0, region1 to some value larger than bigvalues\n                 */\n                bv_index = subdv_table[scfb_anz][0]; // .region0_count\n            }\n\n            gfc.bv_scf[i - 2] = bv_index;\n\n            bv_index = subdv_table[scfb_anz][1]; // .region1_count\n            while (gfc.scalefac_band.l[bv_index + gfc.bv_scf[i - 2] + 2] > i)\n                bv_index--;\n\n            if (bv_index < 0) {\n                bv_index = subdv_table[scfb_anz][1]; // .region1_count\n            }\n\n            gfc.bv_scf[i - 1] = bv_index;\n        }\n    };\n}\n\nvar Takehiro_1 = Takehiro$1;\n\nvar System$17 = common.System;\nvar Arrays$17 = common.Arrays;\nvar new_byte$17 = common.new_byte;\nvar new_float_n$17 = common.new_float_n;\nvar new_int$17 = common.new_int;\nvar assert$17 = common.assert;\n\n\n\n\n\n\nBitStream$1.EQ = function (a, b) {\n    return (Math.abs(a) > Math.abs(b)) ? (Math.abs((a) - (b)) <= (Math\n        .abs(a) * 1e-6))\n        : (Math.abs((a) - (b)) <= (Math.abs(b) * 1e-6));\n};\n\nBitStream$1.NEQ = function (a, b) {\n    return !BitStream$1.EQ(a, b);\n};\n\nfunction BitStream$1() {\n    var self = this;\n    var CRC16_POLYNOMIAL = 0x8005;\n\n    /*\n     * we work with ints, so when doing bit manipulation, we limit ourselves to\n     * MAX_LENGTH-2 just to be on the safe side\n     */\n    var MAX_LENGTH = 32;\n\n    //GainAnalysis ga;\n    //MPGLib mpg;\n    //Version ver;\n    //VBRTag vbr;\n    var ga = null;\n    var mpg = null;\n    var ver = null;\n    var vbr = null;\n\n    //public final void setModules(GainAnalysis ga, MPGLib mpg, Version ver,\n    //\tVBRTag vbr) {\n\n    this.setModules = function (_ga, _mpg, _ver, _vbr) {\n        ga = _ga;\n        mpg = _mpg;\n        ver = _ver;\n        vbr = _vbr;\n    };\n\n    /**\n     * Bit stream buffer.\n     */\n    //private byte[] buf;\n    var buf = null;\n    /**\n     * Bit counter of bit stream.\n     */\n    var totbit = 0;\n    /**\n     * Pointer to top byte in buffer.\n     */\n    var bufByteIdx = 0;\n    /**\n     * Pointer to top bit of top byte in buffer.\n     */\n    var bufBitIdx = 0;\n\n    /**\n     * compute bitsperframe and mean_bits for a layer III frame\n     */\n    this.getframebits = function (gfp) {\n        var gfc = gfp.internal_flags;\n        var bit_rate;\n\n        /* get bitrate in kbps [?] */\n        if (gfc.bitrate_index != 0)\n            bit_rate = Tables_1.bitrate_table[gfp.version][gfc.bitrate_index];\n        else\n            bit_rate = gfp.brate;\n        assert$17(8 <= bit_rate && bit_rate <= 640);\n\n        /* main encoding routine toggles padding on and off */\n        /* one Layer3 Slot consists of 8 bits */\n        var bytes = 0 | (gfp.version + 1) * 72000 * bit_rate / gfp.out_samplerate + gfc.padding;\n        return 8 * bytes;\n    };\n\n    function putheader_bits(gfc) {\n        System$17.arraycopy(gfc.header[gfc.w_ptr].buf, 0, buf, bufByteIdx, gfc.sideinfo_len);\n        bufByteIdx += gfc.sideinfo_len;\n        totbit += gfc.sideinfo_len * 8;\n        gfc.w_ptr = (gfc.w_ptr + 1) & (LameInternalFlags_1.MAX_HEADER_BUF - 1);\n    }\n\n    /**\n     * write j bits into the bit stream\n     */\n    function putbits2(gfc, val, j) {\n        assert$17(j < MAX_LENGTH - 2);\n\n        while (j > 0) {\n            var k;\n            if (bufBitIdx == 0) {\n                bufBitIdx = 8;\n                bufByteIdx++;\n                assert$17(bufByteIdx < Lame.LAME_MAXMP3BUFFER);\n                assert$17(gfc.header[gfc.w_ptr].write_timing >= totbit);\n                if (gfc.header[gfc.w_ptr].write_timing == totbit) {\n                    putheader_bits(gfc);\n                }\n                buf[bufByteIdx] = 0;\n            }\n\n            k = Math.min(j, bufBitIdx);\n            j -= k;\n\n            bufBitIdx -= k;\n\n            assert$17(j < MAX_LENGTH);\n            /* 32 too large on 32 bit machines */\n            assert$17(bufBitIdx < MAX_LENGTH);\n\n            buf[bufByteIdx] |= ((val >> j) << bufBitIdx);\n            totbit += k;\n        }\n    }\n\n    /**\n     * write j bits into the bit stream, ignoring frame headers\n     */\n    function putbits_noheaders(gfc, val, j) {\n        assert$17(j < MAX_LENGTH - 2);\n\n        while (j > 0) {\n            var k;\n            if (bufBitIdx == 0) {\n                bufBitIdx = 8;\n                bufByteIdx++;\n                assert$17(bufByteIdx < Lame.LAME_MAXMP3BUFFER);\n                buf[bufByteIdx] = 0;\n            }\n\n            k = Math.min(j, bufBitIdx);\n            j -= k;\n\n            bufBitIdx -= k;\n\n            assert$17(j < MAX_LENGTH);\n            /* 32 too large on 32 bit machines */\n            assert$17(bufBitIdx < MAX_LENGTH);\n\n            buf[bufByteIdx] |= ((val >> j) << bufBitIdx);\n            totbit += k;\n        }\n    }\n\n    /**\n     * Some combinations of bitrate, Fs, and stereo make it impossible to stuff\n     * out a frame using just main_data, due to the limited number of bits to\n     * indicate main_data_length. In these situations, we put stuffing bits into\n     * the ancillary data...\n     */\n    function drain_into_ancillary(gfp, remainingBits) {\n        var gfc = gfp.internal_flags;\n        var i;\n        assert$17(remainingBits >= 0);\n\n        if (remainingBits >= 8) {\n            putbits2(gfc, 0x4c, 8);\n            remainingBits -= 8;\n        }\n        if (remainingBits >= 8) {\n            putbits2(gfc, 0x41, 8);\n            remainingBits -= 8;\n        }\n        if (remainingBits >= 8) {\n            putbits2(gfc, 0x4d, 8);\n            remainingBits -= 8;\n        }\n        if (remainingBits >= 8) {\n            putbits2(gfc, 0x45, 8);\n            remainingBits -= 8;\n        }\n\n        if (remainingBits >= 32) {\n            var version = ver.getLameShortVersion();\n            if (remainingBits >= 32)\n                for (i = 0; i < version.length && remainingBits >= 8; ++i) {\n                    remainingBits -= 8;\n                    putbits2(gfc, version.charAt(i), 8);\n                }\n        }\n\n        for (; remainingBits >= 1; remainingBits -= 1) {\n            putbits2(gfc, gfc.ancillary_flag, 1);\n            gfc.ancillary_flag ^= (!gfp.disable_reservoir ? 1 : 0);\n        }\n\n        assert$17(remainingBits == 0);\n\n    }\n\n    /**\n     * write N bits into the header\n     */\n    function writeheader(gfc, val, j) {\n        var ptr = gfc.header[gfc.h_ptr].ptr;\n\n        while (j > 0) {\n            var k = Math.min(j, 8 - (ptr & 7));\n            j -= k;\n            assert$17(j < MAX_LENGTH);\n            /* >> 32 too large for 32 bit machines */\n\n            gfc.header[gfc.h_ptr].buf[ptr >> 3] |= ((val >> j)) << (8 - (ptr & 7) - k);\n            ptr += k;\n        }\n        gfc.header[gfc.h_ptr].ptr = ptr;\n    }\n\n    function CRC_update(value, crc) {\n        value <<= 8;\n        for (var i = 0; i < 8; i++) {\n            value <<= 1;\n            crc <<= 1;\n\n            if ((((crc ^ value) & 0x10000) != 0))\n                crc ^= CRC16_POLYNOMIAL;\n        }\n        return crc;\n    }\n\n    this.CRC_writeheader = function (gfc, header) {\n        var crc = 0xffff;\n        /* (jo) init crc16 for error_protection */\n\n        crc = CRC_update(header[2] & 0xff, crc);\n        crc = CRC_update(header[3] & 0xff, crc);\n        for (var i = 6; i < gfc.sideinfo_len; i++) {\n            crc = CRC_update(header[i] & 0xff, crc);\n        }\n\n        header[4] = (byte)(crc >> 8);\n        header[5] = (byte)(crc & 255);\n    };\n\n    function encodeSideInfo2(gfp, bitsPerFrame) {\n        var gfc = gfp.internal_flags;\n        var l3_side;\n        var gr, ch;\n\n        l3_side = gfc.l3_side;\n        gfc.header[gfc.h_ptr].ptr = 0;\n        Arrays$17.fill(gfc.header[gfc.h_ptr].buf, 0, gfc.sideinfo_len, 0);\n        if (gfp.out_samplerate < 16000)\n            writeheader(gfc, 0xffe, 12);\n        else\n            writeheader(gfc, 0xfff, 12);\n        writeheader(gfc, (gfp.version), 1);\n        writeheader(gfc, 4 - 3, 2);\n        writeheader(gfc, (!gfp.error_protection ? 1 : 0), 1);\n        writeheader(gfc, (gfc.bitrate_index), 4);\n        writeheader(gfc, (gfc.samplerate_index), 2);\n        writeheader(gfc, (gfc.padding), 1);\n        writeheader(gfc, (gfp.extension), 1);\n        writeheader(gfc, (gfp.mode.ordinal()), 2);\n        writeheader(gfc, (gfc.mode_ext), 2);\n        writeheader(gfc, (gfp.copyright), 1);\n        writeheader(gfc, (gfp.original), 1);\n        writeheader(gfc, (gfp.emphasis), 2);\n        if (gfp.error_protection) {\n            writeheader(gfc, 0, 16);\n            /* dummy */\n        }\n\n        if (gfp.version == 1) {\n            /* MPEG1 */\n            assert$17(l3_side.main_data_begin >= 0);\n            writeheader(gfc, (l3_side.main_data_begin), 9);\n\n            if (gfc.channels_out == 2)\n                writeheader(gfc, l3_side.private_bits, 3);\n            else\n                writeheader(gfc, l3_side.private_bits, 5);\n\n            for (ch = 0; ch < gfc.channels_out; ch++) {\n                var band;\n                for (band = 0; band < 4; band++) {\n                    writeheader(gfc, l3_side.scfsi[ch][band], 1);\n                }\n            }\n\n            for (gr = 0; gr < 2; gr++) {\n                for (ch = 0; ch < gfc.channels_out; ch++) {\n                    var gi = l3_side.tt[gr][ch];\n                    writeheader(gfc, gi.part2_3_length + gi.part2_length, 12);\n                    writeheader(gfc, gi.big_values / 2, 9);\n                    writeheader(gfc, gi.global_gain, 8);\n                    writeheader(gfc, gi.scalefac_compress, 4);\n\n                    if (gi.block_type != Encoder_1.NORM_TYPE) {\n                        writeheader(gfc, 1, 1);\n                        /* window_switching_flag */\n                        writeheader(gfc, gi.block_type, 2);\n                        writeheader(gfc, gi.mixed_block_flag, 1);\n\n                        if (gi.table_select[0] == 14)\n                            gi.table_select[0] = 16;\n                        writeheader(gfc, gi.table_select[0], 5);\n                        if (gi.table_select[1] == 14)\n                            gi.table_select[1] = 16;\n                        writeheader(gfc, gi.table_select[1], 5);\n\n                        writeheader(gfc, gi.subblock_gain[0], 3);\n                        writeheader(gfc, gi.subblock_gain[1], 3);\n                        writeheader(gfc, gi.subblock_gain[2], 3);\n                    } else {\n                        writeheader(gfc, 0, 1);\n                        /* window_switching_flag */\n                        if (gi.table_select[0] == 14)\n                            gi.table_select[0] = 16;\n                        writeheader(gfc, gi.table_select[0], 5);\n                        if (gi.table_select[1] == 14)\n                            gi.table_select[1] = 16;\n                        writeheader(gfc, gi.table_select[1], 5);\n                        if (gi.table_select[2] == 14)\n                            gi.table_select[2] = 16;\n                        writeheader(gfc, gi.table_select[2], 5);\n\n                        assert$17(0 <= gi.region0_count && gi.region0_count < 16);\n                        assert$17(0 <= gi.region1_count && gi.region1_count < 8);\n                        writeheader(gfc, gi.region0_count, 4);\n                        writeheader(gfc, gi.region1_count, 3);\n                    }\n                    writeheader(gfc, gi.preflag, 1);\n                    writeheader(gfc, gi.scalefac_scale, 1);\n                    writeheader(gfc, gi.count1table_select, 1);\n                }\n            }\n        } else {\n            /* MPEG2 */\n            assert$17(l3_side.main_data_begin >= 0);\n            writeheader(gfc, (l3_side.main_data_begin), 8);\n            writeheader(gfc, l3_side.private_bits, gfc.channels_out);\n\n            gr = 0;\n            for (ch = 0; ch < gfc.channels_out; ch++) {\n                var gi = l3_side.tt[gr][ch];\n                writeheader(gfc, gi.part2_3_length + gi.part2_length, 12);\n                writeheader(gfc, gi.big_values / 2, 9);\n                writeheader(gfc, gi.global_gain, 8);\n                writeheader(gfc, gi.scalefac_compress, 9);\n\n                if (gi.block_type != Encoder_1.NORM_TYPE) {\n                    writeheader(gfc, 1, 1);\n                    /* window_switching_flag */\n                    writeheader(gfc, gi.block_type, 2);\n                    writeheader(gfc, gi.mixed_block_flag, 1);\n\n                    if (gi.table_select[0] == 14)\n                        gi.table_select[0] = 16;\n                    writeheader(gfc, gi.table_select[0], 5);\n                    if (gi.table_select[1] == 14)\n                        gi.table_select[1] = 16;\n                    writeheader(gfc, gi.table_select[1], 5);\n\n                    writeheader(gfc, gi.subblock_gain[0], 3);\n                    writeheader(gfc, gi.subblock_gain[1], 3);\n                    writeheader(gfc, gi.subblock_gain[2], 3);\n                } else {\n                    writeheader(gfc, 0, 1);\n                    /* window_switching_flag */\n                    if (gi.table_select[0] == 14)\n                        gi.table_select[0] = 16;\n                    writeheader(gfc, gi.table_select[0], 5);\n                    if (gi.table_select[1] == 14)\n                        gi.table_select[1] = 16;\n                    writeheader(gfc, gi.table_select[1], 5);\n                    if (gi.table_select[2] == 14)\n                        gi.table_select[2] = 16;\n                    writeheader(gfc, gi.table_select[2], 5);\n\n                    assert$17(0 <= gi.region0_count && gi.region0_count < 16);\n                    assert$17(0 <= gi.region1_count && gi.region1_count < 8);\n                    writeheader(gfc, gi.region0_count, 4);\n                    writeheader(gfc, gi.region1_count, 3);\n                }\n\n                writeheader(gfc, gi.scalefac_scale, 1);\n                writeheader(gfc, gi.count1table_select, 1);\n            }\n        }\n\n        if (gfp.error_protection) {\n            /* (jo) error_protection: add crc16 information to header */\n            CRC_writeheader(gfc, gfc.header[gfc.h_ptr].buf);\n        }\n\n        {\n            var old = gfc.h_ptr;\n            assert$17(gfc.header[old].ptr == gfc.sideinfo_len * 8);\n\n            gfc.h_ptr = (old + 1) & (LameInternalFlags_1.MAX_HEADER_BUF - 1);\n            gfc.header[gfc.h_ptr].write_timing = gfc.header[old].write_timing\n                + bitsPerFrame;\n\n            if (gfc.h_ptr == gfc.w_ptr) {\n                /* yikes! we are out of header buffer space */\n                System$17.err\n                    .println(\"Error: MAX_HEADER_BUF too small in bitstream.c \\n\");\n            }\n\n        }\n    }\n\n    function huffman_coder_count1(gfc, gi) {\n        /* Write count1 area */\n        var h = Tables_1.ht[gi.count1table_select + 32];\n        var i, bits = 0;\n\n        var ix = gi.big_values;\n        var xr = gi.big_values;\n        assert$17(gi.count1table_select < 2);\n\n        for (i = (gi.count1 - gi.big_values) / 4; i > 0; --i) {\n            var huffbits = 0;\n            var p = 0, v;\n\n            v = gi.l3_enc[ix + 0];\n            if (v != 0) {\n                p += 8;\n                if (gi.xr[xr + 0] < 0)\n                    huffbits++;\n                assert$17(v <= 1);\n            }\n\n            v = gi.l3_enc[ix + 1];\n            if (v != 0) {\n                p += 4;\n                huffbits *= 2;\n                if (gi.xr[xr + 1] < 0)\n                    huffbits++;\n                assert$17(v <= 1);\n            }\n\n            v = gi.l3_enc[ix + 2];\n            if (v != 0) {\n                p += 2;\n                huffbits *= 2;\n                if (gi.xr[xr + 2] < 0)\n                    huffbits++;\n                assert$17(v <= 1);\n            }\n\n            v = gi.l3_enc[ix + 3];\n            if (v != 0) {\n                p++;\n                huffbits *= 2;\n                if (gi.xr[xr + 3] < 0)\n                    huffbits++;\n                assert$17(v <= 1);\n            }\n\n            ix += 4;\n            xr += 4;\n            putbits2(gfc, huffbits + h.table[p], h.hlen[p]);\n            bits += h.hlen[p];\n        }\n        return bits;\n    }\n\n    /**\n     * Implements the pseudocode of page 98 of the IS\n     */\n    function Huffmancode(gfc, tableindex, start, end, gi) {\n        var h = Tables_1.ht[tableindex];\n        var bits = 0;\n\n        assert$17(tableindex < 32);\n        if (0 == tableindex)\n            return bits;\n\n        for (var i = start; i < end; i += 2) {\n            var cbits = 0;\n            var xbits = 0;\n            var linbits = h.xlen;\n            var xlen = h.xlen;\n            var ext = 0;\n            var x1 = gi.l3_enc[i];\n            var x2 = gi.l3_enc[i + 1];\n\n            if (x1 != 0) {\n                if (gi.xr[i] < 0)\n                    ext++;\n                cbits--;\n            }\n\n            if (tableindex > 15) {\n                /* use ESC-words */\n                if (x1 > 14) {\n                    var linbits_x1 = x1 - 15;\n                    assert$17(linbits_x1 <= h.linmax);\n                    ext |= linbits_x1 << 1;\n                    xbits = linbits;\n                    x1 = 15;\n                }\n\n                if (x2 > 14) {\n                    var linbits_x2 = x2 - 15;\n                    assert$17(linbits_x2 <= h.linmax);\n                    ext <<= linbits;\n                    ext |= linbits_x2;\n                    xbits += linbits;\n                    x2 = 15;\n                }\n                xlen = 16;\n            }\n\n            if (x2 != 0) {\n                ext <<= 1;\n                if (gi.xr[i + 1] < 0)\n                    ext++;\n                cbits--;\n            }\n\n            assert$17((x1 | x2) < 16);\n\n            x1 = x1 * xlen + x2;\n            xbits -= cbits;\n            cbits += h.hlen[x1];\n\n            assert$17(cbits <= MAX_LENGTH);\n            assert$17(xbits <= MAX_LENGTH);\n\n            putbits2(gfc, h.table[x1], cbits);\n            putbits2(gfc, ext, xbits);\n            bits += cbits + xbits;\n        }\n        return bits;\n    }\n\n    /**\n     * Note the discussion of huffmancodebits() on pages 28 and 29 of the IS, as\n     * well as the definitions of the side information on pages 26 and 27.\n     */\n    function ShortHuffmancodebits(gfc, gi) {\n        var region1Start = 3 * gfc.scalefac_band.s[3];\n        if (region1Start > gi.big_values)\n            region1Start = gi.big_values;\n\n        /* short blocks do not have a region2 */\n        var bits = Huffmancode(gfc, gi.table_select[0], 0, region1Start, gi);\n        bits += Huffmancode(gfc, gi.table_select[1], region1Start,\n            gi.big_values, gi);\n        return bits;\n    }\n\n    function LongHuffmancodebits(gfc, gi) {\n        var bigvalues, bits;\n        var region1Start, region2Start;\n\n        bigvalues = gi.big_values;\n        assert$17(0 <= bigvalues && bigvalues <= 576);\n\n        var i = gi.region0_count + 1;\n        assert$17(0 <= i);\n        assert$17(i < gfc.scalefac_band.l.length);\n        region1Start = gfc.scalefac_band.l[i];\n        i += gi.region1_count + 1;\n        assert$17(0 <= i);\n        assert$17(i < gfc.scalefac_band.l.length);\n        region2Start = gfc.scalefac_band.l[i];\n\n        if (region1Start > bigvalues)\n            region1Start = bigvalues;\n\n        if (region2Start > bigvalues)\n            region2Start = bigvalues;\n\n        bits = Huffmancode(gfc, gi.table_select[0], 0, region1Start, gi);\n        bits += Huffmancode(gfc, gi.table_select[1], region1Start,\n            region2Start, gi);\n        bits += Huffmancode(gfc, gi.table_select[2], region2Start, bigvalues,\n            gi);\n        return bits;\n    }\n\n    function writeMainData(gfp) {\n        var gr, ch, sfb, data_bits, tot_bits = 0;\n        var gfc = gfp.internal_flags;\n        var l3_side = gfc.l3_side;\n\n        if (gfp.version == 1) {\n            /* MPEG 1 */\n            for (gr = 0; gr < 2; gr++) {\n                for (ch = 0; ch < gfc.channels_out; ch++) {\n                    var gi = l3_side.tt[gr][ch];\n                    var slen1 = Takehiro_1.slen1_tab[gi.scalefac_compress];\n                    var slen2 = Takehiro_1.slen2_tab[gi.scalefac_compress];\n                    data_bits = 0;\n                    for (sfb = 0; sfb < gi.sfbdivide; sfb++) {\n                        if (gi.scalefac[sfb] == -1)\n                            continue;\n                        /* scfsi is used */\n                        putbits2(gfc, gi.scalefac[sfb], slen1);\n                        data_bits += slen1;\n                    }\n                    for (; sfb < gi.sfbmax; sfb++) {\n                        if (gi.scalefac[sfb] == -1)\n                            continue;\n                        /* scfsi is used */\n                        putbits2(gfc, gi.scalefac[sfb], slen2);\n                        data_bits += slen2;\n                    }\n                    assert$17(data_bits == gi.part2_length);\n\n                    if (gi.block_type == Encoder_1.SHORT_TYPE) {\n                        data_bits += ShortHuffmancodebits(gfc, gi);\n                    } else {\n                        data_bits += LongHuffmancodebits(gfc, gi);\n                    }\n                    data_bits += huffman_coder_count1(gfc, gi);\n                    /* does bitcount in quantize.c agree with actual bit count? */\n                    assert$17(data_bits == gi.part2_3_length + gi.part2_length);\n                    tot_bits += data_bits;\n                }\n                /* for ch */\n            }\n            /* for gr */\n        } else {\n            /* MPEG 2 */\n            gr = 0;\n            for (ch = 0; ch < gfc.channels_out; ch++) {\n                var gi = l3_side.tt[gr][ch];\n                var i, sfb_partition, scale_bits = 0;\n                assert$17(gi.sfb_partition_table != null);\n                data_bits = 0;\n                sfb = 0;\n                sfb_partition = 0;\n\n                if (gi.block_type == Encoder_1.SHORT_TYPE) {\n                    for (; sfb_partition < 4; sfb_partition++) {\n                        var sfbs = gi.sfb_partition_table[sfb_partition] / 3;\n                        var slen = gi.slen[sfb_partition];\n                        for (i = 0; i < sfbs; i++, sfb++) {\n                            putbits2(gfc,\n                                Math.max(gi.scalefac[sfb * 3 + 0], 0), slen);\n                            putbits2(gfc,\n                                Math.max(gi.scalefac[sfb * 3 + 1], 0), slen);\n                            putbits2(gfc,\n                                Math.max(gi.scalefac[sfb * 3 + 2], 0), slen);\n                            scale_bits += 3 * slen;\n                        }\n                    }\n                    data_bits += ShortHuffmancodebits(gfc, gi);\n                } else {\n                    for (; sfb_partition < 4; sfb_partition++) {\n                        var sfbs = gi.sfb_partition_table[sfb_partition];\n                        var slen = gi.slen[sfb_partition];\n                        for (i = 0; i < sfbs; i++, sfb++) {\n                            putbits2(gfc, Math.max(gi.scalefac[sfb], 0), slen);\n                            scale_bits += slen;\n                        }\n                    }\n                    data_bits += LongHuffmancodebits(gfc, gi);\n                }\n                data_bits += huffman_coder_count1(gfc, gi);\n                /* does bitcount in quantize.c agree with actual bit count? */\n                assert$17(data_bits == gi.part2_3_length);\n                assert$17(scale_bits == gi.part2_length);\n                tot_bits += scale_bits + data_bits;\n            }\n            /* for ch */\n        }\n        /* for gf */\n        return tot_bits;\n    }\n\n    /* main_data */\n\n    function TotalBytes() {\n        this.total = 0;\n    }\n\n    /*\n     * compute the number of bits required to flush all mp3 frames currently in\n     * the buffer. This should be the same as the reservoir size. Only call this\n     * routine between frames - i.e. only after all headers and data have been\n     * added to the buffer by format_bitstream().\n     *\n     * Also compute total_bits_output = size of mp3 buffer (including frame\n     * headers which may not have yet been send to the mp3 buffer) + number of\n     * bits needed to flush all mp3 frames.\n     *\n     * total_bytes_output is the size of the mp3 output buffer if\n     * lame_encode_flush_nogap() was called right now.\n     */\n    function compute_flushbits(gfp, total_bytes_output) {\n        var gfc = gfp.internal_flags;\n        var flushbits, remaining_headers;\n        var bitsPerFrame;\n        var last_ptr, first_ptr;\n        first_ptr = gfc.w_ptr;\n        /* first header to add to bitstream */\n        last_ptr = gfc.h_ptr - 1;\n        /* last header to add to bitstream */\n        if (last_ptr == -1)\n            last_ptr = LameInternalFlags_1.MAX_HEADER_BUF - 1;\n\n        /* add this many bits to bitstream so we can flush all headers */\n        flushbits = gfc.header[last_ptr].write_timing - totbit;\n        total_bytes_output.total = flushbits;\n\n        if (flushbits >= 0) {\n            /* if flushbits >= 0, some headers have not yet been written */\n            /* reduce flushbits by the size of the headers */\n            remaining_headers = 1 + last_ptr - first_ptr;\n            if (last_ptr < first_ptr)\n                remaining_headers = 1 + last_ptr - first_ptr\n                    + LameInternalFlags_1.MAX_HEADER_BUF;\n            flushbits -= remaining_headers * 8 * gfc.sideinfo_len;\n        }\n\n        /*\n         * finally, add some bits so that the last frame is complete these bits\n         * are not necessary to decode the last frame, but some decoders will\n         * ignore last frame if these bits are missing\n         */\n        bitsPerFrame = self.getframebits(gfp);\n        flushbits += bitsPerFrame;\n        total_bytes_output.total += bitsPerFrame;\n        /* round up: */\n        if ((total_bytes_output.total % 8) != 0)\n            total_bytes_output.total = 1 + (total_bytes_output.total / 8);\n        else\n            total_bytes_output.total = (total_bytes_output.total / 8);\n        total_bytes_output.total += bufByteIdx + 1;\n\n        if (flushbits < 0) {\n            System$17.err.println(\"strange error flushing buffer ... \\n\");\n        }\n        return flushbits;\n    }\n\n    this.flush_bitstream = function (gfp) {\n        var gfc = gfp.internal_flags;\n        var l3_side;\n        var flushbits;\n        var last_ptr = gfc.h_ptr - 1;\n        /* last header to add to bitstream */\n        if (last_ptr == -1)\n            last_ptr = LameInternalFlags_1.MAX_HEADER_BUF - 1;\n        l3_side = gfc.l3_side;\n\n        if ((flushbits = compute_flushbits(gfp, new TotalBytes())) < 0)\n            return;\n        drain_into_ancillary(gfp, flushbits);\n\n        /* check that the 100% of the last frame has been written to bitstream */\n        assert$17(gfc.header[last_ptr].write_timing + this.getframebits(gfp) == totbit);\n\n        /*\n         * we have padded out all frames with ancillary data, which is the same\n         * as filling the bitreservoir with ancillary data, so :\n         */\n        gfc.ResvSize = 0;\n        l3_side.main_data_begin = 0;\n\n        /* save the ReplayGain value */\n        if (gfc.findReplayGain) {\n            var RadioGain = ga.GetTitleGain(gfc.rgdata);\n            assert$17(NEQ(RadioGain, GainAnalysis.GAIN_NOT_ENOUGH_SAMPLES));\n            gfc.RadioGain = Math.floor(RadioGain * 10.0 + 0.5) | 0;\n            /* round to nearest */\n        }\n\n        /* find the gain and scale change required for no clipping */\n        if (gfc.findPeakSample) {\n            gfc.noclipGainChange = Math.ceil(Math\n                        .log10(gfc.PeakSample / 32767.0) * 20.0 * 10.0) | 0;\n            /* round up */\n\n            if (gfc.noclipGainChange > 0) {\n                /* clipping occurs */\n                if (EQ(gfp.scale, 1.0) || EQ(gfp.scale, 0.0))\n                    gfc.noclipScale = (Math\n                        .floor((32767.0 / gfc.PeakSample) * 100.0) / 100.0);\n                /* round down */\n                else {\n                    /*\n                     * the user specified his own scaling factor. We could\n                     * suggest the scaling factor of\n                     * (32767.0/gfp.PeakSample)*(gfp.scale) but it's usually\n                     * very inaccurate. So we'd rather not advice him on the\n                     * scaling factor.\n                     */\n                    gfc.noclipScale = -1;\n                }\n            } else\n            /* no clipping */\n                gfc.noclipScale = -1;\n        }\n    };\n\n    this.add_dummy_byte = function (gfp, val, n) {\n        var gfc = gfp.internal_flags;\n        var i;\n\n        while (n-- > 0) {\n            putbits_noheaders(gfc, val, 8);\n\n            for (i = 0; i < LameInternalFlags_1.MAX_HEADER_BUF; ++i)\n                gfc.header[i].write_timing += 8;\n        }\n    };\n\n    /**\n     * This is called after a frame of audio has been quantized and coded. It\n     * will write the encoded audio to the bitstream. Note that from a layer3\n     * encoder's perspective the bit stream is primarily a series of main_data()\n     * blocks, with header and side information inserted at the proper locations\n     * to maintain framing. (See Figure A.7 in the IS).\n     */\n    this.format_bitstream = function (gfp) {\n        var gfc = gfp.internal_flags;\n        var l3_side;\n        l3_side = gfc.l3_side;\n\n        var bitsPerFrame = this.getframebits(gfp);\n        drain_into_ancillary(gfp, l3_side.resvDrain_pre);\n\n        encodeSideInfo2(gfp, bitsPerFrame);\n        var bits = 8 * gfc.sideinfo_len;\n        bits += writeMainData(gfp);\n        drain_into_ancillary(gfp, l3_side.resvDrain_post);\n        bits += l3_side.resvDrain_post;\n\n        l3_side.main_data_begin += (bitsPerFrame - bits) / 8;\n\n        /*\n         * compare number of bits needed to clear all buffered mp3 frames with\n         * what we think the resvsize is:\n         */\n        if (compute_flushbits(gfp, new TotalBytes()) != gfc.ResvSize) {\n            System$17.err.println(\"Internal buffer inconsistency. flushbits <> ResvSize\");\n        }\n\n        /*\n         * compare main_data_begin for the next frame with what we think the\n         * resvsize is:\n         */\n        if ((l3_side.main_data_begin * 8) != gfc.ResvSize) {\n            System$17.err.printf(\"bit reservoir error: \\n\"\n                + \"l3_side.main_data_begin: %d \\n\"\n                + \"Resvoir size:             %d \\n\"\n                + \"resv drain (post)         %d \\n\"\n                + \"resv drain (pre)          %d \\n\"\n                + \"header and sideinfo:      %d \\n\"\n                + \"data bits:                %d \\n\"\n                + \"total bits:               %d (remainder: %d) \\n\"\n                + \"bitsperframe:             %d \\n\",\n                8 * l3_side.main_data_begin, gfc.ResvSize,\n                l3_side.resvDrain_post, l3_side.resvDrain_pre,\n                8 * gfc.sideinfo_len, bits - l3_side.resvDrain_post - 8\n                * gfc.sideinfo_len, bits, bits % 8, bitsPerFrame);\n\n            System$17.err.println(\"This is a fatal error.  It has several possible causes:\");\n            System$17.err.println(\"90%%  LAME compiled with buggy version of gcc using advanced optimizations\");\n            System$17.err.println(\" 9%%  Your system is overclocked\");\n            System$17.err.println(\" 1%%  bug in LAME encoding library\");\n\n            gfc.ResvSize = l3_side.main_data_begin * 8;\n        }\n        //;\n        assert$17(totbit % 8 == 0);\n\n        if (totbit > 1000000000) {\n            /*\n             * to avoid totbit overflow, (at 8h encoding at 128kbs) lets reset\n             * bit counter\n             */\n            var i;\n            for (i = 0; i < LameInternalFlags_1.MAX_HEADER_BUF; ++i)\n                gfc.header[i].write_timing -= totbit;\n            totbit = 0;\n        }\n\n        return 0;\n    };\n\n    /**\n     * <PRE>\n     * copy data out of the internal MP3 bit buffer into a user supplied\n     *       unsigned char buffer.\n     *\n     *       mp3data=0      indicates data in buffer is an id3tags and VBR tags\n     *       mp3data=1      data is real mp3 frame data.\n     * </PRE>\n     */\n    this.copy_buffer = function (gfc, buffer, bufferPos, size, mp3data) {\n        var minimum = bufByteIdx + 1;\n        if (minimum <= 0)\n            return 0;\n        if (size != 0 && minimum > size) {\n            /* buffer is too small */\n            return -1;\n        }\n        System$17.arraycopy(buf, 0, buffer, bufferPos, minimum);\n        bufByteIdx = -1;\n        bufBitIdx = 0;\n\n        if (mp3data != 0) {\n            var crc = new_int$17(1);\n            crc[0] = gfc.nMusicCRC;\n            vbr.updateMusicCRC(crc, buffer, bufferPos, minimum);\n            gfc.nMusicCRC = crc[0];\n\n            /**\n             * sum number of bytes belonging to the mp3 stream this info will be\n             * written into the Xing/LAME header for seeking\n             */\n            if (minimum > 0) {\n                gfc.VBR_seek_table.nBytesWritten += minimum;\n            }\n\n            if (gfc.decode_on_the_fly) { /* decode the frame */\n                var pcm_buf = new_float_n$17([2, 1152]);\n                var mp3_in = minimum;\n                var samples_out = -1;\n                var i;\n\n                /* re-synthesis to pcm. Repeat until we get a samples_out=0 */\n                while (samples_out != 0) {\n\n                    samples_out = mpg.hip_decode1_unclipped(gfc.hip, buffer,\n                        bufferPos, mp3_in, pcm_buf[0], pcm_buf[1]);\n                    /*\n                     * samples_out = 0: need more data to decode samples_out =\n                     * -1: error. Lets assume 0 pcm output samples_out = number\n                     * of samples output\n                     */\n\n                    /*\n                     * set the lenght of the mp3 input buffer to zero, so that\n                     * in the next iteration of the loop we will be querying\n                     * mpglib about buffered data\n                     */\n                    mp3_in = 0;\n\n                    if (samples_out == -1) {\n                        /*\n                         * error decoding. Not fatal, but might screw up the\n                         * ReplayGain tag. What should we do? Ignore for now\n                         */\n                        samples_out = 0;\n                    }\n                    if (samples_out > 0) {\n                        /* process the PCM data */\n\n                        /*\n                         * this should not be possible, and indicates we have\n                         * overflown the pcm_buf buffer\n                         */\n                        assert$17(samples_out <= 1152);\n\n                        if (gfc.findPeakSample) {\n                            for (i = 0; i < samples_out; i++) {\n                                if (pcm_buf[0][i] > gfc.PeakSample)\n                                    gfc.PeakSample = pcm_buf[0][i];\n                                else if (-pcm_buf[0][i] > gfc.PeakSample)\n                                    gfc.PeakSample = -pcm_buf[0][i];\n                            }\n                            if (gfc.channels_out > 1)\n                                for (i = 0; i < samples_out; i++) {\n                                    if (pcm_buf[1][i] > gfc.PeakSample)\n                                        gfc.PeakSample = pcm_buf[1][i];\n                                    else if (-pcm_buf[1][i] > gfc.PeakSample)\n                                        gfc.PeakSample = -pcm_buf[1][i];\n                                }\n                        }\n\n                        if (gfc.findReplayGain)\n                            if (ga.AnalyzeSamples(gfc.rgdata, pcm_buf[0], 0,\n                                    pcm_buf[1], 0, samples_out,\n                                    gfc.channels_out) == GainAnalysis.GAIN_ANALYSIS_ERROR)\n                                return -6;\n\n                    }\n                    /* if (samples_out>0) */\n                }\n                /* while (samples_out!=0) */\n            }\n            /* if (gfc.decode_on_the_fly) */\n\n        }\n        /* if (mp3data) */\n        return minimum;\n    };\n\n    this.init_bit_stream_w = function (gfc) {\n        buf = new_byte$17(Lame.LAME_MAXMP3BUFFER);\n\n        gfc.h_ptr = gfc.w_ptr = 0;\n        gfc.header[gfc.h_ptr].write_timing = 0;\n        bufByteIdx = -1;\n        bufBitIdx = 0;\n        totbit = 0;\n    };\n\n    // From machine.h\n\n\n}\n\nvar BitStream_1 = BitStream$1;\n\nvar System$2 = common.System;\nvar VbrMode$2 = common.VbrMode;\nvar ShortBlock$2 = common.ShortBlock;\nvar new_float$2 = common.new_float;\nvar new_int_n$2 = common.new_int_n;\nvar new_short_n$1 = common.new_short_n;\nvar assert$2 = common.assert;\n\n\n\n\n\n\n\n\n\n\n\nfunction Lame$1() {\n    var self = this;\n    var LAME_MAXALBUMART = (128 * 1024);\n\n    Lame$1.V9 = 410;\n    Lame$1.V8 = 420;\n    Lame$1.V7 = 430;\n    Lame$1.V6 = 440;\n    Lame$1.V5 = 450;\n    Lame$1.V4 = 460;\n    Lame$1.V3 = 470;\n    Lame$1.V2 = 480;\n    Lame$1.V1 = 490;\n    Lame$1.V0 = 500;\n\n    /* still there for compatibility */\n\n    Lame$1.R3MIX = 1000;\n    Lame$1.STANDARD = 1001;\n    Lame$1.EXTREME = 1002;\n    Lame$1.INSANE = 1003;\n    Lame$1.STANDARD_FAST = 1004;\n    Lame$1.EXTREME_FAST = 1005;\n    Lame$1.MEDIUM = 1006;\n    Lame$1.MEDIUM_FAST = 1007;\n\n    /**\n     * maximum size of mp3buffer needed if you encode at most 1152 samples for\n     * each call to lame_encode_buffer. see lame_encode_buffer() below\n     * (LAME_MAXMP3BUFFER is now obsolete)\n     */\n    var LAME_MAXMP3BUFFER = (16384 + LAME_MAXALBUMART);\n    Lame$1.LAME_MAXMP3BUFFER = LAME_MAXMP3BUFFER;\n\n    var ga;\n    var bs;\n    var p;\n    var qupvt;\n    var qu;\n    var psy = new PsyModel_1();\n    var vbr;\n    var ver;\n    var id3;\n    var mpglib;\n    this.enc = new Encoder_1();\n\n    this.setModules = function (_ga, _bs, _p, _qupvt, _qu, _vbr, _ver, _id3, _mpglib) {\n        ga = _ga;\n        bs = _bs;\n        p = _p;\n        qupvt = _qupvt;\n        qu = _qu;\n        vbr = _vbr;\n        ver = _ver;\n        id3 = _id3;\n        mpglib = _mpglib;\n        this.enc.setModules(bs, psy, qupvt, vbr);\n    };\n\n    /**\n     * PSY Model related stuff\n     */\n    function PSY() {\n        /**\n         * The dbQ stuff.\n         */\n        this.mask_adjust = 0.;\n        /**\n         * The dbQ stuff.\n         */\n        this.mask_adjust_short = 0.;\n        /* at transition from one scalefactor band to next */\n        /**\n         * Band weight long scalefactor bands.\n         */\n        this.bo_l_weight = new_float$2(Encoder_1.SBMAX_l);\n        /**\n         * Band weight short scalefactor bands.\n         */\n        this.bo_s_weight = new_float$2(Encoder_1.SBMAX_s);\n    }\n\n    function LowPassHighPass() {\n        this.lowerlimit = 0.;\n    }\n\n    function BandPass(bitrate, lPass) {\n        this.lowpass = lPass;\n    }\n\n    var LAME_ID = 0xFFF88E3B;\n\n    function lame_init_old(gfp) {\n        var gfc;\n\n        gfp.class_id = LAME_ID;\n\n        gfc = gfp.internal_flags = new LameInternalFlags_1();\n\n        /* Global flags. set defaults here for non-zero values */\n        /* see lame.h for description */\n        /*\n         * set integer values to -1 to mean that LAME will compute the best\n         * value, UNLESS the calling program as set it (and the value is no\n         * longer -1)\n         */\n\n        gfp.mode = MPEGMode.NOT_SET;\n        gfp.original = 1;\n        gfp.in_samplerate = 44100;\n        gfp.num_channels = 2;\n        gfp.num_samples = -1;\n\n        gfp.bWriteVbrTag = true;\n        gfp.quality = -1;\n        gfp.short_blocks = null;\n        gfc.subblock_gain = -1;\n\n        gfp.lowpassfreq = 0;\n        gfp.highpassfreq = 0;\n        gfp.lowpasswidth = -1;\n        gfp.highpasswidth = -1;\n\n        gfp.VBR = VbrMode$2.vbr_off;\n        gfp.VBR_q = 4;\n        gfp.ATHcurve = -1;\n        gfp.VBR_mean_bitrate_kbps = 128;\n        gfp.VBR_min_bitrate_kbps = 0;\n        gfp.VBR_max_bitrate_kbps = 0;\n        gfp.VBR_hard_min = 0;\n        gfc.VBR_min_bitrate = 1;\n        /* not 0 ????? */\n        gfc.VBR_max_bitrate = 13;\n        /* not 14 ????? */\n\n        gfp.quant_comp = -1;\n        gfp.quant_comp_short = -1;\n\n        gfp.msfix = -1;\n\n        gfc.resample_ratio = 1;\n\n        gfc.OldValue[0] = 180;\n        gfc.OldValue[1] = 180;\n        gfc.CurrentStep[0] = 4;\n        gfc.CurrentStep[1] = 4;\n        gfc.masking_lower = 1;\n        gfc.nsPsy.attackthre = -1;\n        gfc.nsPsy.attackthre_s = -1;\n\n        gfp.scale = -1;\n\n        gfp.athaa_type = -1;\n        gfp.ATHtype = -1;\n        /* default = -1 = set in lame_init_params */\n        gfp.athaa_loudapprox = -1;\n        /* 1 = flat loudness approx. (total energy) */\n        /* 2 = equal loudness curve */\n        gfp.athaa_sensitivity = 0.0;\n        /* no offset */\n        gfp.useTemporal = null;\n        gfp.interChRatio = -1;\n\n        /*\n         * The reason for int mf_samples_to_encode = ENCDELAY + POSTDELAY;\n         * ENCDELAY = internal encoder delay. And then we have to add\n         * POSTDELAY=288 because of the 50% MDCT overlap. A 576 MDCT granule\n         * decodes to 1152 samples. To synthesize the 576 samples centered under\n         * this granule we need the previous granule for the first 288 samples\n         * (no problem), and the next granule for the next 288 samples (not\n         * possible if this is last granule). So we need to pad with 288 samples\n         * to make sure we can encode the 576 samples we are interested in.\n         */\n        gfc.mf_samples_to_encode = Encoder_1.ENCDELAY + Encoder_1.POSTDELAY;\n        gfp.encoder_padding = 0;\n        gfc.mf_size = Encoder_1.ENCDELAY - Encoder_1.MDCTDELAY;\n        /*\n         * we pad input with this many 0's\n         */\n\n        gfp.findReplayGain = false;\n        gfp.decode_on_the_fly = false;\n\n        gfc.decode_on_the_fly = false;\n        gfc.findReplayGain = false;\n        gfc.findPeakSample = false;\n\n        gfc.RadioGain = 0;\n        gfc.AudiophileGain = 0;\n        gfc.noclipGainChange = 0;\n        gfc.noclipScale = -1.0;\n\n        gfp.preset = 0;\n\n        gfp.write_id3tag_automatic = true;\n        return 0;\n    }\n\n    this.lame_init = function () {\n        var gfp = new LameGlobalFlags_1();\n\n        var ret = lame_init_old(gfp);\n        if (ret != 0) {\n            return null;\n        }\n\n        gfp.lame_allocated_gfp = 1;\n        return gfp;\n    };\n\n    function filter_coef(x) {\n        if (x > 1.0)\n            return 0.0;\n        if (x <= 0.0)\n            return 1.0;\n\n        return Math.cos(Math.PI / 2 * x);\n    }\n\n    this.nearestBitrateFullIndex = function (bitrate) {\n        /* borrowed from DM abr presets */\n\n        var full_bitrate_table = [8, 16, 24, 32, 40, 48, 56, 64, 80,\n            96, 112, 128, 160, 192, 224, 256, 320];\n\n        var lower_range = 0, lower_range_kbps = 0, upper_range = 0, upper_range_kbps = 0;\n\n        /* We assume specified bitrate will be 320kbps */\n        upper_range_kbps = full_bitrate_table[16];\n        upper_range = 16;\n        lower_range_kbps = full_bitrate_table[16];\n        lower_range = 16;\n\n        /*\n         * Determine which significant bitrates the value specified falls\n         * between, if loop ends without breaking then we were correct above\n         * that the value was 320\n         */\n        for (var b = 0; b < 16; b++) {\n            if ((Math.max(bitrate, full_bitrate_table[b + 1])) != bitrate) {\n                upper_range_kbps = full_bitrate_table[b + 1];\n                upper_range = b + 1;\n                lower_range_kbps = full_bitrate_table[b];\n                lower_range = (b);\n                break;\n                /* We found upper range */\n            }\n        }\n\n        /* Determine which range the value specified is closer to */\n        if ((upper_range_kbps - bitrate) > (bitrate - lower_range_kbps)) {\n            return lower_range;\n        }\n        return upper_range;\n    };\n\n    function optimum_samplefreq(lowpassfreq, input_samplefreq) {\n        /*\n         * Rules:\n         *\n         * - if possible, sfb21 should NOT be used\n         */\n        var suggested_samplefreq = 44100;\n\n        if (input_samplefreq >= 48000)\n            suggested_samplefreq = 48000;\n        else if (input_samplefreq >= 44100)\n            suggested_samplefreq = 44100;\n        else if (input_samplefreq >= 32000)\n            suggested_samplefreq = 32000;\n        else if (input_samplefreq >= 24000)\n            suggested_samplefreq = 24000;\n        else if (input_samplefreq >= 22050)\n            suggested_samplefreq = 22050;\n        else if (input_samplefreq >= 16000)\n            suggested_samplefreq = 16000;\n        else if (input_samplefreq >= 12000)\n            suggested_samplefreq = 12000;\n        else if (input_samplefreq >= 11025)\n            suggested_samplefreq = 11025;\n        else if (input_samplefreq >= 8000)\n            suggested_samplefreq = 8000;\n\n        if (lowpassfreq == -1)\n            return suggested_samplefreq;\n\n        if (lowpassfreq <= 15960)\n            suggested_samplefreq = 44100;\n        if (lowpassfreq <= 15250)\n            suggested_samplefreq = 32000;\n        if (lowpassfreq <= 11220)\n            suggested_samplefreq = 24000;\n        if (lowpassfreq <= 9970)\n            suggested_samplefreq = 22050;\n        if (lowpassfreq <= 7230)\n            suggested_samplefreq = 16000;\n        if (lowpassfreq <= 5420)\n            suggested_samplefreq = 12000;\n        if (lowpassfreq <= 4510)\n            suggested_samplefreq = 11025;\n        if (lowpassfreq <= 3970)\n            suggested_samplefreq = 8000;\n\n        if (input_samplefreq < suggested_samplefreq) {\n            /*\n             * choose a valid MPEG sample frequency above the input sample\n             * frequency to avoid SFB21/12 bitrate bloat rh 061115\n             */\n            if (input_samplefreq > 44100) {\n                return 48000;\n            }\n            if (input_samplefreq > 32000) {\n                return 44100;\n            }\n            if (input_samplefreq > 24000) {\n                return 32000;\n            }\n            if (input_samplefreq > 22050) {\n                return 24000;\n            }\n            if (input_samplefreq > 16000) {\n                return 22050;\n            }\n            if (input_samplefreq > 12000) {\n                return 16000;\n            }\n            if (input_samplefreq > 11025) {\n                return 12000;\n            }\n            if (input_samplefreq > 8000) {\n                return 11025;\n            }\n            return 8000;\n        }\n        return suggested_samplefreq;\n    }\n\n    /**\n     * convert samp freq in Hz to index\n     */\n    function SmpFrqIndex(sample_freq, gpf) {\n        switch (sample_freq) {\n            case 44100:\n                gpf.version = 1;\n                return 0;\n            case 48000:\n                gpf.version = 1;\n                return 1;\n            case 32000:\n                gpf.version = 1;\n                return 2;\n            case 22050:\n                gpf.version = 0;\n                return 0;\n            case 24000:\n                gpf.version = 0;\n                return 1;\n            case 16000:\n                gpf.version = 0;\n                return 2;\n            case 11025:\n                gpf.version = 0;\n                return 0;\n            case 12000:\n                gpf.version = 0;\n                return 1;\n            case 8000:\n                gpf.version = 0;\n                return 2;\n            default:\n                gpf.version = 0;\n                return -1;\n        }\n    }\n\n    /**\n     * @param bRate\n     *            legal rates from 8 to 320\n     */\n    function FindNearestBitrate(bRate, version, samplerate) {\n        /* MPEG-1 or MPEG-2 LSF */\n        if (samplerate < 16000)\n            version = 2;\n\n        var bitrate = Tables_1.bitrate_table[version][1];\n\n        for (var i = 2; i <= 14; i++) {\n            if (Tables_1.bitrate_table[version][i] > 0) {\n                if (Math.abs(Tables_1.bitrate_table[version][i] - bRate) < Math\n                        .abs(bitrate - bRate))\n                    bitrate = Tables_1.bitrate_table[version][i];\n            }\n        }\n        return bitrate;\n    }\n\n    /**\n     * @param bRate\n     *            legal rates from 32 to 448 kbps\n     * @param version\n     *            MPEG-1 or MPEG-2/2.5 LSF\n     */\n    function BitrateIndex(bRate, version, samplerate) {\n        /* convert bitrate in kbps to index */\n        if (samplerate < 16000)\n            version = 2;\n        for (var i = 0; i <= 14; i++) {\n            if (Tables_1.bitrate_table[version][i] > 0) {\n                if (Tables_1.bitrate_table[version][i] == bRate) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    }\n\n    function optimum_bandwidth(lh, bitrate) {\n        /**\n         * <PRE>\n         *  Input:\n         *      bitrate     total bitrate in kbps\n         *\n         *   Output:\n         *      lowerlimit: best lowpass frequency limit for input filter in Hz\n         *      upperlimit: best highpass frequency limit for input filter in Hz\n         * </PRE>\n         */\n        var freq_map = [new BandPass(8, 2000),\n            new BandPass(16, 3700), new BandPass(24, 3900),\n            new BandPass(32, 5500), new BandPass(40, 7000),\n            new BandPass(48, 7500), new BandPass(56, 10000),\n            new BandPass(64, 11000), new BandPass(80, 13500),\n            new BandPass(96, 15100), new BandPass(112, 15600),\n            new BandPass(128, 17000), new BandPass(160, 17500),\n            new BandPass(192, 18600), new BandPass(224, 19400),\n            new BandPass(256, 19700), new BandPass(320, 20500)];\n\n        var table_index = self.nearestBitrateFullIndex(bitrate);\n        lh.lowerlimit = freq_map[table_index].lowpass;\n    }\n\n    function lame_init_params_ppflt(gfp) {\n        var gfc = gfp.internal_flags;\n        /***************************************************************/\n        /* compute info needed for polyphase filter (filter type==0, default) */\n        /***************************************************************/\n\n        var lowpass_band = 32;\n        var highpass_band = -1;\n\n        if (gfc.lowpass1 > 0) {\n            var minband = 999;\n            for (var band = 0; band <= 31; band++) {\n                var freq = (band / 31.0);\n                /* this band and above will be zeroed: */\n                if (freq >= gfc.lowpass2) {\n                    lowpass_band = Math.min(lowpass_band, band);\n                }\n                if (gfc.lowpass1 < freq && freq < gfc.lowpass2) {\n                    minband = Math.min(minband, band);\n                }\n            }\n\n            /*\n             * compute the *actual* transition band implemented by the polyphase\n             * filter\n             */\n            if (minband == 999) {\n                gfc.lowpass1 = (lowpass_band - .75) / 31.0;\n            } else {\n                gfc.lowpass1 = (minband - .75) / 31.0;\n            }\n            gfc.lowpass2 = lowpass_band / 31.0;\n        }\n\n        /*\n         * make sure highpass filter is within 90% of what the effective\n         * highpass frequency will be\n         */\n        if (gfc.highpass2 > 0) {\n            if (gfc.highpass2 < .9 * (.75 / 31.0)) {\n                gfc.highpass1 = 0;\n                gfc.highpass2 = 0;\n                System$2.err.println(\"Warning: highpass filter disabled.  \"\n                    + \"highpass frequency too small\\n\");\n            }\n        }\n\n        if (gfc.highpass2 > 0) {\n            var maxband = -1;\n            for (var band = 0; band <= 31; band++) {\n                var freq = band / 31.0;\n                /* this band and below will be zereod */\n                if (freq <= gfc.highpass1) {\n                    highpass_band = Math.max(highpass_band, band);\n                }\n                if (gfc.highpass1 < freq && freq < gfc.highpass2) {\n                    maxband = Math.max(maxband, band);\n                }\n            }\n            /*\n             * compute the *actual* transition band implemented by the polyphase\n             * filter\n             */\n            gfc.highpass1 = highpass_band / 31.0;\n            if (maxband == -1) {\n                gfc.highpass2 = (highpass_band + .75) / 31.0;\n            } else {\n                gfc.highpass2 = (maxband + .75) / 31.0;\n            }\n        }\n\n        for (var band = 0; band < 32; band++) {\n            var fc1, fc2;\n            var freq = band / 31.0;\n            if (gfc.highpass2 > gfc.highpass1) {\n                fc1 = filter_coef((gfc.highpass2 - freq)\n                    / (gfc.highpass2 - gfc.highpass1 + 1e-20));\n            } else {\n                fc1 = 1.0;\n            }\n            if (gfc.lowpass2 > gfc.lowpass1) {\n                fc2 = filter_coef((freq - gfc.lowpass1)\n                    / (gfc.lowpass2 - gfc.lowpass1 + 1e-20));\n            } else {\n                fc2 = 1.0;\n            }\n            gfc.amp_filter[band] = (fc1 * fc2);\n        }\n    }\n\n    function lame_init_qval(gfp) {\n        var gfc = gfp.internal_flags;\n\n        switch (gfp.quality) {\n            default:\n            case 9: /* no psymodel, no noise shaping */\n                gfc.psymodel = 0;\n                gfc.noise_shaping = 0;\n                gfc.noise_shaping_amp = 0;\n                gfc.noise_shaping_stop = 0;\n                gfc.use_best_huffman = 0;\n                gfc.full_outer_loop = 0;\n                break;\n\n            case 8:\n                gfp.quality = 7;\n            //$FALL-THROUGH$\n            case 7:\n                /*\n                 * use psymodel (for short block and m/s switching), but no noise\n                 * shapping\n                 */\n                gfc.psymodel = 1;\n                gfc.noise_shaping = 0;\n                gfc.noise_shaping_amp = 0;\n                gfc.noise_shaping_stop = 0;\n                gfc.use_best_huffman = 0;\n                gfc.full_outer_loop = 0;\n                break;\n\n            case 6:\n                gfc.psymodel = 1;\n                if (gfc.noise_shaping == 0)\n                    gfc.noise_shaping = 1;\n                gfc.noise_shaping_amp = 0;\n                gfc.noise_shaping_stop = 0;\n                if (gfc.subblock_gain == -1)\n                    gfc.subblock_gain = 1;\n                gfc.use_best_huffman = 0;\n                gfc.full_outer_loop = 0;\n                break;\n\n            case 5:\n                gfc.psymodel = 1;\n                if (gfc.noise_shaping == 0)\n                    gfc.noise_shaping = 1;\n                gfc.noise_shaping_amp = 0;\n                gfc.noise_shaping_stop = 0;\n                if (gfc.subblock_gain == -1)\n                    gfc.subblock_gain = 1;\n                gfc.use_best_huffman = 0;\n                gfc.full_outer_loop = 0;\n                break;\n\n            case 4:\n                gfc.psymodel = 1;\n                if (gfc.noise_shaping == 0)\n                    gfc.noise_shaping = 1;\n                gfc.noise_shaping_amp = 0;\n                gfc.noise_shaping_stop = 0;\n                if (gfc.subblock_gain == -1)\n                    gfc.subblock_gain = 1;\n                gfc.use_best_huffman = 1;\n                gfc.full_outer_loop = 0;\n                break;\n\n            case 3:\n                gfc.psymodel = 1;\n                if (gfc.noise_shaping == 0)\n                    gfc.noise_shaping = 1;\n                gfc.noise_shaping_amp = 1;\n                gfc.noise_shaping_stop = 1;\n                if (gfc.subblock_gain == -1)\n                    gfc.subblock_gain = 1;\n                gfc.use_best_huffman = 1;\n                gfc.full_outer_loop = 0;\n                break;\n\n            case 2:\n                gfc.psymodel = 1;\n                if (gfc.noise_shaping == 0)\n                    gfc.noise_shaping = 1;\n                if (gfc.substep_shaping == 0)\n                    gfc.substep_shaping = 2;\n                gfc.noise_shaping_amp = 1;\n                gfc.noise_shaping_stop = 1;\n                if (gfc.subblock_gain == -1)\n                    gfc.subblock_gain = 1;\n                gfc.use_best_huffman = 1;\n                /* inner loop */\n                gfc.full_outer_loop = 0;\n                break;\n\n            case 1:\n                gfc.psymodel = 1;\n                if (gfc.noise_shaping == 0)\n                    gfc.noise_shaping = 1;\n                if (gfc.substep_shaping == 0)\n                    gfc.substep_shaping = 2;\n                gfc.noise_shaping_amp = 2;\n                gfc.noise_shaping_stop = 1;\n                if (gfc.subblock_gain == -1)\n                    gfc.subblock_gain = 1;\n                gfc.use_best_huffman = 1;\n                gfc.full_outer_loop = 0;\n                break;\n\n            case 0:\n                gfc.psymodel = 1;\n                if (gfc.noise_shaping == 0)\n                    gfc.noise_shaping = 1;\n                if (gfc.substep_shaping == 0)\n                    gfc.substep_shaping = 2;\n                gfc.noise_shaping_amp = 2;\n                gfc.noise_shaping_stop = 1;\n                if (gfc.subblock_gain == -1)\n                    gfc.subblock_gain = 1;\n                gfc.use_best_huffman = 1;\n                /*\n                 * type 2 disabled because of it slowness, in favor of full outer\n                 * loop search\n                 */\n                gfc.full_outer_loop = 0;\n                /*\n                 * full outer loop search disabled because of audible distortions it\n                 * may generate rh 060629\n                 */\n                break;\n        }\n\n    }\n\n    function lame_init_bitstream(gfp) {\n        var gfc = gfp.internal_flags;\n        gfp.frameNum = 0;\n\n        if (gfp.write_id3tag_automatic) {\n            id3.id3tag_write_v2(gfp);\n        }\n        /* initialize histogram data optionally used by frontend */\n\n        gfc.bitrate_stereoMode_Hist = new_int_n$2([16, 4 + 1]);\n        gfc.bitrate_blockType_Hist = new_int_n$2([16, 4 + 1 + 1]);\n\n        gfc.PeakSample = 0.0;\n\n        /* Write initial VBR Header to bitstream and init VBR data */\n        if (gfp.bWriteVbrTag)\n            vbr.InitVbrTag(gfp);\n    }\n\n    /********************************************************************\n     * initialize internal params based on data in gf (globalflags struct filled\n     * in by calling program)\n     *\n     * OUTLINE:\n     *\n     * We first have some complex code to determine bitrate, output samplerate\n     * and mode. It is complicated by the fact that we allow the user to set\n     * some or all of these parameters, and need to determine best possible\n     * values for the rest of them:\n     *\n     * 1. set some CPU related flags 2. check if we are mono.mono, stereo.mono\n     * or stereo.stereo 3. compute bitrate and output samplerate: user may have\n     * set compression ratio user may have set a bitrate user may have set a\n     * output samplerate 4. set some options which depend on output samplerate\n     * 5. compute the actual compression ratio 6. set mode based on compression\n     * ratio\n     *\n     * The remaining code is much simpler - it just sets options based on the\n     * mode & compression ratio:\n     *\n     * set allow_diff_short based on mode select lowpass filter based on\n     * compression ratio & mode set the bitrate index, and min/max bitrates for\n     * VBR modes disable VBR tag if it is not appropriate initialize the\n     * bitstream initialize scalefac_band data set sideinfo_len (based on\n     * channels, CRC, out_samplerate) write an id3v2 tag into the bitstream\n     * write VBR tag into the bitstream set mpeg1/2 flag estimate the number of\n     * frames (based on a lot of data)\n     *\n     * now we set more flags: nspsytune: see code VBR modes see code CBR/ABR see\n     * code\n     *\n     * Finally, we set the algorithm flags based on the gfp.quality value\n     * lame_init_qval(gfp);\n     *\n     ********************************************************************/\n    this.lame_init_params = function (gfp) {\n        var gfc = gfp.internal_flags;\n\n        gfc.Class_ID = 0;\n        if (gfc.ATH == null)\n            gfc.ATH = new ATH_1();\n        if (gfc.PSY == null)\n            gfc.PSY = new PSY();\n        if (gfc.rgdata == null)\n            gfc.rgdata = new ReplayGain_1();\n\n        gfc.channels_in = gfp.num_channels;\n        if (gfc.channels_in == 1)\n            gfp.mode = MPEGMode.MONO;\n        gfc.channels_out = (gfp.mode == MPEGMode.MONO) ? 1 : 2;\n        gfc.mode_ext = Encoder_1.MPG_MD_MS_LR;\n        if (gfp.mode == MPEGMode.MONO)\n            gfp.force_ms = false;\n        /*\n         * don't allow forced mid/side stereo for mono output\n         */\n\n        if (gfp.VBR == VbrMode$2.vbr_off && gfp.VBR_mean_bitrate_kbps != 128\n            && gfp.brate == 0)\n            gfp.brate = gfp.VBR_mean_bitrate_kbps;\n\n        if (gfp.VBR == VbrMode$2.vbr_off || gfp.VBR == VbrMode$2.vbr_mtrh\n            || gfp.VBR == VbrMode$2.vbr_mt) {\n            /* these modes can handle free format condition */\n        } else {\n            gfp.free_format = false;\n            /* mode can't be mixed with free format */\n        }\n\n        if (gfp.VBR == VbrMode$2.vbr_off && gfp.brate == 0) {\n            /* no bitrate or compression ratio specified, use 11.025 */\n            if (BitStream_1.EQ(gfp.compression_ratio, 0))\n                gfp.compression_ratio = 11.025;\n            /*\n             * rate to compress a CD down to exactly 128000 bps\n             */\n        }\n\n        /* find bitrate if user specify a compression ratio */\n        if (gfp.VBR == VbrMode$2.vbr_off && gfp.compression_ratio > 0) {\n\n            if (gfp.out_samplerate == 0)\n                gfp.out_samplerate = map2MP3Frequency((int)(0.97 * gfp.in_samplerate));\n            /*\n             * round up with a margin of 3 %\n             */\n\n            /*\n             * choose a bitrate for the output samplerate which achieves\n             * specified compression ratio\n             */\n            gfp.brate = 0 | (gfp.out_samplerate * 16 * gfc.channels_out / (1.e3 * gfp.compression_ratio));\n\n            /* we need the version for the bitrate table look up */\n            gfc.samplerate_index = SmpFrqIndex(gfp.out_samplerate, gfp);\n\n            if (!gfp.free_format) /*\n             * for non Free Format find the nearest allowed\n             * bitrate\n             */\n                gfp.brate = FindNearestBitrate(gfp.brate, gfp.version,\n                    gfp.out_samplerate);\n        }\n\n        if (gfp.out_samplerate != 0) {\n            if (gfp.out_samplerate < 16000) {\n                gfp.VBR_mean_bitrate_kbps = Math.max(gfp.VBR_mean_bitrate_kbps,\n                    8);\n                gfp.VBR_mean_bitrate_kbps = Math.min(gfp.VBR_mean_bitrate_kbps,\n                    64);\n            } else if (gfp.out_samplerate < 32000) {\n                gfp.VBR_mean_bitrate_kbps = Math.max(gfp.VBR_mean_bitrate_kbps,\n                    8);\n                gfp.VBR_mean_bitrate_kbps = Math.min(gfp.VBR_mean_bitrate_kbps,\n                    160);\n            } else {\n                gfp.VBR_mean_bitrate_kbps = Math.max(gfp.VBR_mean_bitrate_kbps,\n                    32);\n                gfp.VBR_mean_bitrate_kbps = Math.min(gfp.VBR_mean_bitrate_kbps,\n                    320);\n            }\n        }\n\n        /****************************************************************/\n        /* if a filter has not been enabled, see if we should add one: */\n        /****************************************************************/\n        if (gfp.lowpassfreq == 0) {\n            var lowpass = 16000.;\n\n            switch (gfp.VBR) {\n                case VbrMode$2.vbr_off:\n                {\n                    var lh = new LowPassHighPass();\n                    optimum_bandwidth(lh, gfp.brate);\n                    lowpass = lh.lowerlimit;\n                    break;\n                }\n                case VbrMode$2.vbr_abr:\n                {\n                    var lh = new LowPassHighPass();\n                    optimum_bandwidth(lh, gfp.VBR_mean_bitrate_kbps);\n                    lowpass = lh.lowerlimit;\n                    break;\n                }\n                case VbrMode$2.vbr_rh:\n                {\n                    var x = [19500, 19000, 18600, 18000, 17500, 16000,\n                        15600, 14900, 12500, 10000, 3950];\n                    if (0 <= gfp.VBR_q && gfp.VBR_q <= 9) {\n                        var a = x[gfp.VBR_q], b = x[gfp.VBR_q + 1], m = gfp.VBR_q_frac;\n                        lowpass = linear_int(a, b, m);\n                    } else {\n                        lowpass = 19500;\n                    }\n                    break;\n                }\n                default:\n                {\n                    var x = [19500, 19000, 18500, 18000, 17500, 16500,\n                        15500, 14500, 12500, 9500, 3950];\n                    if (0 <= gfp.VBR_q && gfp.VBR_q <= 9) {\n                        var a = x[gfp.VBR_q], b = x[gfp.VBR_q + 1], m = gfp.VBR_q_frac;\n                        lowpass = linear_int(a, b, m);\n                    } else {\n                        lowpass = 19500;\n                    }\n                }\n            }\n            if (gfp.mode == MPEGMode.MONO\n                && (gfp.VBR == VbrMode$2.vbr_off || gfp.VBR == VbrMode$2.vbr_abr))\n                lowpass *= 1.5;\n\n            gfp.lowpassfreq = lowpass | 0;\n        }\n\n        if (gfp.out_samplerate == 0) {\n            if (2 * gfp.lowpassfreq > gfp.in_samplerate) {\n                gfp.lowpassfreq = gfp.in_samplerate / 2;\n            }\n            gfp.out_samplerate = optimum_samplefreq(gfp.lowpassfreq | 0,\n                gfp.in_samplerate);\n        }\n\n        gfp.lowpassfreq = Math.min(20500, gfp.lowpassfreq);\n        gfp.lowpassfreq = Math.min(gfp.out_samplerate / 2, gfp.lowpassfreq);\n\n        if (gfp.VBR == VbrMode$2.vbr_off) {\n            gfp.compression_ratio = gfp.out_samplerate * 16 * gfc.channels_out\n                / (1.e3 * gfp.brate);\n        }\n        if (gfp.VBR == VbrMode$2.vbr_abr) {\n            gfp.compression_ratio = gfp.out_samplerate * 16 * gfc.channels_out\n                / (1.e3 * gfp.VBR_mean_bitrate_kbps);\n        }\n\n        /*\n         * do not compute ReplayGain values and do not find the peak sample if\n         * we can't store them\n         */\n        if (!gfp.bWriteVbrTag) {\n            gfp.findReplayGain = false;\n            gfp.decode_on_the_fly = false;\n            gfc.findPeakSample = false;\n        }\n        gfc.findReplayGain = gfp.findReplayGain;\n        gfc.decode_on_the_fly = gfp.decode_on_the_fly;\n\n        if (gfc.decode_on_the_fly)\n            gfc.findPeakSample = true;\n\n        if (gfc.findReplayGain) {\n            if (ga.InitGainAnalysis(gfc.rgdata, gfp.out_samplerate) == GainAnalysis.INIT_GAIN_ANALYSIS_ERROR) {\n                gfp.internal_flags = null;\n                return -6;\n            }\n        }\n\n        if (gfc.decode_on_the_fly && !gfp.decode_only) {\n            if (gfc.hip != null) {\n                mpglib.hip_decode_exit(gfc.hip);\n            }\n            gfc.hip = mpglib.hip_decode_init();\n        }\n\n        gfc.mode_gr = gfp.out_samplerate <= 24000 ? 1 : 2;\n        /*\n         * Number of granules per frame\n         */\n        gfp.framesize = 576 * gfc.mode_gr;\n        gfp.encoder_delay = Encoder_1.ENCDELAY;\n\n        gfc.resample_ratio = gfp.in_samplerate / gfp.out_samplerate;\n\n        /**\n         * <PRE>\n         *  sample freq       bitrate     compression ratio\n         *     [kHz]      [kbps/channel]   for 16 bit input\n         *     44.1            56               12.6\n         *     44.1            64               11.025\n         *     44.1            80                8.82\n         *     22.05           24               14.7\n         *     22.05           32               11.025\n         *     22.05           40                8.82\n         *     16              16               16.0\n         *     16              24               10.667\n         * </PRE>\n         */\n        /**\n         * <PRE>\n         *  For VBR, take a guess at the compression_ratio.\n         *  For example:\n         *\n         *    VBR_q    compression     like\n         *     -        4.4         320 kbps/44 kHz\n         *   0...1      5.5         256 kbps/44 kHz\n         *     2        7.3         192 kbps/44 kHz\n         *     4        8.8         160 kbps/44 kHz\n         *     6       11           128 kbps/44 kHz\n         *     9       14.7          96 kbps\n         *\n         *  for lower bitrates, downsample with --resample\n         * </PRE>\n         */\n        switch (gfp.VBR) {\n            case VbrMode$2.vbr_mt:\n            case VbrMode$2.vbr_rh:\n            case VbrMode$2.vbr_mtrh:\n            {\n                /* numbers are a bit strange, but they determine the lowpass value */\n                var cmp = [5.7, 6.5, 7.3, 8.2, 10, 11.9, 13, 14,\n                    15, 16.5];\n                gfp.compression_ratio = cmp[gfp.VBR_q];\n            }\n                break;\n            case VbrMode$2.vbr_abr:\n                gfp.compression_ratio = gfp.out_samplerate * 16 * gfc.channels_out\n                    / (1.e3 * gfp.VBR_mean_bitrate_kbps);\n                break;\n            default:\n                gfp.compression_ratio = gfp.out_samplerate * 16 * gfc.channels_out\n                    / (1.e3 * gfp.brate);\n                break;\n        }\n\n        /*\n         * mode = -1 (not set by user) or mode = MONO (because of only 1 input\n         * channel). If mode has not been set, then select J-STEREO\n         */\n        if (gfp.mode == MPEGMode.NOT_SET) {\n            gfp.mode = MPEGMode.JOINT_STEREO;\n        }\n\n        /* apply user driven high pass filter */\n        if (gfp.highpassfreq > 0) {\n            gfc.highpass1 = 2. * gfp.highpassfreq;\n\n            if (gfp.highpasswidth >= 0)\n                gfc.highpass2 = 2. * (gfp.highpassfreq + gfp.highpasswidth);\n            else\n            /* 0% above on default */\n                gfc.highpass2 = (1 + 0.00) * 2. * gfp.highpassfreq;\n\n            gfc.highpass1 /= gfp.out_samplerate;\n            gfc.highpass2 /= gfp.out_samplerate;\n        } else {\n            gfc.highpass1 = 0;\n            gfc.highpass2 = 0;\n        }\n        /* apply user driven low pass filter */\n        if (gfp.lowpassfreq > 0) {\n            gfc.lowpass2 = 2. * gfp.lowpassfreq;\n            if (gfp.lowpasswidth >= 0) {\n                gfc.lowpass1 = 2. * (gfp.lowpassfreq - gfp.lowpasswidth);\n                if (gfc.lowpass1 < 0) /* has to be >= 0 */\n                    gfc.lowpass1 = 0;\n            } else { /* 0% below on default */\n                gfc.lowpass1 = (1 - 0.00) * 2. * gfp.lowpassfreq;\n            }\n            gfc.lowpass1 /= gfp.out_samplerate;\n            gfc.lowpass2 /= gfp.out_samplerate;\n        } else {\n            gfc.lowpass1 = 0;\n            gfc.lowpass2 = 0;\n        }\n\n        /**********************************************************************/\n        /* compute info needed for polyphase filter (filter type==0, default) */\n        /**********************************************************************/\n        lame_init_params_ppflt(gfp);\n        /*******************************************************\n         * samplerate and bitrate index\n         *******************************************************/\n        gfc.samplerate_index = SmpFrqIndex(gfp.out_samplerate, gfp);\n        if (gfc.samplerate_index < 0) {\n            gfp.internal_flags = null;\n            return -1;\n        }\n\n        if (gfp.VBR == VbrMode$2.vbr_off) {\n            if (gfp.free_format) {\n                gfc.bitrate_index = 0;\n            } else {\n                gfp.brate = FindNearestBitrate(gfp.brate, gfp.version,\n                    gfp.out_samplerate);\n                gfc.bitrate_index = BitrateIndex(gfp.brate, gfp.version,\n                    gfp.out_samplerate);\n                if (gfc.bitrate_index <= 0) {\n                    gfp.internal_flags = null;\n                    return -1;\n                }\n            }\n        } else {\n            gfc.bitrate_index = 1;\n        }\n\n        /* for CBR, we will write an \"info\" tag. */\n\n        if (gfp.analysis)\n            gfp.bWriteVbrTag = false;\n\n        /* some file options not allowed if output is: not specified or stdout */\n        if (gfc.pinfo != null)\n            gfp.bWriteVbrTag = false;\n        /* disable Xing VBR tag */\n\n        bs.init_bit_stream_w(gfc);\n\n        var j = gfc.samplerate_index + (3 * gfp.version) + 6\n            * (gfp.out_samplerate < 16000 ? 1 : 0);\n        for (var i = 0; i < Encoder_1.SBMAX_l + 1; i++)\n            gfc.scalefac_band.l[i] = qupvt.sfBandIndex[j].l[i];\n\n        for (var i = 0; i < Encoder_1.PSFB21 + 1; i++) {\n            var size = (gfc.scalefac_band.l[22] - gfc.scalefac_band.l[21])\n                / Encoder_1.PSFB21;\n            var start = gfc.scalefac_band.l[21] + i * size;\n            gfc.scalefac_band.psfb21[i] = start;\n        }\n        gfc.scalefac_band.psfb21[Encoder_1.PSFB21] = 576;\n\n        for (var i = 0; i < Encoder_1.SBMAX_s + 1; i++)\n            gfc.scalefac_band.s[i] = qupvt.sfBandIndex[j].s[i];\n\n        for (var i = 0; i < Encoder_1.PSFB12 + 1; i++) {\n            var size = (gfc.scalefac_band.s[13] - gfc.scalefac_band.s[12])\n                / Encoder_1.PSFB12;\n            var start = gfc.scalefac_band.s[12] + i * size;\n            gfc.scalefac_band.psfb12[i] = start;\n        }\n        gfc.scalefac_band.psfb12[Encoder_1.PSFB12] = 192;\n        /* determine the mean bitrate for main data */\n        if (gfp.version == 1) /* MPEG 1 */\n            gfc.sideinfo_len = (gfc.channels_out == 1) ? 4 + 17 : 4 + 32;\n        else\n        /* MPEG 2 */\n            gfc.sideinfo_len = (gfc.channels_out == 1) ? 4 + 9 : 4 + 17;\n\n        if (gfp.error_protection)\n            gfc.sideinfo_len += 2;\n\n        lame_init_bitstream(gfp);\n\n        gfc.Class_ID = LAME_ID;\n\n        {\n            var k;\n\n            for (k = 0; k < 19; k++)\n                gfc.nsPsy.pefirbuf[k] = 700 * gfc.mode_gr * gfc.channels_out;\n\n            if (gfp.ATHtype == -1)\n                gfp.ATHtype = 4;\n        }\n        assert$2(gfp.VBR_q <= 9);\n        assert$2(gfp.VBR_q >= 0);\n\n        switch (gfp.VBR) {\n\n            case VbrMode$2.vbr_mt:\n                gfp.VBR = VbrMode$2.vbr_mtrh;\n            //$FALL-THROUGH$\n            case VbrMode$2.vbr_mtrh:\n            {\n                if (gfp.useTemporal == null) {\n                    gfp.useTemporal = false;\n                    /* off by default for this VBR mode */\n                }\n\n                p.apply_preset(gfp, 500 - (gfp.VBR_q * 10), 0);\n                /**\n                 * <PRE>\n                 *   The newer VBR code supports only a limited\n                 *     subset of quality levels:\n                 *     9-5=5 are the same, uses x^3/4 quantization\n                 *   4-0=0 are the same  5 plus best huffman divide code\n                 * </PRE>\n                 */\n                if (gfp.quality < 0)\n                    gfp.quality = LAME_DEFAULT_QUALITY;\n                if (gfp.quality < 5)\n                    gfp.quality = 0;\n                if (gfp.quality > 5)\n                    gfp.quality = 5;\n\n                gfc.PSY.mask_adjust = gfp.maskingadjust;\n                gfc.PSY.mask_adjust_short = gfp.maskingadjust_short;\n\n                /*\n                 * sfb21 extra only with MPEG-1 at higher sampling rates\n                 */\n                if (gfp.experimentalY)\n                    gfc.sfb21_extra = false;\n                else\n                    gfc.sfb21_extra = (gfp.out_samplerate > 44000);\n\n                gfc.iteration_loop = new VBRNewIterationLoop(qu);\n                break;\n\n            }\n            case VbrMode$2.vbr_rh:\n            {\n\n                p.apply_preset(gfp, 500 - (gfp.VBR_q * 10), 0);\n\n                gfc.PSY.mask_adjust = gfp.maskingadjust;\n                gfc.PSY.mask_adjust_short = gfp.maskingadjust_short;\n\n                /*\n                 * sfb21 extra only with MPEG-1 at higher sampling rates\n                 */\n                if (gfp.experimentalY)\n                    gfc.sfb21_extra = false;\n                else\n                    gfc.sfb21_extra = (gfp.out_samplerate > 44000);\n\n                /*\n                 * VBR needs at least the output of GPSYCHO, so we have to garantee\n                 * that by setting a minimum quality level, actually level 6 does\n                 * it. down to level 6\n                 */\n                if (gfp.quality > 6)\n                    gfp.quality = 6;\n\n                if (gfp.quality < 0)\n                    gfp.quality = LAME_DEFAULT_QUALITY;\n\n                gfc.iteration_loop = new VBROldIterationLoop(qu);\n                break;\n            }\n\n            default: /* cbr/abr */\n            {\n                var vbrmode;\n\n                /*\n                 * no sfb21 extra with CBR code\n                 */\n                gfc.sfb21_extra = false;\n\n                if (gfp.quality < 0)\n                    gfp.quality = LAME_DEFAULT_QUALITY;\n\n                vbrmode = gfp.VBR;\n                if (vbrmode == VbrMode$2.vbr_off)\n                    gfp.VBR_mean_bitrate_kbps = gfp.brate;\n                /* second, set parameters depending on bitrate */\n                p.apply_preset(gfp, gfp.VBR_mean_bitrate_kbps, 0);\n                gfp.VBR = vbrmode;\n\n                gfc.PSY.mask_adjust = gfp.maskingadjust;\n                gfc.PSY.mask_adjust_short = gfp.maskingadjust_short;\n\n                if (vbrmode == VbrMode$2.vbr_off) {\n                    gfc.iteration_loop = new CBRNewIterationLoop_1(qu);\n                } else {\n                    gfc.iteration_loop = new ABRIterationLoop(qu);\n                }\n                break;\n            }\n        }\n        assert$2(gfp.scale >= 0);\n        /* initialize default values common for all modes */\n\n        if (gfp.VBR != VbrMode$2.vbr_off) { /* choose a min/max bitrate for VBR */\n            /* if the user didn't specify VBR_max_bitrate: */\n            gfc.VBR_min_bitrate = 1;\n            /*\n             * default: allow 8 kbps (MPEG-2) or 32 kbps (MPEG-1)\n             */\n            gfc.VBR_max_bitrate = 14;\n            /*\n             * default: allow 160 kbps (MPEG-2) or 320 kbps (MPEG-1)\n             */\n            if (gfp.out_samplerate < 16000)\n                gfc.VBR_max_bitrate = 8;\n            /* default: allow 64 kbps (MPEG-2.5) */\n            if (gfp.VBR_min_bitrate_kbps != 0) {\n                gfp.VBR_min_bitrate_kbps = FindNearestBitrate(\n                    gfp.VBR_min_bitrate_kbps, gfp.version,\n                    gfp.out_samplerate);\n                gfc.VBR_min_bitrate = BitrateIndex(gfp.VBR_min_bitrate_kbps,\n                    gfp.version, gfp.out_samplerate);\n                if (gfc.VBR_min_bitrate < 0)\n                    return -1;\n            }\n            if (gfp.VBR_max_bitrate_kbps != 0) {\n                gfp.VBR_max_bitrate_kbps = FindNearestBitrate(\n                    gfp.VBR_max_bitrate_kbps, gfp.version,\n                    gfp.out_samplerate);\n                gfc.VBR_max_bitrate = BitrateIndex(gfp.VBR_max_bitrate_kbps,\n                    gfp.version, gfp.out_samplerate);\n                if (gfc.VBR_max_bitrate < 0)\n                    return -1;\n            }\n            gfp.VBR_min_bitrate_kbps = Tables_1.bitrate_table[gfp.version][gfc.VBR_min_bitrate];\n            gfp.VBR_max_bitrate_kbps = Tables_1.bitrate_table[gfp.version][gfc.VBR_max_bitrate];\n            gfp.VBR_mean_bitrate_kbps = Math.min(\n                Tables_1.bitrate_table[gfp.version][gfc.VBR_max_bitrate],\n                gfp.VBR_mean_bitrate_kbps);\n            gfp.VBR_mean_bitrate_kbps = Math.max(\n                Tables_1.bitrate_table[gfp.version][gfc.VBR_min_bitrate],\n                gfp.VBR_mean_bitrate_kbps);\n        }\n\n        /* just another daily changing developer switch */\n        if (gfp.tune) {\n            gfc.PSY.mask_adjust += gfp.tune_value_a;\n            gfc.PSY.mask_adjust_short += gfp.tune_value_a;\n        }\n\n        /* initialize internal qval settings */\n        lame_init_qval(gfp);\n        assert$2(gfp.scale >= 0);\n        /*\n         * automatic ATH adjustment on\n         */\n        if (gfp.athaa_type < 0)\n            gfc.ATH.useAdjust = 3;\n        else\n            gfc.ATH.useAdjust = gfp.athaa_type;\n\n        /* initialize internal adaptive ATH settings -jd */\n        gfc.ATH.aaSensitivityP = Math.pow(10.0, gfp.athaa_sensitivity\n            / -10.0);\n\n        if (gfp.short_blocks == null) {\n            gfp.short_blocks = ShortBlock$2.short_block_allowed;\n        }\n\n        /*\n         * Note Jan/2003: Many hardware decoders cannot handle short blocks in\n         * regular stereo mode unless they are coupled (same type in both\n         * channels) it is a rare event (1 frame per min. or so) that LAME would\n         * use uncoupled short blocks, so lets turn them off until we decide how\n         * to handle this. No other encoders allow uncoupled short blocks, even\n         * though it is in the standard.\n         */\n        /*\n         * rh 20040217: coupling makes no sense for mono and dual-mono streams\n         */\n        if (gfp.short_blocks == ShortBlock$2.short_block_allowed\n            && (gfp.mode == MPEGMode.JOINT_STEREO || gfp.mode == MPEGMode.STEREO)) {\n            gfp.short_blocks = ShortBlock$2.short_block_coupled;\n        }\n\n        if (gfp.quant_comp < 0)\n            gfp.quant_comp = 1;\n        if (gfp.quant_comp_short < 0)\n            gfp.quant_comp_short = 0;\n\n        if (gfp.msfix < 0)\n            gfp.msfix = 0;\n\n        /* select psychoacoustic model */\n        gfp.exp_nspsytune = gfp.exp_nspsytune | 1;\n\n        if (gfp.internal_flags.nsPsy.attackthre < 0)\n            gfp.internal_flags.nsPsy.attackthre = PsyModel_1.NSATTACKTHRE;\n        if (gfp.internal_flags.nsPsy.attackthre_s < 0)\n            gfp.internal_flags.nsPsy.attackthre_s = PsyModel_1.NSATTACKTHRE_S;\n\n        assert$2(gfp.scale >= 0);\n\n        if (gfp.scale < 0)\n            gfp.scale = 1;\n\n        if (gfp.ATHtype < 0)\n            gfp.ATHtype = 4;\n\n        if (gfp.ATHcurve < 0)\n            gfp.ATHcurve = 4;\n\n        if (gfp.athaa_loudapprox < 0)\n            gfp.athaa_loudapprox = 2;\n\n        if (gfp.interChRatio < 0)\n            gfp.interChRatio = 0;\n\n        if (gfp.useTemporal == null)\n            gfp.useTemporal = true;\n        /* on by default */\n\n        /*\n         * padding method as described in\n         * \"MPEG-Layer3 / Bitstream Syntax and Decoding\" by Martin Sieler, Ralph\n         * Sperschneider\n         *\n         * note: there is no padding for the very first frame\n         *\n         * Robert Hegemann 2000-06-22\n         */\n        gfc.slot_lag = gfc.frac_SpF = 0;\n        if (gfp.VBR == VbrMode$2.vbr_off)\n            gfc.slot_lag = gfc.frac_SpF = (((gfp.version + 1) * 72000 * gfp.brate) % gfp.out_samplerate) | 0;\n\n        qupvt.iteration_init(gfp);\n        psy.psymodel_init(gfp);\n        assert$2(gfp.scale >= 0);\n        return 0;\n    };\n\n    function update_inbuffer_size(gfc, nsamples) {\n        if (gfc.in_buffer_0 == null || gfc.in_buffer_nsamples < nsamples) {\n            gfc.in_buffer_0 = new_float$2(nsamples);\n            gfc.in_buffer_1 = new_float$2(nsamples);\n            gfc.in_buffer_nsamples = nsamples;\n        }\n    }\n\n    this.lame_encode_flush = function (gfp, mp3buffer, mp3bufferPos, mp3buffer_size) {\n        var gfc = gfp.internal_flags;\n        var buffer = new_short_n$1([2, 1152]);\n        var imp3 = 0, mp3count, mp3buffer_size_remaining;\n\n        /*\n         * we always add POSTDELAY=288 padding to make sure granule with real\n         * data can be complety decoded (because of 50% overlap with next\n         * granule\n         */\n        var end_padding;\n        var frames_left;\n        var samples_to_encode = gfc.mf_samples_to_encode - Encoder_1.POSTDELAY;\n        var mf_needed = calcNeeded(gfp);\n\n        /* Was flush already called? */\n        if (gfc.mf_samples_to_encode < 1) {\n            return 0;\n        }\n        mp3count = 0;\n\n        if (gfp.in_samplerate != gfp.out_samplerate) {\n            /*\n             * delay due to resampling; needs to be fixed, if resampling code\n             * gets changed\n             */\n            samples_to_encode += 16. * gfp.out_samplerate / gfp.in_samplerate;\n        }\n        end_padding = gfp.framesize - (samples_to_encode % gfp.framesize);\n        if (end_padding < 576)\n            end_padding += gfp.framesize;\n        gfp.encoder_padding = end_padding;\n\n        frames_left = (samples_to_encode + end_padding) / gfp.framesize;\n\n        /*\n         * send in a frame of 0 padding until all internal sample buffers are\n         * flushed\n         */\n        while (frames_left > 0 && imp3 >= 0) {\n            var bunch = mf_needed - gfc.mf_size;\n            var frame_num = gfp.frameNum;\n\n            bunch *= gfp.in_samplerate;\n            bunch /= gfp.out_samplerate;\n            if (bunch > 1152)\n                bunch = 1152;\n            if (bunch < 1)\n                bunch = 1;\n\n            mp3buffer_size_remaining = mp3buffer_size - mp3count;\n\n            /* if user specifed buffer size = 0, dont check size */\n            if (mp3buffer_size == 0)\n                mp3buffer_size_remaining = 0;\n\n            imp3 = this.lame_encode_buffer(gfp, buffer[0], buffer[1], bunch,\n                mp3buffer, mp3bufferPos, mp3buffer_size_remaining);\n\n            mp3bufferPos += imp3;\n            mp3count += imp3;\n            frames_left -= (frame_num != gfp.frameNum) ? 1 : 0;\n        }\n        /*\n         * Set gfc.mf_samples_to_encode to 0, so we may detect and break loops\n         * calling it more than once in a row.\n         */\n        gfc.mf_samples_to_encode = 0;\n\n        if (imp3 < 0) {\n            /* some type of fatal error */\n            return imp3;\n        }\n\n        mp3buffer_size_remaining = mp3buffer_size - mp3count;\n        /* if user specifed buffer size = 0, dont check size */\n        if (mp3buffer_size == 0)\n            mp3buffer_size_remaining = 0;\n\n        /* mp3 related stuff. bit buffer might still contain some mp3 data */\n        bs.flush_bitstream(gfp);\n        imp3 = bs.copy_buffer(gfc, mp3buffer, mp3bufferPos,\n            mp3buffer_size_remaining, 1);\n        if (imp3 < 0) {\n            /* some type of fatal error */\n            return imp3;\n        }\n        mp3bufferPos += imp3;\n        mp3count += imp3;\n        mp3buffer_size_remaining = mp3buffer_size - mp3count;\n        /* if user specifed buffer size = 0, dont check size */\n        if (mp3buffer_size == 0)\n            mp3buffer_size_remaining = 0;\n\n        if (gfp.write_id3tag_automatic) {\n            /* write a id3 tag to the bitstream */\n            id3.id3tag_write_v1(gfp);\n\n            imp3 = bs.copy_buffer(gfc, mp3buffer, mp3bufferPos,\n                mp3buffer_size_remaining, 0);\n\n            if (imp3 < 0) {\n                return imp3;\n            }\n            mp3count += imp3;\n        }\n        return mp3count;\n    };\n\n    this.lame_encode_buffer = function (gfp, buffer_l, buffer_r, nsamples, mp3buf, mp3bufPos, mp3buf_size) {\n        var gfc = gfp.internal_flags;\n        var in_buffer = [null, null];\n\n        if (gfc.Class_ID != LAME_ID)\n            return -3;\n\n        if (nsamples == 0)\n            return 0;\n\n        update_inbuffer_size(gfc, nsamples);\n\n        in_buffer[0] = gfc.in_buffer_0;\n        in_buffer[1] = gfc.in_buffer_1;\n\n        /* make a copy of input buffer, changing type to sample_t */\n        for (var i = 0; i < nsamples; i++) {\n            in_buffer[0][i] = buffer_l[i];\n            if (gfc.channels_in > 1)\n                in_buffer[1][i] = buffer_r[i];\n        }\n\n        return lame_encode_buffer_sample(gfp, in_buffer[0], in_buffer[1],\n            nsamples, mp3buf, mp3bufPos, mp3buf_size);\n    };\n\n    function calcNeeded(gfp) {\n        var mf_needed = Encoder_1.BLKSIZE + gfp.framesize - Encoder_1.FFTOFFSET;\n        /*\n         * amount needed for FFT\n         */\n        mf_needed = Math.max(mf_needed, 512 + gfp.framesize - 32);\n        assert$2(LameInternalFlags_1.MFSIZE >= mf_needed);\n\n        return mf_needed;\n    }\n\n    function lame_encode_buffer_sample(gfp, buffer_l, buffer_r, nsamples, mp3buf, mp3bufPos, mp3buf_size) {\n        var gfc = gfp.internal_flags;\n        var mp3size = 0, ret, i, ch, mf_needed;\n        var mp3out;\n        var mfbuf = [null, null];\n        var in_buffer = [null, null];\n\n        if (gfc.Class_ID != LAME_ID)\n            return -3;\n\n        if (nsamples == 0)\n            return 0;\n\n        /* copy out any tags that may have been written into bitstream */\n        mp3out = bs.copy_buffer(gfc, mp3buf, mp3bufPos, mp3buf_size, 0);\n        if (mp3out < 0)\n            return mp3out;\n        /* not enough buffer space */\n        mp3bufPos += mp3out;\n        mp3size += mp3out;\n\n        in_buffer[0] = buffer_l;\n        in_buffer[1] = buffer_r;\n\n        /* Apply user defined re-scaling */\n\n        /* user selected scaling of the samples */\n        if (BitStream_1.NEQ(gfp.scale, 0) && BitStream_1.NEQ(gfp.scale, 1.0)) {\n            for (i = 0; i < nsamples; ++i) {\n                in_buffer[0][i] *= gfp.scale;\n                if (gfc.channels_out == 2)\n                    in_buffer[1][i] *= gfp.scale;\n            }\n        }\n\n        /* user selected scaling of the channel 0 (left) samples */\n        if (BitStream_1.NEQ(gfp.scale_left, 0)\n            && BitStream_1.NEQ(gfp.scale_left, 1.0)) {\n            for (i = 0; i < nsamples; ++i) {\n                in_buffer[0][i] *= gfp.scale_left;\n            }\n        }\n\n        /* user selected scaling of the channel 1 (right) samples */\n        if (BitStream_1.NEQ(gfp.scale_right, 0)\n            && BitStream_1.NEQ(gfp.scale_right, 1.0)) {\n            for (i = 0; i < nsamples; ++i) {\n                in_buffer[1][i] *= gfp.scale_right;\n            }\n        }\n\n        /* Downsample to Mono if 2 channels in and 1 channel out */\n        if (gfp.num_channels == 2 && gfc.channels_out == 1) {\n            for (i = 0; i < nsamples; ++i) {\n                in_buffer[0][i] = 0.5 * ( in_buffer[0][i] + in_buffer[1][i]);\n                in_buffer[1][i] = 0.0;\n            }\n        }\n\n        mf_needed = calcNeeded(gfp);\n\n        mfbuf[0] = gfc.mfbuf[0];\n        mfbuf[1] = gfc.mfbuf[1];\n\n        var in_bufferPos = 0;\n        while (nsamples > 0) {\n            var in_buffer_ptr = [null, null];\n            var n_in = 0;\n            /* number of input samples processed with fill_buffer */\n            var n_out = 0;\n            /* number of samples output with fill_buffer */\n            /* n_in <> n_out if we are resampling */\n\n            in_buffer_ptr[0] = in_buffer[0];\n            in_buffer_ptr[1] = in_buffer[1];\n            /* copy in new samples into mfbuf, with resampling */\n            var inOut = new InOut();\n            fill_buffer(gfp, mfbuf, in_buffer_ptr, in_bufferPos, nsamples,\n                inOut);\n            n_in = inOut.n_in;\n            n_out = inOut.n_out;\n\n            /* compute ReplayGain of resampled input if requested */\n            if (gfc.findReplayGain && !gfc.decode_on_the_fly)\n                if (ga.AnalyzeSamples(gfc.rgdata, mfbuf[0], gfc.mf_size,\n                        mfbuf[1], gfc.mf_size, n_out, gfc.channels_out) == GainAnalysis.GAIN_ANALYSIS_ERROR)\n                    return -6;\n\n            /* update in_buffer counters */\n            nsamples -= n_in;\n            in_bufferPos += n_in;\n            if (gfc.channels_out == 2)\n                ;// in_bufferPos += n_in;\n\n            /* update mfbuf[] counters */\n            gfc.mf_size += n_out;\n            assert$2(gfc.mf_size <= LameInternalFlags_1.MFSIZE);\n\n            /*\n             * lame_encode_flush may have set gfc.mf_sample_to_encode to 0 so we\n             * have to reinitialize it here when that happened.\n             */\n            if (gfc.mf_samples_to_encode < 1) {\n                gfc.mf_samples_to_encode = Encoder_1.ENCDELAY + Encoder_1.POSTDELAY;\n            }\n            gfc.mf_samples_to_encode += n_out;\n\n            if (gfc.mf_size >= mf_needed) {\n                /* encode the frame. */\n                /* mp3buf = pointer to current location in buffer */\n                /* mp3buf_size = size of original mp3 output buffer */\n                /* = 0 if we should not worry about the */\n                /* buffer size because calling program is */\n                /* to lazy to compute it */\n                /* mp3size = size of data written to buffer so far */\n                /* mp3buf_size-mp3size = amount of space avalable */\n\n                var buf_size = mp3buf_size - mp3size;\n                if (mp3buf_size == 0)\n                    buf_size = 0;\n\n                ret = lame_encode_frame(gfp, mfbuf[0], mfbuf[1], mp3buf,\n                    mp3bufPos, buf_size);\n\n                if (ret < 0)\n                    return ret;\n                mp3bufPos += ret;\n                mp3size += ret;\n\n                /* shift out old samples */\n                gfc.mf_size -= gfp.framesize;\n                gfc.mf_samples_to_encode -= gfp.framesize;\n                for (ch = 0; ch < gfc.channels_out; ch++)\n                    for (i = 0; i < gfc.mf_size; i++)\n                        mfbuf[ch][i] = mfbuf[ch][i + gfp.framesize];\n            }\n        }\n        assert$2(nsamples == 0);\n\n        return mp3size;\n    }\n\n    function lame_encode_frame(gfp, inbuf_l, inbuf_r, mp3buf, mp3bufPos, mp3buf_size) {\n        var ret = self.enc.lame_encode_mp3_frame(gfp, inbuf_l, inbuf_r, mp3buf,\n            mp3bufPos, mp3buf_size);\n        gfp.frameNum++;\n        return ret;\n    }\n\n    function InOut() {\n        this.n_in = 0;\n        this.n_out = 0;\n    }\n\n\n    function NumUsed() {\n        this.num_used = 0;\n    }\n\n    /**\n     * Greatest common divisor.\n     * <p>\n     * Joint work of Euclid and M. Hendry\n     */\n    function gcd(i, j) {\n        return j != 0 ? gcd(j, i % j) : i;\n    }\n\n    /**\n     * Resampling via FIR filter, blackman window.\n     */\n    function blackman(x, fcn, l) {\n        /*\n         * This algorithm from: SIGNAL PROCESSING ALGORITHMS IN FORTRAN AND C\n         * S.D. Stearns and R.A. David, Prentice-Hall, 1992\n         */\n        var wcn = (Math.PI * fcn);\n\n        x /= l;\n        if (x < 0)\n            x = 0;\n        if (x > 1)\n            x = 1;\n        var x2 = x - .5;\n\n        var bkwn = 0.42 - 0.5 * Math.cos(2 * x * Math.PI) + 0.08 * Math.cos(4 * x * Math.PI);\n        if (Math.abs(x2) < 1e-9)\n            return (wcn / Math.PI);\n        else\n            return (bkwn * Math.sin(l * wcn * x2) / (Math.PI * l * x2));\n    }\n\n    function fill_buffer_resample(gfp, outbuf, outbufPos, desired_len, inbuf, in_bufferPos, len, num_used, ch) {\n        var gfc = gfp.internal_flags;\n        var i, j = 0, k;\n        /* number of convolution functions to pre-compute */\n        var bpc = gfp.out_samplerate\n            / gcd(gfp.out_samplerate, gfp.in_samplerate);\n        if (bpc > LameInternalFlags_1.BPC)\n            bpc = LameInternalFlags_1.BPC;\n\n        var intratio = (Math.abs(gfc.resample_ratio\n            - Math.floor(.5 + gfc.resample_ratio)) < .0001) ? 1 : 0;\n        var fcn = 1.00 / gfc.resample_ratio;\n        if (fcn > 1.00)\n            fcn = 1.00;\n        var filter_l = 31;\n        if (0 == filter_l % 2)\n            --filter_l;\n        /* must be odd */\n        filter_l += intratio;\n        /* unless resample_ratio=int, it must be even */\n\n        var BLACKSIZE = filter_l + 1;\n        /* size of data needed for FIR */\n\n        if (gfc.fill_buffer_resample_init == 0) {\n            gfc.inbuf_old[0] = new_float$2(BLACKSIZE);\n            gfc.inbuf_old[1] = new_float$2(BLACKSIZE);\n            for (i = 0; i <= 2 * bpc; ++i)\n                gfc.blackfilt[i] = new_float$2(BLACKSIZE);\n\n            gfc.itime[0] = 0;\n            gfc.itime[1] = 0;\n\n            /* precompute blackman filter coefficients */\n            for (j = 0; j <= 2 * bpc; j++) {\n                var sum = 0.;\n                var offset = (j - bpc) / (2. * bpc);\n                for (i = 0; i <= filter_l; i++)\n                    sum += gfc.blackfilt[j][i] = blackman(i - offset, fcn,\n                        filter_l);\n                for (i = 0; i <= filter_l; i++)\n                    gfc.blackfilt[j][i] /= sum;\n            }\n            gfc.fill_buffer_resample_init = 1;\n        }\n\n        var inbuf_old = gfc.inbuf_old[ch];\n\n        /* time of j'th element in inbuf = itime + j/ifreq; */\n        /* time of k'th element in outbuf = j/ofreq */\n        for (k = 0; k < desired_len; k++) {\n            var time0;\n            var joff;\n\n            time0 = k * gfc.resample_ratio;\n            /* time of k'th output sample */\n            j = 0 | Math.floor(time0 - gfc.itime[ch]);\n\n            /* check if we need more input data */\n            if ((filter_l + j - filter_l / 2) >= len)\n                break;\n\n            /* blackman filter. by default, window centered at j+.5(filter_l%2) */\n            /* but we want a window centered at time0. */\n            var offset = (time0 - gfc.itime[ch] - (j + .5 * (filter_l % 2)));\n            assert$2(Math.abs(offset) <= .501);\n\n            /* find the closest precomputed window for this offset: */\n            joff = 0 | Math.floor((offset * 2 * bpc) + bpc + .5);\n            var xvalue = 0.;\n            for (i = 0; i <= filter_l; ++i) {\n                var j2 = i + j - filter_l / 2;\n                var y;\n                assert$2(j2 < len);\n                assert$2(j2 + BLACKSIZE >= 0);\n                y = (j2 < 0) ? inbuf_old[BLACKSIZE + j2] : inbuf[in_bufferPos\n                + j2];\n                xvalue += y * gfc.blackfilt[joff][i];\n            }\n            outbuf[outbufPos + k] = xvalue;\n        }\n\n        /* k = number of samples added to outbuf */\n        /* last k sample used data from [j-filter_l/2,j+filter_l-filter_l/2] */\n\n        /* how many samples of input data were used: */\n        num_used.num_used = Math.min(len, filter_l + j - filter_l / 2);\n\n        /*\n         * adjust our input time counter. Incriment by the number of samples\n         * used, then normalize so that next output sample is at time 0, next\n         * input buffer is at time itime[ch]\n         */\n        gfc.itime[ch] += num_used.num_used - k * gfc.resample_ratio;\n\n        /* save the last BLACKSIZE samples into the inbuf_old buffer */\n        if (num_used.num_used >= BLACKSIZE) {\n            for (i = 0; i < BLACKSIZE; i++)\n                inbuf_old[i] = inbuf[in_bufferPos + num_used.num_used + i\n                - BLACKSIZE];\n        } else {\n            /* shift in num_used.num_used samples into inbuf_old */\n            var n_shift = BLACKSIZE - num_used.num_used;\n            /*\n             * number of samples to\n             * shift\n             */\n\n            /*\n             * shift n_shift samples by num_used.num_used, to make room for the\n             * num_used new samples\n             */\n            for (i = 0; i < n_shift; ++i)\n                inbuf_old[i] = inbuf_old[i + num_used.num_used];\n\n            /* shift in the num_used.num_used samples */\n            for (j = 0; i < BLACKSIZE; ++i, ++j)\n                inbuf_old[i] = inbuf[in_bufferPos + j];\n\n            assert$2(j == num_used.num_used);\n        }\n        return k;\n        /* return the number samples created at the new samplerate */\n    }\n\n    function fill_buffer(gfp, mfbuf, in_buffer, in_bufferPos, nsamples, io) {\n        var gfc = gfp.internal_flags;\n\n        /* copy in new samples into mfbuf, with resampling if necessary */\n        if ((gfc.resample_ratio < .9999) || (gfc.resample_ratio > 1.0001)) {\n            for (var ch = 0; ch < gfc.channels_out; ch++) {\n                var numUsed = new NumUsed();\n                io.n_out = fill_buffer_resample(gfp, mfbuf[ch], gfc.mf_size,\n                    gfp.framesize, in_buffer[ch], in_bufferPos, nsamples,\n                    numUsed, ch);\n                io.n_in = numUsed.num_used;\n            }\n        } else {\n            io.n_out = Math.min(gfp.framesize, nsamples);\n            io.n_in = io.n_out;\n            for (var i = 0; i < io.n_out; ++i) {\n                mfbuf[0][gfc.mf_size + i] = in_buffer[0][in_bufferPos + i];\n                if (gfc.channels_out == 2)\n                    mfbuf[1][gfc.mf_size + i] = in_buffer[1][in_bufferPos + i];\n            }\n        }\n    }\n\n}\n\nvar Lame_1 = Lame$1;\n\nvar VbrMode$20 = common.VbrMode;\nfunction Presets$1() {\n    function VBRPresets(qual, comp, compS,\n                        y, shThreshold, shThresholdS,\n                        adj, adjShort, lower,\n                        curve, sens, inter,\n                        joint, mod, fix) {\n        this.vbr_q = qual;\n        this.quant_comp = comp;\n        this.quant_comp_s = compS;\n        this.expY = y;\n        this.st_lrm = shThreshold;\n        this.st_s = shThresholdS;\n        this.masking_adj = adj;\n        this.masking_adj_short = adjShort;\n        this.ath_lower = lower;\n        this.ath_curve = curve;\n        this.ath_sensitivity = sens;\n        this.interch = inter;\n        this.safejoint = joint;\n        this.sfb21mod = mod;\n        this.msfix = fix;\n    }\n\n    function ABRPresets(kbps, comp, compS,\n                        joint, fix, shThreshold,\n                        shThresholdS, bass, sc,\n                        mask, lower, curve,\n                        interCh, sfScale) {\n        this.quant_comp = comp;\n        this.quant_comp_s = compS;\n        this.safejoint = joint;\n        this.nsmsfix = fix;\n        this.st_lrm = shThreshold;\n        this.st_s = shThresholdS;\n        this.nsbass = bass;\n        this.scale = sc;\n        this.masking_adj = mask;\n        this.ath_lower = lower;\n        this.ath_curve = curve;\n        this.interch = interCh;\n        this.sfscale = sfScale;\n    }\n\n    var lame;\n\n    this.setModules = function (_lame) {\n        lame = _lame;\n    };\n\n    /**\n     * <PRE>\n     * Switch mappings for VBR mode VBR_RH\n     *             vbr_q  qcomp_l  qcomp_s  expY  st_lrm   st_s  mask adj_l  adj_s  ath_lower  ath_curve  ath_sens  interChR  safejoint sfb21mod  msfix\n     * </PRE>\n     */\n    var vbr_old_switch_map = [\n        new VBRPresets(0, 9, 9, 0, 5.20, 125.0, -4.2, -6.3, 4.8, 1, 0, 0, 2, 21, 0.97),\n        new VBRPresets(1, 9, 9, 0, 5.30, 125.0, -3.6, -5.6, 4.5, 1.5, 0, 0, 2, 21, 1.35),\n        new VBRPresets(2, 9, 9, 0, 5.60, 125.0, -2.2, -3.5, 2.8, 2, 0, 0, 2, 21, 1.49),\n        new VBRPresets(3, 9, 9, 1, 5.80, 130.0, -1.8, -2.8, 2.6, 3, -4, 0, 2, 20, 1.64),\n        new VBRPresets(4, 9, 9, 1, 6.00, 135.0, -0.7, -1.1, 1.1, 3.5, -8, 0, 2, 0, 1.79),\n        new VBRPresets(5, 9, 9, 1, 6.40, 140.0, 0.5, 0.4, -7.5, 4, -12, 0.0002, 0, 0, 1.95),\n        new VBRPresets(6, 9, 9, 1, 6.60, 145.0, 0.67, 0.65, -14.7, 6.5, -19, 0.0004, 0, 0, 2.30),\n        new VBRPresets(7, 9, 9, 1, 6.60, 145.0, 0.8, 0.75, -19.7, 8, -22, 0.0006, 0, 0, 2.70),\n        new VBRPresets(8, 9, 9, 1, 6.60, 145.0, 1.2, 1.15, -27.5, 10, -23, 0.0007, 0, 0, 0),\n        new VBRPresets(9, 9, 9, 1, 6.60, 145.0, 1.6, 1.6, -36, 11, -25, 0.0008, 0, 0, 0),\n        new VBRPresets(10, 9, 9, 1, 6.60, 145.0, 2.0, 2.0, -36, 12, -25, 0.0008, 0, 0, 0)\n    ];\n\n    /**\n     * <PRE>\n     *                 vbr_q  qcomp_l  qcomp_s  expY  st_lrm   st_s  mask adj_l  adj_s  ath_lower  ath_curve  ath_sens  interChR  safejoint sfb21mod  msfix\n     * </PRE>\n     */\n    var vbr_psy_switch_map = [\n        new VBRPresets(0, 9, 9, 0, 4.20, 25.0, -7.0, -4.0, 7.5, 1, 0, 0, 2, 26, 0.97),\n        new VBRPresets(1, 9, 9, 0, 4.20, 25.0, -5.6, -3.6, 4.5, 1.5, 0, 0, 2, 21, 1.35),\n        new VBRPresets(2, 9, 9, 0, 4.20, 25.0, -4.4, -1.8, 2, 2, 0, 0, 2, 18, 1.49),\n        new VBRPresets(3, 9, 9, 1, 4.20, 25.0, -3.4, -1.25, 1.1, 3, -4, 0, 2, 15, 1.64),\n        new VBRPresets(4, 9, 9, 1, 4.20, 25.0, -2.2, 0.1, 0, 3.5, -8, 0, 2, 0, 1.79),\n        new VBRPresets(5, 9, 9, 1, 4.20, 25.0, -1.0, 1.65, -7.7, 4, -12, 0.0002, 0, 0, 1.95),\n        new VBRPresets(6, 9, 9, 1, 4.20, 25.0, -0.0, 2.47, -7.7, 6.5, -19, 0.0004, 0, 0, 2),\n        new VBRPresets(7, 9, 9, 1, 4.20, 25.0, 0.5, 2.0, -14.5, 8, -22, 0.0006, 0, 0, 2),\n        new VBRPresets(8, 9, 9, 1, 4.20, 25.0, 1.0, 2.4, -22.0, 10, -23, 0.0007, 0, 0, 2),\n        new VBRPresets(9, 9, 9, 1, 4.20, 25.0, 1.5, 2.95, -30.0, 11, -25, 0.0008, 0, 0, 2),\n        new VBRPresets(10, 9, 9, 1, 4.20, 25.0, 2.0, 2.95, -36.0, 12, -30, 0.0008, 0, 0, 2)\n    ];\n\n    function apply_vbr_preset(gfp, a, enforce) {\n        var vbr_preset = gfp.VBR == VbrMode$20.vbr_rh ? vbr_old_switch_map\n            : vbr_psy_switch_map;\n\n        var x = gfp.VBR_q_frac;\n        var p = vbr_preset[a];\n        var q = vbr_preset[a + 1];\n        var set = p;\n\n        // NOOP(vbr_q);\n        // NOOP(quant_comp);\n        // NOOP(quant_comp_s);\n        // NOOP(expY);\n        p.st_lrm = p.st_lrm + x * (q.st_lrm - p.st_lrm);\n        // LERP(st_lrm);\n        p.st_s = p.st_s + x * (q.st_s - p.st_s);\n        // LERP(st_s);\n        p.masking_adj = p.masking_adj + x * (q.masking_adj - p.masking_adj);\n        // LERP(masking_adj);\n        p.masking_adj_short = p.masking_adj_short + x\n            * (q.masking_adj_short - p.masking_adj_short);\n        // LERP(masking_adj_short);\n        p.ath_lower = p.ath_lower + x * (q.ath_lower - p.ath_lower);\n        // LERP(ath_lower);\n        p.ath_curve = p.ath_curve + x * (q.ath_curve - p.ath_curve);\n        // LERP(ath_curve);\n        p.ath_sensitivity = p.ath_sensitivity + x\n            * (q.ath_sensitivity - p.ath_sensitivity);\n        // LERP(ath_sensitivity);\n        p.interch = p.interch + x * (q.interch - p.interch);\n        // LERP(interch);\n        // NOOP(safejoint);\n        // NOOP(sfb21mod);\n        p.msfix = p.msfix + x * (q.msfix - p.msfix);\n        // LERP(msfix);\n\n        lame_set_VBR_q(gfp, set.vbr_q);\n\n        if (enforce != 0)\n            gfp.quant_comp = set.quant_comp;\n        else if (!(Math.abs(gfp.quant_comp - -1) > 0))\n            gfp.quant_comp = set.quant_comp;\n        // SET_OPTION(quant_comp, set.quant_comp, -1);\n        if (enforce != 0)\n            gfp.quant_comp_short = set.quant_comp_s;\n        else if (!(Math.abs(gfp.quant_comp_short - -1) > 0))\n            gfp.quant_comp_short = set.quant_comp_s;\n        // SET_OPTION(quant_comp_short, set.quant_comp_s, -1);\n        if (set.expY != 0) {\n            gfp.experimentalY = set.expY != 0;\n        }\n        if (enforce != 0)\n            gfp.internal_flags.nsPsy.attackthre = set.st_lrm;\n        else if (!(Math.abs(gfp.internal_flags.nsPsy.attackthre - -1) > 0))\n            gfp.internal_flags.nsPsy.attackthre = set.st_lrm;\n        // SET_OPTION(short_threshold_lrm, set.st_lrm, -1);\n        if (enforce != 0)\n            gfp.internal_flags.nsPsy.attackthre_s = set.st_s;\n        else if (!(Math.abs(gfp.internal_flags.nsPsy.attackthre_s - -1) > 0))\n            gfp.internal_flags.nsPsy.attackthre_s = set.st_s;\n        // SET_OPTION(short_threshold_s, set.st_s, -1);\n        if (enforce != 0)\n            gfp.maskingadjust = set.masking_adj;\n        else if (!(Math.abs(gfp.maskingadjust - 0) > 0))\n            gfp.maskingadjust = set.masking_adj;\n        // SET_OPTION(maskingadjust, set.masking_adj, 0);\n        if (enforce != 0)\n            gfp.maskingadjust_short = set.masking_adj_short;\n        else if (!(Math.abs(gfp.maskingadjust_short - 0) > 0))\n            gfp.maskingadjust_short = set.masking_adj_short;\n        // SET_OPTION(maskingadjust_short, set.masking_adj_short, 0);\n        if (enforce != 0)\n            gfp.ATHlower = -set.ath_lower / 10.0;\n        else if (!(Math.abs((-gfp.ATHlower * 10.0) - 0) > 0))\n            gfp.ATHlower = -set.ath_lower / 10.0;\n        // SET_OPTION(ATHlower, set.ath_lower, 0);\n        if (enforce != 0)\n            gfp.ATHcurve = set.ath_curve;\n        else if (!(Math.abs(gfp.ATHcurve - -1) > 0))\n            gfp.ATHcurve = set.ath_curve;\n        // SET_OPTION(ATHcurve, set.ath_curve, -1);\n        if (enforce != 0)\n            gfp.athaa_sensitivity = set.ath_sensitivity;\n        else if (!(Math.abs(gfp.athaa_sensitivity - -1) > 0))\n            gfp.athaa_sensitivity = set.ath_sensitivity;\n        // SET_OPTION(athaa_sensitivity, set.ath_sensitivity, 0);\n        if (set.interch > 0) {\n            if (enforce != 0)\n                gfp.interChRatio = set.interch;\n            else if (!(Math.abs(gfp.interChRatio - -1) > 0))\n                gfp.interChRatio = set.interch;\n            // SET_OPTION(interChRatio, set.interch, -1);\n        }\n\n        /* parameters for which there is no proper set/get interface */\n        if (set.safejoint > 0) {\n            gfp.exp_nspsytune = gfp.exp_nspsytune | set.safejoint;\n        }\n        if (set.sfb21mod > 0) {\n            gfp.exp_nspsytune = gfp.exp_nspsytune | (set.sfb21mod << 20);\n        }\n        if (enforce != 0)\n            gfp.msfix = set.msfix;\n        else if (!(Math.abs(gfp.msfix - -1) > 0))\n            gfp.msfix = set.msfix;\n        // SET_OPTION(msfix, set.msfix, -1);\n\n        if (enforce == 0) {\n            gfp.VBR_q = a;\n            gfp.VBR_q_frac = x;\n        }\n    }\n\n    /**\n     * <PRE>\n     *  Switch mappings for ABR mode\n     *\n     *              kbps  quant q_s safejoint nsmsfix st_lrm  st_s  ns-bass scale   msk ath_lwr ath_curve  interch , sfscale\n     * </PRE>\n     */\n    var abr_switch_map = [\n        new ABRPresets(8, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -30.0, 11, 0.0012, 1), /*   8, impossible to use in stereo */\n        new ABRPresets(16, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -25.0, 11, 0.0010, 1), /*  16 */\n        new ABRPresets(24, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -20.0, 11, 0.0010, 1), /*  24 */\n        new ABRPresets(32, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -15.0, 11, 0.0010, 1), /*  32 */\n        new ABRPresets(40, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -10.0, 11, 0.0009, 1), /*  40 */\n        new ABRPresets(48, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -10.0, 11, 0.0009, 1), /*  48 */\n        new ABRPresets(56, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -6.0, 11, 0.0008, 1), /*  56 */\n        new ABRPresets(64, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -2.0, 11, 0.0008, 1), /*  64 */\n        new ABRPresets(80, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, .0, 8, 0.0007, 1), /*  80 */\n        new ABRPresets(96, 9, 9, 0, 2.50, 6.60, 145, 0, 0.95, 0, 1.0, 5.5, 0.0006, 1), /*  96 */\n        new ABRPresets(112, 9, 9, 0, 2.25, 6.60, 145, 0, 0.95, 0, 2.0, 4.5, 0.0005, 1), /* 112 */\n        new ABRPresets(128, 9, 9, 0, 1.95, 6.40, 140, 0, 0.95, 0, 3.0, 4, 0.0002, 1), /* 128 */\n        new ABRPresets(160, 9, 9, 1, 1.79, 6.00, 135, 0, 0.95, -2, 5.0, 3.5, 0, 1), /* 160 */\n        new ABRPresets(192, 9, 9, 1, 1.49, 5.60, 125, 0, 0.97, -4, 7.0, 3, 0, 0), /* 192 */\n        new ABRPresets(224, 9, 9, 1, 1.25, 5.20, 125, 0, 0.98, -6, 9.0, 2, 0, 0), /* 224 */\n        new ABRPresets(256, 9, 9, 1, 0.97, 5.20, 125, 0, 1.00, -8, 10.0, 1, 0, 0), /* 256 */\n        new ABRPresets(320, 9, 9, 1, 0.90, 5.20, 125, 0, 1.00, -10, 12.0, 0, 0, 0)  /* 320 */\n    ];\n\n    function apply_abr_preset(gfp, preset, enforce) {\n        /* Variables for the ABR stuff */\n        var actual_bitrate = preset;\n\n        var r = lame.nearestBitrateFullIndex(preset);\n\n        gfp.VBR = VbrMode$20.vbr_abr;\n        gfp.VBR_mean_bitrate_kbps = actual_bitrate;\n        gfp.VBR_mean_bitrate_kbps = Math.min(gfp.VBR_mean_bitrate_kbps, 320);\n        gfp.VBR_mean_bitrate_kbps = Math.max(gfp.VBR_mean_bitrate_kbps, 8);\n        gfp.brate = gfp.VBR_mean_bitrate_kbps;\n        if (gfp.VBR_mean_bitrate_kbps > 320) {\n            gfp.disable_reservoir = true;\n        }\n\n        /* parameters for which there is no proper set/get interface */\n        if (abr_switch_map[r].safejoint > 0)\n            gfp.exp_nspsytune = gfp.exp_nspsytune | 2;\n        /* safejoint */\n\n        if (abr_switch_map[r].sfscale > 0) {\n            gfp.internal_flags.noise_shaping = 2;\n        }\n        /* ns-bass tweaks */\n        if (Math.abs(abr_switch_map[r].nsbass) > 0) {\n            var k = (int)(abr_switch_map[r].nsbass * 4);\n            if (k < 0)\n                k += 64;\n            gfp.exp_nspsytune = gfp.exp_nspsytune | (k << 2);\n        }\n\n        if (enforce != 0)\n            gfp.quant_comp = abr_switch_map[r].quant_comp;\n        else if (!(Math.abs(gfp.quant_comp - -1) > 0))\n            gfp.quant_comp = abr_switch_map[r].quant_comp;\n        // SET_OPTION(quant_comp, abr_switch_map[r].quant_comp, -1);\n        if (enforce != 0)\n            gfp.quant_comp_short = abr_switch_map[r].quant_comp_s;\n        else if (!(Math.abs(gfp.quant_comp_short - -1) > 0))\n            gfp.quant_comp_short = abr_switch_map[r].quant_comp_s;\n        // SET_OPTION(quant_comp_short, abr_switch_map[r].quant_comp_s, -1);\n\n        if (enforce != 0)\n            gfp.msfix = abr_switch_map[r].nsmsfix;\n        else if (!(Math.abs(gfp.msfix - -1) > 0))\n            gfp.msfix = abr_switch_map[r].nsmsfix;\n        // SET_OPTION(msfix, abr_switch_map[r].nsmsfix, -1);\n\n        if (enforce != 0)\n            gfp.internal_flags.nsPsy.attackthre = abr_switch_map[r].st_lrm;\n        else if (!(Math.abs(gfp.internal_flags.nsPsy.attackthre - -1) > 0))\n            gfp.internal_flags.nsPsy.attackthre = abr_switch_map[r].st_lrm;\n        // SET_OPTION(short_threshold_lrm, abr_switch_map[r].st_lrm, -1);\n        if (enforce != 0)\n            gfp.internal_flags.nsPsy.attackthre_s = abr_switch_map[r].st_s;\n        else if (!(Math.abs(gfp.internal_flags.nsPsy.attackthre_s - -1) > 0))\n            gfp.internal_flags.nsPsy.attackthre_s = abr_switch_map[r].st_s;\n        // SET_OPTION(short_threshold_s, abr_switch_map[r].st_s, -1);\n\n        /*\n         * ABR seems to have big problems with clipping, especially at low\n         * bitrates\n         */\n        /*\n         * so we compensate for that here by using a scale value depending on\n         * bitrate\n         */\n        if (enforce != 0)\n            gfp.scale = abr_switch_map[r].scale;\n        else if (!(Math.abs(gfp.scale - -1) > 0))\n            gfp.scale = abr_switch_map[r].scale;\n        // SET_OPTION(scale, abr_switch_map[r].scale, -1);\n\n        if (enforce != 0)\n            gfp.maskingadjust = abr_switch_map[r].masking_adj;\n        else if (!(Math.abs(gfp.maskingadjust - 0) > 0))\n            gfp.maskingadjust = abr_switch_map[r].masking_adj;\n        // SET_OPTION(maskingadjust, abr_switch_map[r].masking_adj, 0);\n        if (abr_switch_map[r].masking_adj > 0) {\n            if (enforce != 0)\n                gfp.maskingadjust_short = (abr_switch_map[r].masking_adj * .9);\n            else if (!(Math.abs(gfp.maskingadjust_short - 0) > 0))\n                gfp.maskingadjust_short = (abr_switch_map[r].masking_adj * .9);\n            // SET_OPTION(maskingadjust_short, abr_switch_map[r].masking_adj *\n            // .9, 0);\n        } else {\n            if (enforce != 0)\n                gfp.maskingadjust_short = (abr_switch_map[r].masking_adj * 1.1);\n            else if (!(Math.abs(gfp.maskingadjust_short - 0) > 0))\n                gfp.maskingadjust_short = (abr_switch_map[r].masking_adj * 1.1);\n            // SET_OPTION(maskingadjust_short, abr_switch_map[r].masking_adj *\n            // 1.1, 0);\n        }\n\n        if (enforce != 0)\n            gfp.ATHlower = -abr_switch_map[r].ath_lower / 10.;\n        else if (!(Math.abs((-gfp.ATHlower * 10.) - 0) > 0))\n            gfp.ATHlower = -abr_switch_map[r].ath_lower / 10.;\n        // SET_OPTION(ATHlower, abr_switch_map[r].ath_lower, 0);\n        if (enforce != 0)\n            gfp.ATHcurve = abr_switch_map[r].ath_curve;\n        else if (!(Math.abs(gfp.ATHcurve - -1) > 0))\n            gfp.ATHcurve = abr_switch_map[r].ath_curve;\n        // SET_OPTION(ATHcurve, abr_switch_map[r].ath_curve, -1);\n\n        if (enforce != 0)\n            gfp.interChRatio = abr_switch_map[r].interch;\n        else if (!(Math.abs(gfp.interChRatio - -1) > 0))\n            gfp.interChRatio = abr_switch_map[r].interch;\n        // SET_OPTION(interChRatio, abr_switch_map[r].interch, -1);\n\n        return preset;\n    }\n\n    this.apply_preset = function(gfp, preset, enforce) {\n        /* translate legacy presets */\n        switch (preset) {\n            case Lame.R3MIX:\n            {\n                preset = Lame.V3;\n                gfp.VBR = VbrMode$20.vbr_mtrh;\n                break;\n            }\n            case Lame.MEDIUM:\n            {\n                preset = Lame.V4;\n                gfp.VBR = VbrMode$20.vbr_rh;\n                break;\n            }\n            case Lame.MEDIUM_FAST:\n            {\n                preset = Lame.V4;\n                gfp.VBR = VbrMode$20.vbr_mtrh;\n                break;\n            }\n            case Lame.STANDARD:\n            {\n                preset = Lame.V2;\n                gfp.VBR = VbrMode$20.vbr_rh;\n                break;\n            }\n            case Lame.STANDARD_FAST:\n            {\n                preset = Lame.V2;\n                gfp.VBR = VbrMode$20.vbr_mtrh;\n                break;\n            }\n            case Lame.EXTREME:\n            {\n                preset = Lame.V0;\n                gfp.VBR = VbrMode$20.vbr_rh;\n                break;\n            }\n            case Lame.EXTREME_FAST:\n            {\n                preset = Lame.V0;\n                gfp.VBR = VbrMode$20.vbr_mtrh;\n                break;\n            }\n            case Lame.INSANE:\n            {\n                preset = 320;\n                gfp.preset = preset;\n                apply_abr_preset(gfp, preset, enforce);\n                gfp.VBR = VbrMode$20.vbr_off;\n                return preset;\n            }\n        }\n\n        gfp.preset = preset;\n        {\n            switch (preset) {\n                case Lame.V9:\n                    apply_vbr_preset(gfp, 9, enforce);\n                    return preset;\n                case Lame.V8:\n                    apply_vbr_preset(gfp, 8, enforce);\n                    return preset;\n                case Lame.V7:\n                    apply_vbr_preset(gfp, 7, enforce);\n                    return preset;\n                case Lame.V6:\n                    apply_vbr_preset(gfp, 6, enforce);\n                    return preset;\n                case Lame.V5:\n                    apply_vbr_preset(gfp, 5, enforce);\n                    return preset;\n                case Lame.V4:\n                    apply_vbr_preset(gfp, 4, enforce);\n                    return preset;\n                case Lame.V3:\n                    apply_vbr_preset(gfp, 3, enforce);\n                    return preset;\n                case Lame.V2:\n                    apply_vbr_preset(gfp, 2, enforce);\n                    return preset;\n                case Lame.V1:\n                    apply_vbr_preset(gfp, 1, enforce);\n                    return preset;\n                case Lame.V0:\n                    apply_vbr_preset(gfp, 0, enforce);\n                    return preset;\n                default:\n                    break;\n            }\n        }\n        if (8 <= preset && preset <= 320) {\n            return apply_abr_preset(gfp, preset, enforce);\n        }\n\n        /* no corresponding preset found */\n        gfp.preset = 0;\n        return preset;\n    };\n\n    // Rest from getset.c:\n\n    /**\n     * VBR quality level.<BR>\n     * 0 = highest<BR>\n     * 9 = lowest\n     */\n    function lame_set_VBR_q(gfp, VBR_q) {\n        var ret = 0;\n\n        if (0 > VBR_q) {\n            /* Unknown VBR quality level! */\n            ret = -1;\n            VBR_q = 0;\n        }\n        if (9 < VBR_q) {\n            ret = -1;\n            VBR_q = 9;\n        }\n\n        gfp.VBR_q = VBR_q;\n        gfp.VBR_q_frac = 0;\n        return ret;\n    }\n\n}\n\nvar Presets_1 = Presets$1;\n\nfunction VBRQuantize() {\n    var qupvt;\n    var tak;\n\n    this.setModules = function (_qupvt, _tk) {\n        qupvt = _qupvt;\n        tak = _tk;\n    };\n    //TODO\n\n}\n\nvar VBRQuantize_1 = VBRQuantize;\n\n//package mp3;\n\nfunction CalcNoiseResult$1() {\n    /**\n     * sum of quantization noise > masking\n     */\n    this.over_noise = 0.;\n    /**\n     * sum of all quantization noise\n     */\n    this.tot_noise = 0.;\n    /**\n     * max quantization noise\n     */\n    this.max_noise = 0.;\n    /**\n     * number of quantization noise > masking\n     */\n    this.over_count = 0;\n    /**\n     * SSD-like cost of distorted bands\n     */\n    this.over_SSD = 0;\n    this.bits = 0;\n}\n\nvar CalcNoiseResult_1 = CalcNoiseResult$1;\n\nvar new_float$22 = common.new_float;\nvar new_int$22 = common.new_int;\nfunction CalcNoiseData() {\n    this.global_gain = 0;\n    this.sfb_count1 = 0;\n    this.step = new_int$22(39);\n    this.noise = new_float$22(39);\n    this.noise_log = new_float$22(39);\n}\n\nvar CalcNoiseData_1 = CalcNoiseData;\n\n/*\n * MP3 quantization\n *\n *      Copyright (c) 1999-2000 Mark Taylor\n *      Copyright (c) 1999-2003 Takehiro Tominaga\n *      Copyright (c) 2000-2007 Robert Hegemann\n *      Copyright (c) 2001-2005 Gabriel Bouvigne\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.     See the GNU\n * Library General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\n * Boston, MA 02111-1307, USA.\n */\n\n/* $Id: Quantize.java,v 1.24 2011/05/24 20:48:06 kenchis Exp $ */\n\n//package mp3;\n\n//import java.util.Arrays;\n\nvar System$21 = common.System;\nvar VbrMode$21 = common.VbrMode;\nvar Util$21 = common.Util;\nvar Arrays$21 = common.Arrays;\nvar new_float$21 = common.new_float;\nvar assert$21 = common.assert;\n\n\n\n\n\n\n\n\nfunction Quantize$1() {\n    var bs;\n    this.rv = null;\n    var rv;\n    this.qupvt = null;\n    var qupvt;\n\n    var vbr = new VBRQuantize_1();\n    var tk;\n\n    this.setModules = function (_bs, _rv, _qupvt, _tk) {\n        bs = _bs;\n        rv = _rv;\n        this.rv = _rv;\n        qupvt = _qupvt;\n        this.qupvt = _qupvt;\n        tk = _tk;\n        vbr.setModules(qupvt, tk);\n    };\n\n    /**\n     * convert from L/R <. Mid/Side\n     */\n    this.ms_convert = function (l3_side, gr) {\n        for (var i = 0; i < 576; ++i) {\n            var l = l3_side.tt[gr][0].xr[i];\n            var r = l3_side.tt[gr][1].xr[i];\n            l3_side.tt[gr][0].xr[i] = (l + r) * (Util$21.SQRT2 * 0.5);\n            l3_side.tt[gr][1].xr[i] = (l - r) * (Util$21.SQRT2 * 0.5);\n        }\n    };\n\n    /**\n     * mt 6/99\n     *\n     * initializes cod_info, scalefac and xrpow\n     *\n     * returns 0 if all energies in xr are zero, else 1\n     */\n    function init_xrpow_core(cod_info, xrpow, upper, sum) {\n        sum = 0;\n        for (var i = 0; i <= upper; ++i) {\n            var tmp = Math.abs(cod_info.xr[i]);\n            sum += tmp;\n            xrpow[i] = Math.sqrt(tmp * Math.sqrt(tmp));\n\n            if (xrpow[i] > cod_info.xrpow_max)\n                cod_info.xrpow_max = xrpow[i];\n        }\n        return sum;\n    }\n\n    this.init_xrpow = function (gfc, cod_info, xrpow) {\n        var sum = 0;\n        var upper = 0 | cod_info.max_nonzero_coeff;\n\n        assert$21(xrpow != null);\n        cod_info.xrpow_max = 0;\n\n        /*\n         * check if there is some energy we have to quantize and calculate xrpow\n         * matching our fresh scalefactors\n         */\n        assert$21(0 <= upper && upper <= 575);\n\n        Arrays$21.fill(xrpow, upper, 576, 0);\n\n        sum = init_xrpow_core(cod_info, xrpow, upper, sum);\n\n        /*\n         * return 1 if we have something to quantize, else 0\n         */\n        if (sum > 1E-20) {\n            var j = 0;\n            if ((gfc.substep_shaping & 2) != 0)\n                j = 1;\n\n            for (var i = 0; i < cod_info.psymax; i++)\n                gfc.pseudohalf[i] = j;\n\n            return true;\n        }\n\n        Arrays$21.fill(cod_info.l3_enc, 0, 576, 0);\n        return false;\n    };\n\n    /**\n     * Gabriel Bouvigne feb/apr 2003<BR>\n     * Analog silence detection in partitionned sfb21 or sfb12 for short blocks\n     *\n     * From top to bottom of sfb, changes to 0 coeffs which are below ath. It\n     * stops on the first coeff higher than ath.\n     */\n    function psfb21_analogsilence(gfc, cod_info) {\n        var ath = gfc.ATH;\n        var xr = cod_info.xr;\n\n        if (cod_info.block_type != Encoder_1.SHORT_TYPE) {\n            /* NORM, START or STOP type, but not SHORT blocks */\n            var stop = false;\n            for (var gsfb = Encoder_1.PSFB21 - 1; gsfb >= 0 && !stop; gsfb--) {\n                var start = gfc.scalefac_band.psfb21[gsfb];\n                var end = gfc.scalefac_band.psfb21[gsfb + 1];\n                var ath21 = qupvt.athAdjust(ath.adjust, ath.psfb21[gsfb],\n                    ath.floor);\n\n                if (gfc.nsPsy.longfact[21] > 1e-12)\n                    ath21 *= gfc.nsPsy.longfact[21];\n\n                for (var j = end - 1; j >= start; j--) {\n                    if (Math.abs(xr[j]) < ath21)\n                        xr[j] = 0;\n                    else {\n                        stop = true;\n                        break;\n                    }\n                }\n            }\n        } else {\n            /* note: short blocks coeffs are reordered */\n            for (var block = 0; block < 3; block++) {\n                var stop = false;\n                for (var gsfb = Encoder_1.PSFB12 - 1; gsfb >= 0 && !stop; gsfb--) {\n                    var start = gfc.scalefac_band.s[12]\n                        * 3\n                        + (gfc.scalefac_band.s[13] - gfc.scalefac_band.s[12])\n                        * block\n                        + (gfc.scalefac_band.psfb12[gsfb] - gfc.scalefac_band.psfb12[0]);\n                    var end = start\n                        + (gfc.scalefac_band.psfb12[gsfb + 1] - gfc.scalefac_band.psfb12[gsfb]);\n                    var ath12 = qupvt.athAdjust(ath.adjust, ath.psfb12[gsfb],\n                        ath.floor);\n\n                    if (gfc.nsPsy.shortfact[12] > 1e-12)\n                        ath12 *= gfc.nsPsy.shortfact[12];\n\n                    for (var j = end - 1; j >= start; j--) {\n                        if (Math.abs(xr[j]) < ath12)\n                            xr[j] = 0;\n                        else {\n                            stop = true;\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n\n    }\n\n    this.init_outer_loop = function (gfc, cod_info) {\n        /*\n         * initialize fresh cod_info\n         */\n        cod_info.part2_3_length = 0;\n        cod_info.big_values = 0;\n        cod_info.count1 = 0;\n        cod_info.global_gain = 210;\n        cod_info.scalefac_compress = 0;\n        /* mixed_block_flag, block_type was set in psymodel.c */\n        cod_info.table_select[0] = 0;\n        cod_info.table_select[1] = 0;\n        cod_info.table_select[2] = 0;\n        cod_info.subblock_gain[0] = 0;\n        cod_info.subblock_gain[1] = 0;\n        cod_info.subblock_gain[2] = 0;\n        cod_info.subblock_gain[3] = 0;\n        /* this one is always 0 */\n        cod_info.region0_count = 0;\n        cod_info.region1_count = 0;\n        cod_info.preflag = 0;\n        cod_info.scalefac_scale = 0;\n        cod_info.count1table_select = 0;\n        cod_info.part2_length = 0;\n        cod_info.sfb_lmax = Encoder_1.SBPSY_l;\n        cod_info.sfb_smin = Encoder_1.SBPSY_s;\n        cod_info.psy_lmax = gfc.sfb21_extra ? Encoder_1.SBMAX_l : Encoder_1.SBPSY_l;\n        cod_info.psymax = cod_info.psy_lmax;\n        cod_info.sfbmax = cod_info.sfb_lmax;\n        cod_info.sfbdivide = 11;\n        for (var sfb = 0; sfb < Encoder_1.SBMAX_l; sfb++) {\n            cod_info.width[sfb] = gfc.scalefac_band.l[sfb + 1]\n                - gfc.scalefac_band.l[sfb];\n            /* which is always 0. */\n            cod_info.window[sfb] = 3;\n        }\n        if (cod_info.block_type == Encoder_1.SHORT_TYPE) {\n            var ixwork = new_float$21(576);\n\n            cod_info.sfb_smin = 0;\n            cod_info.sfb_lmax = 0;\n            if (cod_info.mixed_block_flag != 0) {\n                /*\n                 * MPEG-1: sfbs 0-7 long block, 3-12 short blocks MPEG-2(.5):\n                 * sfbs 0-5 long block, 3-12 short blocks\n                 */\n                cod_info.sfb_smin = 3;\n                cod_info.sfb_lmax = gfc.mode_gr * 2 + 4;\n            }\n            cod_info.psymax = cod_info.sfb_lmax\n                + 3\n                * ((gfc.sfb21_extra ? Encoder_1.SBMAX_s : Encoder_1.SBPSY_s) - cod_info.sfb_smin);\n            cod_info.sfbmax = cod_info.sfb_lmax + 3\n                * (Encoder_1.SBPSY_s - cod_info.sfb_smin);\n            cod_info.sfbdivide = cod_info.sfbmax - 18;\n            cod_info.psy_lmax = cod_info.sfb_lmax;\n            /* re-order the short blocks, for more efficient encoding below */\n            /* By Takehiro TOMINAGA */\n            /*\n             * Within each scalefactor band, data is given for successive time\n             * windows, beginning with window 0 and ending with window 2. Within\n             * each window, the quantized values are then arranged in order of\n             * increasing frequency...\n             */\n            var ix = gfc.scalefac_band.l[cod_info.sfb_lmax];\n            System$21.arraycopy(cod_info.xr, 0, ixwork, 0, 576);\n            for (var sfb = cod_info.sfb_smin; sfb < Encoder_1.SBMAX_s; sfb++) {\n                var start = gfc.scalefac_band.s[sfb];\n                var end = gfc.scalefac_band.s[sfb + 1];\n                for (var window = 0; window < 3; window++) {\n                    for (var l = start; l < end; l++) {\n                        cod_info.xr[ix++] = ixwork[3 * l + window];\n                    }\n                }\n            }\n\n            var j = cod_info.sfb_lmax;\n            for (var sfb = cod_info.sfb_smin; sfb < Encoder_1.SBMAX_s; sfb++) {\n                cod_info.width[j] = cod_info.width[j + 1] = cod_info.width[j + 2] = gfc.scalefac_band.s[sfb + 1]\n                    - gfc.scalefac_band.s[sfb];\n                cod_info.window[j] = 0;\n                cod_info.window[j + 1] = 1;\n                cod_info.window[j + 2] = 2;\n                j += 3;\n            }\n        }\n\n        cod_info.count1bits = 0;\n        cod_info.sfb_partition_table = qupvt.nr_of_sfb_block[0][0];\n        cod_info.slen[0] = 0;\n        cod_info.slen[1] = 0;\n        cod_info.slen[2] = 0;\n        cod_info.slen[3] = 0;\n\n        cod_info.max_nonzero_coeff = 575;\n\n        /*\n         * fresh scalefactors are all zero\n         */\n        Arrays$21.fill(cod_info.scalefac, 0);\n\n        psfb21_analogsilence(gfc, cod_info);\n    };\n\n    function BinSearchDirection(ordinal) {\n        this.ordinal = ordinal;\n    }\n\n    BinSearchDirection.BINSEARCH_NONE = new BinSearchDirection(0);\n    BinSearchDirection.BINSEARCH_UP = new BinSearchDirection(1);\n    BinSearchDirection.BINSEARCH_DOWN = new BinSearchDirection(2);\n\n    /**\n     * author/date??\n     *\n     * binary step size search used by outer_loop to get a quantizer step size\n     * to start with\n     */\n    function bin_search_StepSize(gfc, cod_info, desired_rate, ch, xrpow) {\n        var nBits;\n        var CurrentStep = gfc.CurrentStep[ch];\n        var flagGoneOver = false;\n        var start = gfc.OldValue[ch];\n        var Direction = BinSearchDirection.BINSEARCH_NONE;\n        cod_info.global_gain = start;\n        desired_rate -= cod_info.part2_length;\n\n        assert$21(CurrentStep != 0);\n        for (; ;) {\n            var step;\n            nBits = tk.count_bits(gfc, xrpow, cod_info, null);\n\n            if (CurrentStep == 1 || nBits == desired_rate)\n                break;\n            /* nothing to adjust anymore */\n\n            if (nBits > desired_rate) {\n                /* increase Quantize_StepSize */\n                if (Direction == BinSearchDirection.BINSEARCH_DOWN)\n                    flagGoneOver = true;\n\n                if (flagGoneOver)\n                    CurrentStep /= 2;\n                Direction = BinSearchDirection.BINSEARCH_UP;\n                step = CurrentStep;\n            } else {\n                /* decrease Quantize_StepSize */\n                if (Direction == BinSearchDirection.BINSEARCH_UP)\n                    flagGoneOver = true;\n\n                if (flagGoneOver)\n                    CurrentStep /= 2;\n                Direction = BinSearchDirection.BINSEARCH_DOWN;\n                step = -CurrentStep;\n            }\n            cod_info.global_gain += step;\n            if (cod_info.global_gain < 0) {\n                cod_info.global_gain = 0;\n                flagGoneOver = true;\n            }\n            if (cod_info.global_gain > 255) {\n                cod_info.global_gain = 255;\n                flagGoneOver = true;\n            }\n        }\n\n        assert$21(cod_info.global_gain >= 0);\n        assert$21(cod_info.global_gain < 256);\n\n        while (nBits > desired_rate && cod_info.global_gain < 255) {\n            cod_info.global_gain++;\n            nBits = tk.count_bits(gfc, xrpow, cod_info, null);\n        }\n        gfc.CurrentStep[ch] = (start - cod_info.global_gain >= 4) ? 4 : 2;\n        gfc.OldValue[ch] = cod_info.global_gain;\n        cod_info.part2_3_length = nBits;\n        return nBits;\n    }\n\n    this.trancate_smallspectrums = function (gfc, gi, l3_xmin, work) {\n        var distort = new_float$21(L3Side_1.SFBMAX);\n\n        if ((0 == (gfc.substep_shaping & 4) && gi.block_type == Encoder_1.SHORT_TYPE)\n            || (gfc.substep_shaping & 0x80) != 0)\n            return;\n        qupvt.calc_noise(gi, l3_xmin, distort, new CalcNoiseResult_1(), null);\n        for (var j = 0; j < 576; j++) {\n            var xr = 0.0;\n            if (gi.l3_enc[j] != 0)\n                xr = Math.abs(gi.xr[j]);\n            work[j] = xr;\n        }\n\n        var j = 0;\n        var sfb = 8;\n        if (gi.block_type == Encoder_1.SHORT_TYPE)\n            sfb = 6;\n        do {\n            var allowedNoise, trancateThreshold;\n            var nsame, start;\n\n            var width = gi.width[sfb];\n            j += width;\n            if (distort[sfb] >= 1.0)\n                continue;\n\n            Arrays$21.sort(work, j - width, width);\n            if (BitStream.EQ(work[j - 1], 0.0))\n                continue;\n            /* all zero sfb */\n\n            allowedNoise = (1.0 - distort[sfb]) * l3_xmin[sfb];\n            trancateThreshold = 0.0;\n            start = 0;\n            do {\n                var noise;\n                for (nsame = 1; start + nsame < width; nsame++)\n                    if (BitStream.NEQ(work[start + j - width], work[start + j\n                        + nsame - width]))\n                        break;\n\n                noise = work[start + j - width] * work[start + j - width]\n                    * nsame;\n                if (allowedNoise < noise) {\n                    if (start != 0)\n                        trancateThreshold = work[start + j - width - 1];\n                    break;\n                }\n                allowedNoise -= noise;\n                start += nsame;\n            } while (start < width);\n            if (BitStream.EQ(trancateThreshold, 0.0))\n                continue;\n\n            do {\n                if (Math.abs(gi.xr[j - width]) <= trancateThreshold)\n                    gi.l3_enc[j - width] = 0;\n            } while (--width > 0);\n        } while (++sfb < gi.psymax);\n\n        gi.part2_3_length = tk.noquant_count_bits(gfc, gi, null);\n    };\n\n    /**\n     * author/date??\n     *\n     * Function: Returns zero if there is a scalefac which has not been\n     * amplified. Otherwise it returns one.\n     */\n    function loop_break(cod_info) {\n        for (var sfb = 0; sfb < cod_info.sfbmax; sfb++)\n            if (cod_info.scalefac[sfb]\n                + cod_info.subblock_gain[cod_info.window[sfb]] == 0)\n                return false;\n\n        return true;\n    }\n\n    /* mt 5/99: Function: Improved calc_noise for a single channel */\n\n    function penalties(noise) {\n        return Util$21.FAST_LOG10((0.368 + 0.632 * noise * noise * noise));\n    }\n\n    /**\n     * author/date??\n     *\n     * several different codes to decide which quantization is better\n     */\n    function get_klemm_noise(distort, gi) {\n        var klemm_noise = 1E-37;\n        for (var sfb = 0; sfb < gi.psymax; sfb++)\n            klemm_noise += penalties(distort[sfb]);\n\n        return Math.max(1e-20, klemm_noise);\n    }\n\n    function quant_compare(quant_comp, best, calc, gi, distort) {\n        /**\n         * noise is given in decibels (dB) relative to masking thesholds.<BR>\n         *\n         * over_noise: ??? (the previous comment is fully wrong)<BR>\n         * tot_noise: ??? (the previous comment is fully wrong)<BR>\n         * max_noise: max quantization noise\n         */\n        var better;\n\n        switch (quant_comp) {\n            default:\n            case 9:\n            {\n                if (best.over_count > 0) {\n                    /* there are distorted sfb */\n                    better = calc.over_SSD <= best.over_SSD;\n                    if (calc.over_SSD == best.over_SSD)\n                        better = calc.bits < best.bits;\n                } else {\n                    /* no distorted sfb */\n                    better = ((calc.max_noise < 0) && ((calc.max_noise * 10 + calc.bits) <= (best.max_noise * 10 + best.bits)));\n                }\n                break;\n            }\n\n            case 0:\n                better = calc.over_count < best.over_count\n                    || (calc.over_count == best.over_count && calc.over_noise < best.over_noise)\n                    || (calc.over_count == best.over_count\n                    && BitStream.EQ(calc.over_noise, best.over_noise) && calc.tot_noise < best.tot_noise);\n                break;\n\n            case 8:\n                calc.max_noise = get_klemm_noise(distort, gi);\n            //$FALL-THROUGH$\n            case 1:\n                better = calc.max_noise < best.max_noise;\n                break;\n            case 2:\n                better = calc.tot_noise < best.tot_noise;\n                break;\n            case 3:\n                better = (calc.tot_noise < best.tot_noise)\n                    && (calc.max_noise < best.max_noise);\n                break;\n            case 4:\n                better = (calc.max_noise <= 0.0 && best.max_noise > 0.2)\n                    || (calc.max_noise <= 0.0 && best.max_noise < 0.0\n                    && best.max_noise > calc.max_noise - 0.2 && calc.tot_noise < best.tot_noise)\n                    || (calc.max_noise <= 0.0 && best.max_noise > 0.0\n                    && best.max_noise > calc.max_noise - 0.2 && calc.tot_noise < best.tot_noise\n                    + best.over_noise)\n                    || (calc.max_noise > 0.0 && best.max_noise > -0.05\n                    && best.max_noise > calc.max_noise - 0.1 && calc.tot_noise\n                    + calc.over_noise < best.tot_noise\n                    + best.over_noise)\n                    || (calc.max_noise > 0.0 && best.max_noise > -0.1\n                    && best.max_noise > calc.max_noise - 0.15 && calc.tot_noise\n                    + calc.over_noise + calc.over_noise < best.tot_noise\n                    + best.over_noise + best.over_noise);\n                break;\n            case 5:\n                better = calc.over_noise < best.over_noise\n                    || (BitStream.EQ(calc.over_noise, best.over_noise) && calc.tot_noise < best.tot_noise);\n                break;\n            case 6:\n                better = calc.over_noise < best.over_noise\n                    || (BitStream.EQ(calc.over_noise, best.over_noise) && (calc.max_noise < best.max_noise || (BitStream\n                        .EQ(calc.max_noise, best.max_noise) && calc.tot_noise <= best.tot_noise)));\n                break;\n            case 7:\n                better = calc.over_count < best.over_count\n                    || calc.over_noise < best.over_noise;\n                break;\n        }\n\n        if (best.over_count == 0) {\n            /*\n             * If no distorted bands, only use this quantization if it is\n             * better, and if it uses less bits. Unfortunately, part2_3_length\n             * is sometimes a poor estimator of the final size at low bitrates.\n             */\n            better = better && calc.bits < best.bits;\n        }\n\n        return better;\n    }\n\n    /**\n     * author/date??\n     *\n     * <PRE>\n     *  Amplify the scalefactor bands that violate the masking threshold.\n     *  See ISO 11172-3 Section C.1.5.4.3.5\n     *\n     *  distort[] = noise/masking\n     *  distort[] > 1   ==> noise is not masked\n     *  distort[] < 1   ==> noise is masked\n     *  max_dist = maximum value of distort[]\n     *\n     *  Three algorithms:\n     *  noise_shaping_amp\n     *        0             Amplify all bands with distort[]>1.\n     *\n     *        1             Amplify all bands with distort[] >= max_dist^(.5);\n     *                     ( 50% in the db scale)\n     *\n     *        2             Amplify first band with distort[] >= max_dist;\n     *\n     *\n     *  For algorithms 0 and 1, if max_dist < 1, then amplify all bands\n     *  with distort[] >= .95*max_dist.  This is to make sure we always\n     *  amplify at least one band.\n     * </PRE>\n     */\n    function amp_scalefac_bands(gfp, cod_info, distort, xrpow, bRefine) {\n        var gfc = gfp.internal_flags;\n        var ifqstep34;\n\n        if (cod_info.scalefac_scale == 0) {\n            ifqstep34 = 1.29683955465100964055;\n            /* 2**(.75*.5) */\n        } else {\n            ifqstep34 = 1.68179283050742922612;\n            /* 2**(.75*1) */\n        }\n\n        /* compute maximum value of distort[] */\n        var trigger = 0;\n        for (var sfb = 0; sfb < cod_info.sfbmax; sfb++) {\n            if (trigger < distort[sfb])\n                trigger = distort[sfb];\n        }\n\n        var noise_shaping_amp = gfc.noise_shaping_amp;\n        if (noise_shaping_amp == 3) {\n            if (bRefine)\n                noise_shaping_amp = 2;\n            else\n                noise_shaping_amp = 1;\n        }\n        switch (noise_shaping_amp) {\n            case 2:\n                /* amplify exactly 1 band */\n                break;\n\n            case 1:\n                /* amplify bands within 50% of max (on db scale) */\n                if (trigger > 1.0)\n                    trigger = Math.pow(trigger, .5);\n                else\n                    trigger *= .95;\n                break;\n\n            case 0:\n            default:\n                /* ISO algorithm. amplify all bands with distort>1 */\n                if (trigger > 1.0)\n                    trigger = 1.0;\n                else\n                    trigger *= .95;\n                break;\n        }\n\n        var j = 0;\n        for (var sfb = 0; sfb < cod_info.sfbmax; sfb++) {\n            var width = cod_info.width[sfb];\n            var l;\n            j += width;\n            if (distort[sfb] < trigger)\n                continue;\n\n            if ((gfc.substep_shaping & 2) != 0) {\n                gfc.pseudohalf[sfb] = (0 == gfc.pseudohalf[sfb]) ? 1 : 0;\n                if (0 == gfc.pseudohalf[sfb] && gfc.noise_shaping_amp == 2)\n                    return;\n            }\n            cod_info.scalefac[sfb]++;\n            for (l = -width; l < 0; l++) {\n                xrpow[j + l] *= ifqstep34;\n                if (xrpow[j + l] > cod_info.xrpow_max)\n                    cod_info.xrpow_max = xrpow[j + l];\n            }\n\n            if (gfc.noise_shaping_amp == 2)\n                return;\n        }\n    }\n\n    /**\n     * Takehiro Tominaga 2000-xx-xx\n     *\n     * turns on scalefac scale and adjusts scalefactors\n     */\n    function inc_scalefac_scale(cod_info, xrpow) {\n        var ifqstep34 = 1.29683955465100964055;\n\n        var j = 0;\n        for (var sfb = 0; sfb < cod_info.sfbmax; sfb++) {\n            var width = cod_info.width[sfb];\n            var s = cod_info.scalefac[sfb];\n            if (cod_info.preflag != 0)\n                s += qupvt.pretab[sfb];\n            j += width;\n            if ((s & 1) != 0) {\n                s++;\n                for (var l = -width; l < 0; l++) {\n                    xrpow[j + l] *= ifqstep34;\n                    if (xrpow[j + l] > cod_info.xrpow_max)\n                        cod_info.xrpow_max = xrpow[j + l];\n                }\n            }\n            cod_info.scalefac[sfb] = s >> 1;\n        }\n        cod_info.preflag = 0;\n        cod_info.scalefac_scale = 1;\n    }\n\n    /**\n     * Takehiro Tominaga 2000-xx-xx\n     *\n     * increases the subblock gain and adjusts scalefactors\n     */\n    function inc_subblock_gain(gfc, cod_info, xrpow) {\n        var sfb;\n        var scalefac = cod_info.scalefac;\n\n        /* subbloc_gain can't do anything in the long block region */\n        for (sfb = 0; sfb < cod_info.sfb_lmax; sfb++) {\n            if (scalefac[sfb] >= 16)\n                return true;\n        }\n\n        for (var window = 0; window < 3; window++) {\n            var s1 = 0;\n            var s2 = 0;\n\n            for (sfb = cod_info.sfb_lmax + window; sfb < cod_info.sfbdivide; sfb += 3) {\n                if (s1 < scalefac[sfb])\n                    s1 = scalefac[sfb];\n            }\n            for (; sfb < cod_info.sfbmax; sfb += 3) {\n                if (s2 < scalefac[sfb])\n                    s2 = scalefac[sfb];\n            }\n\n            if (s1 < 16 && s2 < 8)\n                continue;\n\n            if (cod_info.subblock_gain[window] >= 7)\n                return true;\n\n            /*\n             * even though there is no scalefactor for sfb12 subblock gain\n             * affects upper frequencies too, that's why we have to go up to\n             * SBMAX_s\n             */\n            cod_info.subblock_gain[window]++;\n            var j = gfc.scalefac_band.l[cod_info.sfb_lmax];\n            for (sfb = cod_info.sfb_lmax + window; sfb < cod_info.sfbmax; sfb += 3) {\n                var amp;\n                var width = cod_info.width[sfb];\n                var s = scalefac[sfb];\n                assert$21(s >= 0);\n                s = s - (4 >> cod_info.scalefac_scale);\n                if (s >= 0) {\n                    scalefac[sfb] = s;\n                    j += width * 3;\n                    continue;\n                }\n\n                scalefac[sfb] = 0;\n                {\n                    var gain = 210 + (s << (cod_info.scalefac_scale + 1));\n                    amp = qupvt.IPOW20(gain);\n                }\n                j += width * (window + 1);\n                for (var l = -width; l < 0; l++) {\n                    xrpow[j + l] *= amp;\n                    if (xrpow[j + l] > cod_info.xrpow_max)\n                        cod_info.xrpow_max = xrpow[j + l];\n                }\n                j += width * (3 - window - 1);\n            }\n\n            {\n                var amp = qupvt.IPOW20(202);\n                j += cod_info.width[sfb] * (window + 1);\n                for (var l = -cod_info.width[sfb]; l < 0; l++) {\n                    xrpow[j + l] *= amp;\n                    if (xrpow[j + l] > cod_info.xrpow_max)\n                        cod_info.xrpow_max = xrpow[j + l];\n                }\n            }\n        }\n        return false;\n    }\n\n    /**\n     * <PRE>\n     *  Takehiro Tominaga /date??\n     *  Robert Hegemann 2000-09-06: made a function of it\n     *\n     *  amplifies scalefactor bands,\n     *   - if all are already amplified returns 0\n     *   - if some bands are amplified too much:\n     *      * try to increase scalefac_scale\n     *      * if already scalefac_scale was set\n     *          try on short blocks to increase subblock gain\n     * </PRE>\n     */\n    function balance_noise(gfp, cod_info, distort, xrpow, bRefine) {\n        var gfc = gfp.internal_flags;\n\n        amp_scalefac_bands(gfp, cod_info, distort, xrpow, bRefine);\n\n        /*\n         * check to make sure we have not amplified too much loop_break returns\n         * 0 if there is an unamplified scalefac scale_bitcount returns 0 if no\n         * scalefactors are too large\n         */\n\n        var status = loop_break(cod_info);\n\n        if (status)\n            return false;\n        /* all bands amplified */\n\n        /*\n         * not all scalefactors have been amplified. so these scalefacs are\n         * possibly valid. encode them:\n         */\n        if (gfc.mode_gr == 2)\n            status = tk.scale_bitcount(cod_info);\n        else\n            status = tk.scale_bitcount_lsf(gfc, cod_info);\n\n        if (!status)\n            return true;\n        /* amplified some bands not exceeding limits */\n\n        /*\n         * some scalefactors are too large. lets try setting scalefac_scale=1\n         */\n        if (gfc.noise_shaping > 1) {\n            Arrays$21.fill(gfc.pseudohalf, 0);\n            if (0 == cod_info.scalefac_scale) {\n                inc_scalefac_scale(cod_info, xrpow);\n                status = false;\n            } else {\n                if (cod_info.block_type == Encoder_1.SHORT_TYPE\n                    && gfc.subblock_gain > 0) {\n                    status = (inc_subblock_gain(gfc, cod_info, xrpow) || loop_break(cod_info));\n                }\n            }\n        }\n\n        if (!status) {\n            if (gfc.mode_gr == 2)\n                status = tk.scale_bitcount(cod_info);\n            else\n                status = tk.scale_bitcount_lsf(gfc, cod_info);\n        }\n        return !status;\n    }\n\n    /**\n     * <PRE>\n     *  Function: The outer iteration loop controls the masking conditions\n     *  of all scalefactorbands. It computes the best scalefac and\n     *  global gain. This module calls the inner iteration loop\n     *\n     *  mt 5/99 completely rewritten to allow for bit reservoir control,\n     *  mid/side channels with L/R or mid/side masking thresholds,\n     *  and chooses best quantization instead of last quantization when\n     *  no distortion free quantization can be found.\n     *\n     *  added VBR support mt 5/99\n     *\n     *  some code shuffle rh 9/00\n     * </PRE>\n     *\n     * @param l3_xmin\n     *            allowed distortion\n     * @param xrpow\n     *            coloured magnitudes of spectral\n     * @param targ_bits\n     *            maximum allowed bits\n     */\n    this.outer_loop = function (gfp, cod_info, l3_xmin, xrpow, ch, targ_bits) {\n        var gfc = gfp.internal_flags;\n        var cod_info_w = new GrInfo_1();\n        var save_xrpow = new_float$21(576);\n        var distort = new_float$21(L3Side_1.SFBMAX);\n        var best_noise_info = new CalcNoiseResult_1();\n        var better;\n        var prev_noise = new CalcNoiseData_1();\n        var best_part2_3_length = 9999999;\n        var bEndOfSearch = false;\n        var bRefine = false;\n        var best_ggain_pass1 = 0;\n\n        bin_search_StepSize(gfc, cod_info, targ_bits, ch, xrpow);\n\n        if (0 == gfc.noise_shaping)\n        /* fast mode, no noise shaping, we are ready */\n            return 100;\n        /* default noise_info.over_count */\n\n        /* compute the distortion in this quantization */\n        /* coefficients and thresholds both l/r (or both mid/side) */\n        qupvt.calc_noise(cod_info, l3_xmin, distort, best_noise_info,\n            prev_noise);\n        best_noise_info.bits = cod_info.part2_3_length;\n\n        cod_info_w.assign(cod_info);\n        var age = 0;\n        System$21.arraycopy(xrpow, 0, save_xrpow, 0, 576);\n\n        while (!bEndOfSearch) {\n            /* BEGIN MAIN LOOP */\n            do {\n                var noise_info = new CalcNoiseResult_1();\n                var search_limit;\n                var maxggain = 255;\n\n                /*\n                 * When quantization with no distorted bands is found, allow up\n                 * to X new unsuccesful tries in serial. This gives us more\n                 * possibilities for different quant_compare modes. Much more\n                 * than 3 makes not a big difference, it is only slower.\n                 */\n\n                if ((gfc.substep_shaping & 2) != 0) {\n                    search_limit = 20;\n                } else {\n                    search_limit = 3;\n                }\n\n                /*\n                 * Check if the last scalefactor band is distorted. in VBR mode\n                 * we can't get rid of the distortion, so quit now and VBR mode\n                 * will try again with more bits. (makes a 10% speed increase,\n                 * the files I tested were binary identical, 2000/05/20 Robert\n                 * Hegemann) distort[] > 1 means noise > allowed noise\n                 */\n                if (gfc.sfb21_extra) {\n                    if (distort[cod_info_w.sfbmax] > 1.0)\n                        break;\n                    if (cod_info_w.block_type == Encoder_1.SHORT_TYPE\n                        && (distort[cod_info_w.sfbmax + 1] > 1.0 || distort[cod_info_w.sfbmax + 2] > 1.0))\n                        break;\n                }\n\n                /* try a new scalefactor conbination on cod_info_w */\n                if (!balance_noise(gfp, cod_info_w, distort, xrpow, bRefine))\n                    break;\n                if (cod_info_w.scalefac_scale != 0)\n                    maxggain = 254;\n\n                /*\n                 * inner_loop starts with the initial quantization step computed\n                 * above and slowly increases until the bits < huff_bits. Thus\n                 * it is important not to start with too large of an inital\n                 * quantization step. Too small is ok, but inner_loop will take\n                 * longer\n                 */\n                var huff_bits = targ_bits - cod_info_w.part2_length;\n                if (huff_bits <= 0)\n                    break;\n\n                /*\n                 * increase quantizer stepsize until needed bits are below\n                 * maximum\n                 */\n                while ((cod_info_w.part2_3_length = tk.count_bits(gfc, xrpow,\n                    cod_info_w, prev_noise)) > huff_bits\n                && cod_info_w.global_gain <= maxggain)\n                    cod_info_w.global_gain++;\n\n                if (cod_info_w.global_gain > maxggain)\n                    break;\n\n                if (best_noise_info.over_count == 0) {\n\n                    while ((cod_info_w.part2_3_length = tk.count_bits(gfc,\n                        xrpow, cod_info_w, prev_noise)) > best_part2_3_length\n                    && cod_info_w.global_gain <= maxggain)\n                        cod_info_w.global_gain++;\n\n                    if (cod_info_w.global_gain > maxggain)\n                        break;\n                }\n\n                /* compute the distortion in this quantization */\n                qupvt.calc_noise(cod_info_w, l3_xmin, distort, noise_info,\n                    prev_noise);\n                noise_info.bits = cod_info_w.part2_3_length;\n\n                /*\n                 * check if this quantization is better than our saved\n                 * quantization\n                 */\n                if (cod_info.block_type != Encoder_1.SHORT_TYPE) {\n                    // NORM, START or STOP type\n                    better = gfp.quant_comp;\n                } else\n                    better = gfp.quant_comp_short;\n\n                better = quant_compare(better, best_noise_info, noise_info,\n                    cod_info_w, distort) ? 1 : 0;\n\n                /* save data so we can restore this quantization later */\n                if (better != 0) {\n                    best_part2_3_length = cod_info.part2_3_length;\n                    best_noise_info = noise_info;\n                    cod_info.assign(cod_info_w);\n                    age = 0;\n                    /* save data so we can restore this quantization later */\n                    /* store for later reuse */\n                    System$21.arraycopy(xrpow, 0, save_xrpow, 0, 576);\n                } else {\n                    /* early stop? */\n                    if (gfc.full_outer_loop == 0) {\n                        if (++age > search_limit\n                            && best_noise_info.over_count == 0)\n                            break;\n                        if ((gfc.noise_shaping_amp == 3) && bRefine && age > 30)\n                            break;\n                        if ((gfc.noise_shaping_amp == 3)\n                            && bRefine\n                            && (cod_info_w.global_gain - best_ggain_pass1) > 15)\n                            break;\n                    }\n                }\n            } while ((cod_info_w.global_gain + cod_info_w.scalefac_scale) < 255);\n\n            if (gfc.noise_shaping_amp == 3) {\n                if (!bRefine) {\n                    /* refine search */\n                    cod_info_w.assign(cod_info);\n                    System$21.arraycopy(save_xrpow, 0, xrpow, 0, 576);\n                    age = 0;\n                    best_ggain_pass1 = cod_info_w.global_gain;\n\n                    bRefine = true;\n                } else {\n                    /* search already refined, stop */\n                    bEndOfSearch = true;\n                }\n\n            } else {\n                bEndOfSearch = true;\n            }\n        }\n\n        assert$21((cod_info.global_gain + cod_info.scalefac_scale) <= 255);\n        /*\n         * finish up\n         */\n        if (gfp.VBR == VbrMode$21.vbr_rh || gfp.VBR == VbrMode$21.vbr_mtrh)\n        /* restore for reuse on next try */\n            System$21.arraycopy(save_xrpow, 0, xrpow, 0, 576);\n        /*\n         * do the 'substep shaping'\n         */\n        else if ((gfc.substep_shaping & 1) != 0)\n            trancate_smallspectrums(gfc, cod_info, l3_xmin, xrpow);\n\n        return best_noise_info.over_count;\n    };\n\n    /**\n     * Robert Hegemann 2000-09-06\n     *\n     * update reservoir status after FINAL quantization/bitrate\n     */\n    this.iteration_finish_one = function (gfc, gr, ch) {\n        var l3_side = gfc.l3_side;\n        var cod_info = l3_side.tt[gr][ch];\n\n        /*\n         * try some better scalefac storage\n         */\n        tk.best_scalefac_store(gfc, gr, ch, l3_side);\n\n        /*\n         * best huffman_divide may save some bits too\n         */\n        if (gfc.use_best_huffman == 1)\n            tk.best_huffman_divide(gfc, cod_info);\n\n        /*\n         * update reservoir status after FINAL quantization/bitrate\n         */\n        rv.ResvAdjust(gfc, cod_info);\n    };\n\n    /**\n     *\n     * 2000-09-04 Robert Hegemann\n     *\n     * @param l3_xmin\n     *            allowed distortion of the scalefactor\n     * @param xrpow\n     *            coloured magnitudes of spectral values\n     */\n    this.VBR_encode_granule = function (gfp, cod_info, l3_xmin, xrpow, ch, min_bits, max_bits) {\n        var gfc = gfp.internal_flags;\n        var bst_cod_info = new GrInfo_1();\n        var bst_xrpow = new_float$21(576);\n        var Max_bits = max_bits;\n        var real_bits = max_bits + 1;\n        var this_bits = (max_bits + min_bits) / 2;\n        var dbits, over, found = 0;\n        var sfb21_extra = gfc.sfb21_extra;\n\n        assert$21(Max_bits <= LameInternalFlags.MAX_BITS_PER_CHANNEL);\n        Arrays$21.fill(bst_cod_info.l3_enc, 0);\n\n        /*\n         * search within round about 40 bits of optimal\n         */\n        do {\n            assert$21(this_bits >= min_bits);\n            assert$21(this_bits <= max_bits);\n            assert$21(min_bits <= max_bits);\n\n            if (this_bits > Max_bits - 42)\n                gfc.sfb21_extra = false;\n            else\n                gfc.sfb21_extra = sfb21_extra;\n\n            over = outer_loop(gfp, cod_info, l3_xmin, xrpow, ch, this_bits);\n\n            /*\n             * is quantization as good as we are looking for ? in this case: is\n             * no scalefactor band distorted?\n             */\n            if (over <= 0) {\n                found = 1;\n                /*\n                 * now we know it can be done with \"real_bits\" and maybe we can\n                 * skip some iterations\n                 */\n                real_bits = cod_info.part2_3_length;\n\n                /*\n                 * store best quantization so far\n                 */\n                bst_cod_info.assign(cod_info);\n                System$21.arraycopy(xrpow, 0, bst_xrpow, 0, 576);\n\n                /*\n                 * try with fewer bits\n                 */\n                max_bits = real_bits - 32;\n                dbits = max_bits - min_bits;\n                this_bits = (max_bits + min_bits) / 2;\n            } else {\n                /*\n                 * try with more bits\n                 */\n                min_bits = this_bits + 32;\n                dbits = max_bits - min_bits;\n                this_bits = (max_bits + min_bits) / 2;\n\n                if (found != 0) {\n                    found = 2;\n                    /*\n                     * start again with best quantization so far\n                     */\n                    cod_info.assign(bst_cod_info);\n                    System$21.arraycopy(bst_xrpow, 0, xrpow, 0, 576);\n                }\n            }\n        } while (dbits > 12);\n\n        gfc.sfb21_extra = sfb21_extra;\n\n        /*\n         * found=0 => nothing found, use last one found=1 => we just found the\n         * best and left the loop found=2 => we restored a good one and have now\n         * l3_enc to restore too\n         */\n        if (found == 2) {\n            System$21.arraycopy(bst_cod_info.l3_enc, 0, cod_info.l3_enc, 0, 576);\n        }\n        assert$21(cod_info.part2_3_length <= Max_bits);\n    };\n\n    /**\n     * Robert Hegemann 2000-09-05\n     *\n     * calculates * how many bits are available for analog silent granules * how\n     * many bits to use for the lowest allowed bitrate * how many bits each\n     * bitrate would provide\n     */\n    this.get_framebits = function (gfp, frameBits) {\n        var gfc = gfp.internal_flags;\n\n        /*\n         * always use at least this many bits per granule per channel unless we\n         * detect analog silence, see below\n         */\n        gfc.bitrate_index = gfc.VBR_min_bitrate;\n        var bitsPerFrame = bs.getframebits(gfp);\n\n        /*\n         * bits for analog silence\n         */\n        gfc.bitrate_index = 1;\n        bitsPerFrame = bs.getframebits(gfp);\n\n        for (var i = 1; i <= gfc.VBR_max_bitrate; i++) {\n            gfc.bitrate_index = i;\n            var mb = new MeanBits(bitsPerFrame);\n            frameBits[i] = rv.ResvFrameBegin(gfp, mb);\n            bitsPerFrame = mb.bits;\n        }\n    };\n\n    /* RH: this one needs to be overhauled sometime */\n\n    /**\n     * <PRE>\n     *  2000-09-04 Robert Hegemann\n     *\n     *  * converts LR to MS coding when necessary\n     *  * calculates allowed/adjusted quantization noise amounts\n     *  * detects analog silent frames\n     *\n     *  some remarks:\n     *  - lower masking depending on Quality setting\n     *  - quality control together with adjusted ATH MDCT scaling\n     *    on lower quality setting allocate more noise from\n     *    ATH masking, and on higher quality setting allocate\n     *    less noise from ATH masking.\n     *  - experiments show that going more than 2dB over GPSYCHO's\n     *    limits ends up in very annoying artefacts\n     * </PRE>\n     */\n    this.VBR_old_prepare = function (gfp, pe, ms_ener_ratio, ratio, l3_xmin, frameBits, min_bits,\n                                     max_bits, bands) {\n        var gfc = gfp.internal_flags;\n\n        var masking_lower_db, adjust = 0.0;\n        var analog_silence = 1;\n        var bits = 0;\n\n        gfc.bitrate_index = gfc.VBR_max_bitrate;\n        var avg = rv.ResvFrameBegin(gfp, new MeanBits(0)) / gfc.mode_gr;\n\n        get_framebits(gfp, frameBits);\n\n        for (var gr = 0; gr < gfc.mode_gr; gr++) {\n            var mxb = qupvt.on_pe(gfp, pe, max_bits[gr], avg, gr, 0);\n            if (gfc.mode_ext == Encoder_1.MPG_MD_MS_LR) {\n                ms_convert(gfc.l3_side, gr);\n                qupvt.reduce_side(max_bits[gr], ms_ener_ratio[gr], avg, mxb);\n            }\n            for (var ch = 0; ch < gfc.channels_out; ++ch) {\n                var cod_info = gfc.l3_side.tt[gr][ch];\n\n                if (cod_info.block_type != Encoder_1.SHORT_TYPE) {\n                    // NORM, START or STOP type\n                    adjust = 1.28 / (1 + Math\n                            .exp(3.5 - pe[gr][ch] / 300.)) - 0.05;\n                    masking_lower_db = gfc.PSY.mask_adjust - adjust;\n                } else {\n                    adjust = 2.56 / (1 + Math\n                            .exp(3.5 - pe[gr][ch] / 300.)) - 0.14;\n                    masking_lower_db = gfc.PSY.mask_adjust_short - adjust;\n                }\n                gfc.masking_lower = Math.pow(10.0,\n                    masking_lower_db * 0.1);\n\n                init_outer_loop(gfc, cod_info);\n                bands[gr][ch] = qupvt.calc_xmin(gfp, ratio[gr][ch], cod_info,\n                    l3_xmin[gr][ch]);\n                if (bands[gr][ch] != 0)\n                    analog_silence = 0;\n\n                min_bits[gr][ch] = 126;\n\n                bits += max_bits[gr][ch];\n            }\n        }\n        for (var gr = 0; gr < gfc.mode_gr; gr++) {\n            for (var ch = 0; ch < gfc.channels_out; ch++) {\n                if (bits > frameBits[gfc.VBR_max_bitrate]) {\n                    max_bits[gr][ch] *= frameBits[gfc.VBR_max_bitrate];\n                    max_bits[gr][ch] /= bits;\n                }\n                if (min_bits[gr][ch] > max_bits[gr][ch])\n                    min_bits[gr][ch] = max_bits[gr][ch];\n\n            }\n            /* for ch */\n        }\n        /* for gr */\n\n        return analog_silence;\n    };\n\n    this.bitpressure_strategy = function (gfc, l3_xmin, min_bits, max_bits) {\n        for (var gr = 0; gr < gfc.mode_gr; gr++) {\n            for (var ch = 0; ch < gfc.channels_out; ch++) {\n                var gi = gfc.l3_side.tt[gr][ch];\n                var pxmin = l3_xmin[gr][ch];\n                var pxminPos = 0;\n                for (var sfb = 0; sfb < gi.psy_lmax; sfb++)\n                    pxmin[pxminPos++] *= 1. + .029 * sfb * sfb\n                        / Encoder_1.SBMAX_l / Encoder_1.SBMAX_l;\n\n                if (gi.block_type == Encoder_1.SHORT_TYPE) {\n                    for (var sfb = gi.sfb_smin; sfb < Encoder_1.SBMAX_s; sfb++) {\n                        pxmin[pxminPos++] *= 1. + .029 * sfb * sfb\n                            / Encoder_1.SBMAX_s / Encoder_1.SBMAX_s;\n                        pxmin[pxminPos++] *= 1. + .029 * sfb * sfb\n                            / Encoder_1.SBMAX_s / Encoder_1.SBMAX_s;\n                        pxmin[pxminPos++] *= 1. + .029 * sfb * sfb\n                            / Encoder_1.SBMAX_s / Encoder_1.SBMAX_s;\n                    }\n                }\n                max_bits[gr][ch] = 0 | Math.max(min_bits[gr][ch],\n                        0.9 * max_bits[gr][ch]);\n            }\n        }\n    };\n\n    this.VBR_new_prepare = function (gfp, pe, ratio, l3_xmin, frameBits, max_bits) {\n        var gfc = gfp.internal_flags;\n\n        var analog_silence = 1;\n        var avg = 0, bits = 0;\n        var maximum_framebits;\n\n        if (!gfp.free_format) {\n            gfc.bitrate_index = gfc.VBR_max_bitrate;\n\n            var mb = new MeanBits(avg);\n            rv.ResvFrameBegin(gfp, mb);\n            avg = mb.bits;\n\n            get_framebits(gfp, frameBits);\n            maximum_framebits = frameBits[gfc.VBR_max_bitrate];\n        } else {\n            gfc.bitrate_index = 0;\n            var mb = new MeanBits(avg);\n            maximum_framebits = rv.ResvFrameBegin(gfp, mb);\n            avg = mb.bits;\n            frameBits[0] = maximum_framebits;\n        }\n\n        for (var gr = 0; gr < gfc.mode_gr; gr++) {\n            qupvt.on_pe(gfp, pe, max_bits[gr], avg, gr, 0);\n            if (gfc.mode_ext == Encoder_1.MPG_MD_MS_LR) {\n                ms_convert(gfc.l3_side, gr);\n            }\n            for (var ch = 0; ch < gfc.channels_out; ++ch) {\n                var cod_info = gfc.l3_side.tt[gr][ch];\n\n                gfc.masking_lower = Math.pow(10.0,\n                    gfc.PSY.mask_adjust * 0.1);\n\n                init_outer_loop(gfc, cod_info);\n                if (0 != qupvt.calc_xmin(gfp, ratio[gr][ch], cod_info,\n                        l3_xmin[gr][ch]))\n                    analog_silence = 0;\n\n                bits += max_bits[gr][ch];\n            }\n        }\n        for (var gr = 0; gr < gfc.mode_gr; gr++) {\n            for (var ch = 0; ch < gfc.channels_out; ch++) {\n                if (bits > maximum_framebits) {\n                    max_bits[gr][ch] *= maximum_framebits;\n                    max_bits[gr][ch] /= bits;\n                }\n\n            }\n            /* for ch */\n        }\n        /* for gr */\n\n        return analog_silence;\n    };\n\n    /**\n     * calculates target bits for ABR encoding\n     *\n     * mt 2000/05/31\n     */\n    this.calc_target_bits = function (gfp, pe, ms_ener_ratio, targ_bits, analog_silence_bits, max_frame_bits) {\n        var gfc = gfp.internal_flags;\n        var l3_side = gfc.l3_side;\n        var res_factor;\n        var gr, ch, totbits, mean_bits = 0;\n\n        gfc.bitrate_index = gfc.VBR_max_bitrate;\n        var mb = new MeanBits(mean_bits);\n        max_frame_bits[0] = rv.ResvFrameBegin(gfp, mb);\n        mean_bits = mb.bits;\n\n        gfc.bitrate_index = 1;\n        mean_bits = bs.getframebits(gfp) - gfc.sideinfo_len * 8;\n        analog_silence_bits[0] = mean_bits / (gfc.mode_gr * gfc.channels_out);\n\n        mean_bits = gfp.VBR_mean_bitrate_kbps * gfp.framesize * 1000;\n        if ((gfc.substep_shaping & 1) != 0)\n            mean_bits *= 1.09;\n        mean_bits /= gfp.out_samplerate;\n        mean_bits -= gfc.sideinfo_len * 8;\n        mean_bits /= (gfc.mode_gr * gfc.channels_out);\n\n        /**\n         * <PRE>\n         *           res_factor is the percentage of the target bitrate that should\n         *           be used on average.  the remaining bits are added to the\n         *           bitreservoir and used for difficult to encode frames.\n         *\n         *           Since we are tracking the average bitrate, we should adjust\n         *           res_factor \"on the fly\", increasing it if the average bitrate\n         *           is greater than the requested bitrate, and decreasing it\n         *           otherwise.  Reasonable ranges are from .9 to 1.0\n         *\n         *           Until we get the above suggestion working, we use the following\n         *           tuning:\n         *           compression ratio    res_factor\n         *           5.5  (256kbps)         1.0      no need for bitreservoir\n         *           11   (128kbps)         .93      7% held for reservoir\n         *\n         *           with linear interpolation for other values.\n         * </PRE>\n         */\n        res_factor = .93 + .07 * (11.0 - gfp.compression_ratio)\n            / (11.0 - 5.5);\n        if (res_factor < .90)\n            res_factor = .90;\n        if (res_factor > 1.00)\n            res_factor = 1.00;\n\n        for (gr = 0; gr < gfc.mode_gr; gr++) {\n            var sum = 0;\n            for (ch = 0; ch < gfc.channels_out; ch++) {\n                targ_bits[gr][ch] = (int)(res_factor * mean_bits);\n\n                if (pe[gr][ch] > 700) {\n                    var add_bits = (int)((pe[gr][ch] - 700) / 1.4);\n\n                    var cod_info = l3_side.tt[gr][ch];\n                    targ_bits[gr][ch] = (int)(res_factor * mean_bits);\n\n                    /* short blocks use a little extra, no matter what the pe */\n                    if (cod_info.block_type == Encoder_1.SHORT_TYPE) {\n                        if (add_bits < mean_bits / 2)\n                            add_bits = mean_bits / 2;\n                    }\n                    /* at most increase bits by 1.5*average */\n                    if (add_bits > mean_bits * 3 / 2)\n                        add_bits = mean_bits * 3 / 2;\n                    else if (add_bits < 0)\n                        add_bits = 0;\n\n                    targ_bits[gr][ch] += add_bits;\n                }\n                if (targ_bits[gr][ch] > LameInternalFlags.MAX_BITS_PER_CHANNEL) {\n                    targ_bits[gr][ch] = LameInternalFlags.MAX_BITS_PER_CHANNEL;\n                }\n                sum += targ_bits[gr][ch];\n            }\n            /* for ch */\n            if (sum > LameInternalFlags.MAX_BITS_PER_GRANULE) {\n                for (ch = 0; ch < gfc.channels_out; ++ch) {\n                    targ_bits[gr][ch] *= LameInternalFlags.MAX_BITS_PER_GRANULE;\n                    targ_bits[gr][ch] /= sum;\n                }\n            }\n        }\n        /* for gr */\n\n        if (gfc.mode_ext == Encoder_1.MPG_MD_MS_LR)\n            for (gr = 0; gr < gfc.mode_gr; gr++) {\n                qupvt.reduce_side(targ_bits[gr], ms_ener_ratio[gr], mean_bits\n                    * gfc.channels_out,\n                    LameInternalFlags.MAX_BITS_PER_GRANULE);\n            }\n\n        /*\n         * sum target bits\n         */\n        totbits = 0;\n        for (gr = 0; gr < gfc.mode_gr; gr++) {\n            for (ch = 0; ch < gfc.channels_out; ch++) {\n                if (targ_bits[gr][ch] > LameInternalFlags.MAX_BITS_PER_CHANNEL)\n                    targ_bits[gr][ch] = LameInternalFlags.MAX_BITS_PER_CHANNEL;\n                totbits += targ_bits[gr][ch];\n            }\n        }\n\n        /*\n         * repartion target bits if needed\n         */\n        if (totbits > max_frame_bits[0]) {\n            for (gr = 0; gr < gfc.mode_gr; gr++) {\n                for (ch = 0; ch < gfc.channels_out; ch++) {\n                    targ_bits[gr][ch] *= max_frame_bits[0];\n                    targ_bits[gr][ch] /= totbits;\n                }\n            }\n        }\n    };\n\n}\n\nvar Quantize_1 = Quantize$1;\n\n/*\n *      bit reservoir source file\n *\n *      Copyright (c) 1999-2000 Mark Taylor\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Library General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\n * Boston, MA 02111-1307, USA.\n */\n\n/* $Id: Reservoir.java,v 1.9 2011/05/24 20:48:06 kenchis Exp $ */\n\n//package mp3;\n\n/**\n * ResvFrameBegin:<BR>\n * Called (repeatedly) at the beginning of a frame. Updates the maximum size of\n * the reservoir, and checks to make sure main_data_begin was set properly by\n * the formatter<BR>\n * Background information:\n * \n * This is the original text from the ISO standard. Because of sooo many bugs\n * and irritations correcting comments are added in brackets []. A '^W' means\n * you should remove the last word.\n * \n * <PRE>\n *  1. The following rule can be used to calculate the maximum\n *     number of bits used for one granule [^W frame]:<BR>\n *     At the highest possible bitrate of Layer III (320 kbps\n *     per stereo signal [^W^W^W], 48 kHz) the frames must be of\n *     [^W^W^W are designed to have] constant length, i.e.\n *     one buffer [^W^W the frame] length is:<BR>\n * \n *         320 kbps * 1152/48 kHz = 7680 bit = 960 byte\n * \n *     This value is used as the maximum buffer per channel [^W^W] at\n *     lower bitrates [than 320 kbps]. At 64 kbps mono or 128 kbps\n *     stereo the main granule length is 64 kbps * 576/48 kHz = 768 bit\n *     [per granule and channel] at 48 kHz sampling frequency.\n *     This means that there is a maximum deviation (short time buffer\n *     [= reservoir]) of 7680 - 2*2*768 = 4608 bits is allowed at 64 kbps.\n *     The actual deviation is equal to the number of bytes [with the\n *     meaning of octets] denoted by the main_data_end offset pointer.\n *     The actual maximum deviation is (2^9-1)*8 bit = 4088 bits\n *     [for MPEG-1 and (2^8-1)*8 bit for MPEG-2, both are hard limits].\n *     ... The xchange of buffer bits between the left and right channel\n *     is allowed without restrictions [exception: dual channel].\n *     Because of the [constructed] constraint on the buffer size\n *     main_data_end is always set to 0 in the case of bit_rate_index==14,\n *     i.e. data rate 320 kbps per stereo signal [^W^W^W]. In this case\n *     all data are allocated between adjacent header [^W sync] words\n *     [, i.e. there is no buffering at all].\n * </PRE>\n */\n\n\nvar assert$23 = common.assert;\n\nfunction Reservoir$1() {\n\tvar bs;\n\n\tthis.setModules  = function(_bs) {\n\t\tbs = _bs;\n\t};\n\n\tthis.ResvFrameBegin = function(gfp, mean_bits) {\n\t\tvar gfc = gfp.internal_flags;\n\t\tvar maxmp3buf;\n\t\tvar l3_side = gfc.l3_side;\n\n\t\tvar frameLength = bs.getframebits(gfp);\n\t\tmean_bits.bits = (frameLength - gfc.sideinfo_len * 8) / gfc.mode_gr;\n\n\t\t/**\n\t\t * <PRE>\n\t\t *  Meaning of the variables:\n\t\t *      resvLimit: (0, 8, ..., 8*255 (MPEG-2), 8*511 (MPEG-1))\n\t\t *          Number of bits can be stored in previous frame(s) due to\n\t\t *          counter size constaints\n\t\t *      maxmp3buf: ( ??? ... 8*1951 (MPEG-1 and 2), 8*2047 (MPEG-2.5))\n\t\t *          Number of bits allowed to encode one frame (you can take 8*511 bit\n\t\t *          from the bit reservoir and at most 8*1440 bit from the current\n\t\t *          frame (320 kbps, 32 kHz), so 8*1951 bit is the largest possible\n\t\t *          value for MPEG-1 and -2)\n\t\t * \n\t\t *          maximum allowed granule/channel size times 4 = 8*2047 bits.,\n\t\t *          so this is the absolute maximum supported by the format.\n\t\t * \n\t\t * \n\t\t *      fullFrameBits:  maximum number of bits available for encoding\n\t\t *                      the current frame.\n\t\t * \n\t\t *      mean_bits:      target number of bits per granule.\n\t\t * \n\t\t *      frameLength:\n\t\t * \n\t\t *      gfc.ResvMax:   maximum allowed reservoir\n\t\t * \n\t\t *      gfc.ResvSize:  current reservoir size\n\t\t * \n\t\t *      l3_side.resvDrain_pre:\n\t\t *         ancillary data to be added to previous frame:\n\t\t *         (only usefull in VBR modes if it is possible to have\n\t\t *         maxmp3buf < fullFrameBits)).  Currently disabled,\n\t\t *         see #define NEW_DRAIN\n\t\t *         2010-02-13: RH now enabled, it seems to be needed for CBR too,\n\t\t *                     as there exists one example, where the FhG decoder\n\t\t *                     can't decode a -b320 CBR file anymore.\n\t\t * \n\t\t *      l3_side.resvDrain_post:\n\t\t *         ancillary data to be added to this frame:\n\t\t * \n\t\t * </PRE>\n\t\t */\n\n\t\t/* main_data_begin has 9 bits in MPEG-1, 8 bits MPEG-2 */\n\t\tvar resvLimit = (8 * 256) * gfc.mode_gr - 8;\n\n\t\t/*\n\t\t * maximum allowed frame size. dont use more than this number of bits,\n\t\t * even if the frame has the space for them:\n\t\t */\n\t\tif (gfp.brate > 320) {\n\t\t\t/* in freeformat the buffer is constant */\n\t\t\tmaxmp3buf = 8 * ((int) ((gfp.brate * 1000)\n\t\t\t\t\t/ (gfp.out_samplerate / 1152) / 8 + .5));\n\t\t} else {\n\t\t\t/*\n\t\t\t * all mp3 decoders should have enough buffer to handle this value:\n\t\t\t * size of a 320kbps 32kHz frame\n\t\t\t */\n\t\t\tmaxmp3buf = 8 * 1440;\n\n\t\t\t/*\n\t\t\t * Bouvigne suggests this more lax interpretation of the ISO doc\n\t\t\t * instead of using 8*960.\n\t\t\t */\n\n\t\t\tif (gfp.strict_ISO) {\n\t\t\t\tmaxmp3buf = 8 * ((int) (320000 / (gfp.out_samplerate / 1152) / 8 + .5));\n\t\t\t}\n\t\t}\n\n\t\tgfc.ResvMax = maxmp3buf - frameLength;\n\t\tif (gfc.ResvMax > resvLimit)\n\t\t\tgfc.ResvMax = resvLimit;\n\t\tif (gfc.ResvMax < 0 || gfp.disable_reservoir)\n\t\t\tgfc.ResvMax = 0;\n\n\t\tvar fullFrameBits = mean_bits.bits * gfc.mode_gr\n\t\t\t\t+ Math.min(gfc.ResvSize, gfc.ResvMax);\n\n\t\tif (fullFrameBits > maxmp3buf)\n\t\t\tfullFrameBits = maxmp3buf;\n\n\t\tassert$23 (0 == gfc.ResvMax % 8);\n\t\tassert$23 (gfc.ResvMax >= 0);\n\n\t\tl3_side.resvDrain_pre = 0;\n\n\t\t// frame analyzer code\n\t\tif (gfc.pinfo != null) {\n\t\t\t/*\n\t\t\t * expected bits per channel per granule [is this also right for\n\t\t\t * mono/stereo, MPEG-1/2 ?]\n\t\t\t */\n\t\t\tgfc.pinfo.mean_bits = mean_bits.bits / 2;\n\t\t\tgfc.pinfo.resvsize = gfc.ResvSize;\n\t\t}\n\n\t\treturn fullFrameBits;\n\t};\n\n\t/**\n\t * returns targ_bits: target number of bits to use for 1 granule<BR>\n\t * extra_bits: amount extra available from reservoir<BR>\n\t * Mark Taylor 4/99\n\t */\n\tthis.ResvMaxBits = function(gfp, mean_bits, targ_bits, cbr) {\n\t\tvar gfc = gfp.internal_flags;\n\t\tvar add_bits;\n        var ResvSize = gfc.ResvSize, ResvMax = gfc.ResvMax;\n\n\t\t/* compensate the saved bits used in the 1st granule */\n\t\tif (cbr != 0)\n\t\t\tResvSize += mean_bits;\n\n\t\tif ((gfc.substep_shaping & 1) != 0)\n\t\t\tResvMax *= 0.9;\n\n\t\ttarg_bits.bits = mean_bits;\n\n\t\t/* extra bits if the reservoir is almost full */\n\t\tif (ResvSize * 10 > ResvMax * 9) {\n\t\t\tadd_bits = ResvSize - (ResvMax * 9) / 10;\n\t\t\ttarg_bits.bits += add_bits;\n\t\t\tgfc.substep_shaping |= 0x80;\n\t\t} else {\n\t\t\tadd_bits = 0;\n\t\t\tgfc.substep_shaping &= 0x7f;\n\t\t\t/*\n\t\t\t * build up reservoir. this builds the reservoir a little slower\n\t\t\t * than FhG. It could simple be mean_bits/15, but this was rigged to\n\t\t\t * always produce 100 (the old value) at 128kbs\n\t\t\t */\n\t\t\tif (!gfp.disable_reservoir && 0 == (gfc.substep_shaping & 1))\n\t\t\t\ttarg_bits.bits -= .1 * mean_bits;\n\t\t}\n\n\t\t/* amount from the reservoir we are allowed to use. ISO says 6/10 */\n\t\tvar extra_bits = (ResvSize < (gfc.ResvMax * 6) / 10 ? ResvSize\n\t\t\t\t: (gfc.ResvMax * 6) / 10);\n\t\textra_bits -= add_bits;\n\n\t\tif (extra_bits < 0)\n\t\t\textra_bits = 0;\n\t\treturn extra_bits;\n\t};\n\n\t/**\n\t * Called after a granule's bit allocation. Readjusts the size of the\n\t * reservoir to reflect the granule's usage.\n\t */\n\tthis.ResvAdjust = function(gfc, gi) {\n\t\tgfc.ResvSize -= gi.part2_3_length + gi.part2_length;\n\t};\n\n\t/**\n\t * Called after all granules in a frame have been allocated. Makes sure that\n\t * the reservoir size is within limits, possibly by adding stuffing bits.\n\t */\n\tthis.ResvFrameEnd = function(gfc, mean_bits) {\n\t\tvar over_bits;\n\t\tvar l3_side = gfc.l3_side;\n\n\t\tgfc.ResvSize += mean_bits * gfc.mode_gr;\n\t\tvar stuffingBits = 0;\n\t\tl3_side.resvDrain_post = 0;\n\t\tl3_side.resvDrain_pre = 0;\n\n\t\t/* we must be byte aligned */\n\t\tif ((over_bits = gfc.ResvSize % 8) != 0)\n\t\t\tstuffingBits += over_bits;\n\n\t\tover_bits = (gfc.ResvSize - stuffingBits) - gfc.ResvMax;\n\t\tif (over_bits > 0) {\n\t\t\tassert$23 (0 == over_bits % 8);\n\t\t\tassert$23 (over_bits >= 0);\n\t\t\tstuffingBits += over_bits;\n\t\t}\n\n\t\t/*\n\t\t * NOTE: enabling the NEW_DRAIN code fixes some problems with FhG\n\t\t * decoder shipped with MS Windows operating systems. Using this, it is\n\t\t * even possible to use Gabriel's lax buffer consideration again, which\n\t\t * assumes, any decoder should have a buffer large enough for a 320 kbps\n\t\t * frame at 32 kHz sample rate.\n\t\t * \n\t\t * old drain code: lame -b320 BlackBird.wav --. does not play with\n\t\t * GraphEdit.exe using FhG decoder V1.5 Build 50\n\t\t * \n\t\t * new drain code: lame -b320 BlackBird.wav --. plays fine with\n\t\t * GraphEdit.exe using FhG decoder V1.5 Build 50\n\t\t * \n\t\t * Robert Hegemann, 2010-02-13.\n\t\t */\n\t\t/*\n\t\t * drain as many bits as possible into previous frame ancillary data In\n\t\t * particular, in VBR mode ResvMax may have changed, and we have to make\n\t\t * sure main_data_begin does not create a reservoir bigger than ResvMax\n\t\t * mt 4/00\n\t\t */\n\t\t{\n\t\t\tvar mdb_bytes = Math.min(l3_side.main_data_begin * 8, stuffingBits) / 8;\n\t\t\tl3_side.resvDrain_pre += 8 * mdb_bytes;\n\t\t\tstuffingBits -= 8 * mdb_bytes;\n\t\t\tgfc.ResvSize -= 8 * mdb_bytes;\n\t\t\tl3_side.main_data_begin -= mdb_bytes;\n\t\t}\n\t\t/* drain the rest into this frames ancillary data */\n\t\tl3_side.resvDrain_post += stuffingBits;\n\t\tgfc.ResvSize -= stuffingBits;\n\t};\n}\n\nvar Reservoir_1 = Reservoir$1;\n\nfunction Version() {\n\n    /**\n     * URL for the LAME website.\n     */\n    var LAME_URL = \"http://www.mp3dev.org/\";\n\n    /**\n     * Major version number.\n     */\n    var LAME_MAJOR_VERSION = 3;\n    /**\n     * Minor version number.\n     */\n    var LAME_MINOR_VERSION = 98;\n    /**\n     * Patch level.\n     */\n    var LAME_PATCH_VERSION = 4;\n\n    /**\n     * Major version number.\n     */\n    var PSY_MAJOR_VERSION = 0;\n    /**\n     * Minor version number.\n     */\n    var PSY_MINOR_VERSION = 93;\n\n    /**\n     * A string which describes the version of LAME.\n     *\n     * @return string which describes the version of LAME\n     */\n    this.getLameVersion = function () {\n        // primary to write screen reports\n        return (LAME_MAJOR_VERSION + \".\" + LAME_MINOR_VERSION + \".\" + LAME_PATCH_VERSION);\n    };\n\n    /**\n     * The short version of the LAME version string.\n     *\n     * @return short version of the LAME version string\n     */\n    this.getLameShortVersion = function () {\n        // Adding date and time to version string makes it harder for output\n        // validation\n        return (LAME_MAJOR_VERSION + \".\" + LAME_MINOR_VERSION + \".\" + LAME_PATCH_VERSION);\n    };\n\n    /**\n     * The shortest version of the LAME version string.\n     *\n     * @return shortest version of the LAME version string\n     */\n    this.getLameVeryShortVersion = function () {\n        // Adding date and time to version string makes it harder for output\n        return (\"LAME\" + LAME_MAJOR_VERSION + \".\" + LAME_MINOR_VERSION + \"r\");\n    };\n\n    /**\n     * String which describes the version of GPSYCHO\n     *\n     * @return string which describes the version of GPSYCHO\n     */\n    this.getPsyVersion = function () {\n        return (PSY_MAJOR_VERSION + \".\" + PSY_MINOR_VERSION);\n    };\n\n    /**\n     * String which is a URL for the LAME website.\n     *\n     * @return string which is a URL for the LAME website\n     */\n    this.getLameUrl = function () {\n        return LAME_URL;\n    };\n\n    /**\n     * Quite useless for a java version, however we are compatible ;-)\n     *\n     * @return \"32bits\"\n     */\n    this.getLameOsBitness = function () {\n        return \"32bits\";\n    };\n\n}\n\nvar Version_1 = Version;\n\nvar System$22 = common.System;\nvar VbrMode$22 = common.VbrMode;\nvar ShortBlock$22 = common.ShortBlock;\nvar Arrays$22 = common.Arrays;\nvar new_byte$22 = common.new_byte;\nvar assert$24 = common.assert;\n\n/**\n * A Vbr header may be present in the ancillary data field of the first frame of\n * an mp3 bitstream<BR>\n * The Vbr header (optionally) contains\n * <UL>\n * <LI>frames total number of audio frames in the bitstream\n * <LI>bytes total number of bytes in the bitstream\n * <LI>toc table of contents\n * </UL>\n *\n * toc (table of contents) gives seek points for random access.<BR>\n * The ith entry determines the seek point for i-percent duration.<BR>\n * seek point in bytes = (toc[i]/256.0) * total_bitstream_bytes<BR>\n * e.g. half duration seek point = (toc[50]/256.0) * total_bitstream_bytes\n */\nVBRTag.NUMTOCENTRIES = 100;\nVBRTag.MAXFRAMESIZE = 2880;\n\nfunction VBRTag() {\n\n    var lame;\n    var bs;\n    var v;\n\n    this.setModules = function (_lame, _bs, _v) {\n        lame = _lame;\n        bs = _bs;\n        v = _v;\n    };\n\n    var FRAMES_FLAG = 0x0001;\n    var BYTES_FLAG = 0x0002;\n    var TOC_FLAG = 0x0004;\n    var VBR_SCALE_FLAG = 0x0008;\n\n    var NUMTOCENTRIES = VBRTag.NUMTOCENTRIES;\n\n    /**\n     * (0xB40) the max freeformat 640 32kHz framesize.\n     */\n    var MAXFRAMESIZE = VBRTag.MAXFRAMESIZE;\n\n    /**\n     * <PRE>\n     *    4 bytes for Header Tag\n     *    4 bytes for Header Flags\n     *  100 bytes for entry (toc)\n     *    4 bytes for frame size\n     *    4 bytes for stream size\n     *    4 bytes for VBR scale. a VBR quality indicator: 0=best 100=worst\n     *   20 bytes for LAME tag.  for example, \"LAME3.12 (beta 6)\"\n     * ___________\n     *  140 bytes\n     * </PRE>\n     */\n    var VBRHEADERSIZE = (NUMTOCENTRIES + 4 + 4 + 4 + 4 + 4);\n\n    var LAMEHEADERSIZE = (VBRHEADERSIZE + 9 + 1 + 1 + 8\n    + 1 + 1 + 3 + 1 + 1 + 2 + 4 + 2 + 2);\n\n    /**\n     * The size of the Xing header MPEG-1, bit rate in kbps.\n     */\n    var XING_BITRATE1 = 128;\n    /**\n     * The size of the Xing header MPEG-2, bit rate in kbps.\n     */\n    var XING_BITRATE2 = 64;\n    /**\n     * The size of the Xing header MPEG-2.5, bit rate in kbps.\n     */\n    var XING_BITRATE25 = 32;\n\n    /**\n     * ISO-8859-1 charset for byte to string operations.\n     */\n    var ISO_8859_1 = null; //Charset.forName(\"ISO-8859-1\");\n\n    /**\n     * VBR header magic string.\n     */\n    var VBRTag0 = \"Xing\";\n    /**\n     * VBR header magic string (VBR == VBRMode.vbr_off).\n     */\n    var VBRTag1 = \"Info\";\n\n    /**\n     * Lookup table for fast CRC-16 computation. Uses the polynomial\n     * x^16+x^15+x^2+1\n     */\n    var crc16Lookup = [0x0000, 0xC0C1, 0xC181, 0x0140,\n        0xC301, 0x03C0, 0x0280, 0xC241, 0xC601, 0x06C0, 0x0780, 0xC741,\n        0x0500, 0xC5C1, 0xC481, 0x0440, 0xCC01, 0x0CC0, 0x0D80, 0xCD41,\n        0x0F00, 0xCFC1, 0xCE81, 0x0E40, 0x0A00, 0xCAC1, 0xCB81, 0x0B40,\n        0xC901, 0x09C0, 0x0880, 0xC841, 0xD801, 0x18C0, 0x1980, 0xD941,\n        0x1B00, 0xDBC1, 0xDA81, 0x1A40, 0x1E00, 0xDEC1, 0xDF81, 0x1F40,\n        0xDD01, 0x1DC0, 0x1C80, 0xDC41, 0x1400, 0xD4C1, 0xD581, 0x1540,\n        0xD701, 0x17C0, 0x1680, 0xD641, 0xD201, 0x12C0, 0x1380, 0xD341,\n        0x1100, 0xD1C1, 0xD081, 0x1040, 0xF001, 0x30C0, 0x3180, 0xF141,\n        0x3300, 0xF3C1, 0xF281, 0x3240, 0x3600, 0xF6C1, 0xF781, 0x3740,\n        0xF501, 0x35C0, 0x3480, 0xF441, 0x3C00, 0xFCC1, 0xFD81, 0x3D40,\n        0xFF01, 0x3FC0, 0x3E80, 0xFE41, 0xFA01, 0x3AC0, 0x3B80, 0xFB41,\n        0x3900, 0xF9C1, 0xF881, 0x3840, 0x2800, 0xE8C1, 0xE981, 0x2940,\n        0xEB01, 0x2BC0, 0x2A80, 0xEA41, 0xEE01, 0x2EC0, 0x2F80, 0xEF41,\n        0x2D00, 0xEDC1, 0xEC81, 0x2C40, 0xE401, 0x24C0, 0x2580, 0xE541,\n        0x2700, 0xE7C1, 0xE681, 0x2640, 0x2200, 0xE2C1, 0xE381, 0x2340,\n        0xE101, 0x21C0, 0x2080, 0xE041, 0xA001, 0x60C0, 0x6180, 0xA141,\n        0x6300, 0xA3C1, 0xA281, 0x6240, 0x6600, 0xA6C1, 0xA781, 0x6740,\n        0xA501, 0x65C0, 0x6480, 0xA441, 0x6C00, 0xACC1, 0xAD81, 0x6D40,\n        0xAF01, 0x6FC0, 0x6E80, 0xAE41, 0xAA01, 0x6AC0, 0x6B80, 0xAB41,\n        0x6900, 0xA9C1, 0xA881, 0x6840, 0x7800, 0xB8C1, 0xB981, 0x7940,\n        0xBB01, 0x7BC0, 0x7A80, 0xBA41, 0xBE01, 0x7EC0, 0x7F80, 0xBF41,\n        0x7D00, 0xBDC1, 0xBC81, 0x7C40, 0xB401, 0x74C0, 0x7580, 0xB541,\n        0x7700, 0xB7C1, 0xB681, 0x7640, 0x7200, 0xB2C1, 0xB381, 0x7340,\n        0xB101, 0x71C0, 0x7080, 0xB041, 0x5000, 0x90C1, 0x9181, 0x5140,\n        0x9301, 0x53C0, 0x5280, 0x9241, 0x9601, 0x56C0, 0x5780, 0x9741,\n        0x5500, 0x95C1, 0x9481, 0x5440, 0x9C01, 0x5CC0, 0x5D80, 0x9D41,\n        0x5F00, 0x9FC1, 0x9E81, 0x5E40, 0x5A00, 0x9AC1, 0x9B81, 0x5B40,\n        0x9901, 0x59C0, 0x5880, 0x9841, 0x8801, 0x48C0, 0x4980, 0x8941,\n        0x4B00, 0x8BC1, 0x8A81, 0x4A40, 0x4E00, 0x8EC1, 0x8F81, 0x4F40,\n        0x8D01, 0x4DC0, 0x4C80, 0x8C41, 0x4400, 0x84C1, 0x8581, 0x4540,\n        0x8701, 0x47C0, 0x4680, 0x8641, 0x8201, 0x42C0, 0x4380, 0x8341,\n        0x4100, 0x81C1, 0x8081, 0x4040];\n\n    /***********************************************************************\n     * Robert Hegemann 2001-01-17\n     ***********************************************************************/\n\n    function addVbr(v, bitrate) {\n        v.nVbrNumFrames++;\n        v.sum += bitrate;\n        v.seen++;\n\n        if (v.seen < v.want) {\n            return;\n        }\n\n        if (v.pos < v.size) {\n            v.bag[v.pos] = v.sum;\n            v.pos++;\n            v.seen = 0;\n        }\n        if (v.pos == v.size) {\n            for (var i = 1; i < v.size; i += 2) {\n                v.bag[i / 2] = v.bag[i];\n            }\n            v.want *= 2;\n            v.pos /= 2;\n        }\n    }\n\n    function xingSeekTable(v, t) {\n        if (v.pos <= 0)\n            return;\n\n        for (var i = 1; i < NUMTOCENTRIES; ++i) {\n            var j = i / NUMTOCENTRIES, act, sum;\n            var indx = 0 | (Math.floor(j * v.pos));\n            if (indx > v.pos - 1)\n                indx = v.pos - 1;\n            act = v.bag[indx];\n            sum = v.sum;\n            var seek_point = 0 | (256. * act / sum);\n            if (seek_point > 255)\n                seek_point = 255;\n            t[i] = 0xff & seek_point;\n        }\n    }\n\n    /**\n     * Add VBR entry, used to fill the VBR TOC entries.\n     *\n     * @param gfp\n     *            global flags\n     */\n    this.addVbrFrame = function (gfp) {\n        var gfc = gfp.internal_flags;\n        var kbps = Tables.bitrate_table[gfp.version][gfc.bitrate_index];\n        assert$24(gfc.VBR_seek_table.bag != null);\n        addVbr(gfc.VBR_seek_table, kbps);\n    };\n\n    /**\n     * Read big endian integer (4-bytes) from header.\n     *\n     * @param buf\n     *            header containing the integer\n     * @param bufPos\n     *            offset into the header\n     * @return extracted integer\n     */\n    function extractInteger(buf, bufPos) {\n        var x = buf[bufPos + 0] & 0xff;\n        x <<= 8;\n        x |= buf[bufPos + 1] & 0xff;\n        x <<= 8;\n        x |= buf[bufPos + 2] & 0xff;\n        x <<= 8;\n        x |= buf[bufPos + 3] & 0xff;\n        return x;\n    }\n\n    /**\n     * Write big endian integer (4-bytes) in the header.\n     *\n     * @param buf\n     *            header to write the integer into\n     * @param bufPos\n     *            offset into the header\n     * @param value\n     *            integer value to write\n     */\n    function createInteger(buf, bufPos, value) {\n        buf[bufPos + 0] = 0xff & ((value >> 24) & 0xff);\n        buf[bufPos + 1] = 0xff & ((value >> 16) & 0xff);\n        buf[bufPos + 2] = 0xff & ((value >> 8) & 0xff);\n        buf[bufPos + 3] = 0xff & (value & 0xff);\n    }\n\n    /**\n     * Write big endian short (2-bytes) in the header.\n     *\n     * @param buf\n     *            header to write the integer into\n     * @param bufPos\n     *            offset into the header\n     * @param value\n     *            integer value to write\n     */\n    function createShort(buf, bufPos, value) {\n        buf[bufPos + 0] = 0xff & ((value >> 8) & 0xff);\n        buf[bufPos + 1] = 0xff & (value & 0xff);\n    }\n\n    /**\n     * Check for magic strings (Xing/Info).\n     *\n     * @param buf\n     *            header to check\n     * @param bufPos\n     *            header offset to check\n     * @return magic string found\n     */\n    function isVbrTag(buf, bufPos) {\n        return new String(buf, bufPos, VBRTag0.length(), ISO_8859_1)\n                .equals(VBRTag0)\n            || new String(buf, bufPos, VBRTag1.length(), ISO_8859_1)\n                .equals(VBRTag1);\n    }\n\n    function shiftInBitsValue(x, n, v) {\n        return 0xff & ((x << n) | (v & ~(-1 << n)));\n    }\n\n    /**\n     * Construct the MP3 header using the settings of the global flags.\n     *\n     * <img src=\"1000px-Mp3filestructure.svg.png\">\n     *\n     * @param gfp\n     *            global flags\n     * @param buffer\n     *            header\n     */\n    function setLameTagFrameHeader(gfp, buffer) {\n        var gfc = gfp.internal_flags;\n\n        // MP3 Sync Word\n        buffer[0] = shiftInBitsValue(buffer[0], 8, 0xff);\n\n        buffer[1] = shiftInBitsValue(buffer[1], 3, 7);\n        buffer[1] = shiftInBitsValue(buffer[1], 1,\n            (gfp.out_samplerate < 16000) ? 0 : 1);\n        // Version\n        buffer[1] = shiftInBitsValue(buffer[1], 1, gfp.version);\n        // 01 == Layer 3\n        buffer[1] = shiftInBitsValue(buffer[1], 2, 4 - 3);\n        // Error protection\n        buffer[1] = shiftInBitsValue(buffer[1], 1, (!gfp.error_protection) ? 1\n            : 0);\n\n        // Bit rate\n        buffer[2] = shiftInBitsValue(buffer[2], 4, gfc.bitrate_index);\n        // Frequency\n        buffer[2] = shiftInBitsValue(buffer[2], 2, gfc.samplerate_index);\n        // Pad. Bit\n        buffer[2] = shiftInBitsValue(buffer[2], 1, 0);\n        // Priv. Bit\n        buffer[2] = shiftInBitsValue(buffer[2], 1, gfp.extension);\n\n        // Mode\n        buffer[3] = shiftInBitsValue(buffer[3], 2, gfp.mode.ordinal());\n        // Mode extension (Used with Joint Stereo)\n        buffer[3] = shiftInBitsValue(buffer[3], 2, gfc.mode_ext);\n        // Copy\n        buffer[3] = shiftInBitsValue(buffer[3], 1, gfp.copyright);\n        // Original\n        buffer[3] = shiftInBitsValue(buffer[3], 1, gfp.original);\n        // Emphasis\n        buffer[3] = shiftInBitsValue(buffer[3], 2, gfp.emphasis);\n\n        /* the default VBR header. 48 kbps layer III, no padding, no crc */\n        /* but sampling freq, mode and copyright/copy protection taken */\n        /* from first valid frame */\n        buffer[0] = 0xff;\n        var abyte = 0xff & (buffer[1] & 0xf1);\n        var bitrate;\n        if (1 == gfp.version) {\n            bitrate = XING_BITRATE1;\n        } else {\n            if (gfp.out_samplerate < 16000)\n                bitrate = XING_BITRATE25;\n            else\n                bitrate = XING_BITRATE2;\n        }\n\n        if (gfp.VBR == VbrMode$22.vbr_off)\n            bitrate = gfp.brate;\n\n        var bbyte;\n        if (gfp.free_format)\n            bbyte = 0x00;\n        else\n            bbyte = 0xff & (16 * lame.BitrateIndex(bitrate, gfp.version,\n                    gfp.out_samplerate));\n\n        /*\n         * Use as much of the info from the real frames in the Xing header:\n         * samplerate, channels, crc, etc...\n         */\n        if (gfp.version == 1) {\n            /* MPEG1 */\n            buffer[1] = 0xff & (abyte | 0x0a);\n            /* was 0x0b; */\n            abyte = 0xff & (buffer[2] & 0x0d);\n            /* AF keep also private bit */\n            buffer[2] = 0xff & (bbyte | abyte);\n            /* 64kbs MPEG1 frame */\n        } else {\n            /* MPEG2 */\n            buffer[1] = 0xff & (abyte | 0x02);\n            /* was 0x03; */\n            abyte = 0xff & (buffer[2] & 0x0d);\n            /* AF keep also private bit */\n            buffer[2] = 0xff & (bbyte | abyte);\n            /* 64kbs MPEG2 frame */\n        }\n    }\n\n    /**\n     * Get VBR tag information\n     *\n     * @param buf\n     *            header to analyze\n     * @param bufPos\n     *            offset into the header\n     * @return VBR tag data\n     */\n    this.getVbrTag = function (buf) {\n        var pTagData = new VBRTagData();\n        var bufPos = 0;\n\n        /* get Vbr header data */\n        pTagData.flags = 0;\n\n        /* get selected MPEG header data */\n        var hId = (buf[bufPos + 1] >> 3) & 1;\n        var hSrIndex = (buf[bufPos + 2] >> 2) & 3;\n        var hMode = (buf[bufPos + 3] >> 6) & 3;\n        var hBitrate = ((buf[bufPos + 2] >> 4) & 0xf);\n        hBitrate = Tables.bitrate_table[hId][hBitrate];\n\n        /* check for FFE syncword */\n        if ((buf[bufPos + 1] >> 4) == 0xE)\n            pTagData.samprate = Tables.samplerate_table[2][hSrIndex];\n        else\n            pTagData.samprate = Tables.samplerate_table[hId][hSrIndex];\n\n        /* determine offset of header */\n        if (hId != 0) {\n            /* mpeg1 */\n            if (hMode != 3)\n                bufPos += (32 + 4);\n            else\n                bufPos += (17 + 4);\n        } else {\n            /* mpeg2 */\n            if (hMode != 3)\n                bufPos += (17 + 4);\n            else\n                bufPos += (9 + 4);\n        }\n\n        if (!isVbrTag(buf, bufPos))\n            return null;\n\n        bufPos += 4;\n\n        pTagData.hId = hId;\n\n        /* get flags */\n        var head_flags = pTagData.flags = extractInteger(buf, bufPos);\n        bufPos += 4;\n\n        if ((head_flags & FRAMES_FLAG) != 0) {\n            pTagData.frames = extractInteger(buf, bufPos);\n            bufPos += 4;\n        }\n\n        if ((head_flags & BYTES_FLAG) != 0) {\n            pTagData.bytes = extractInteger(buf, bufPos);\n            bufPos += 4;\n        }\n\n        if ((head_flags & TOC_FLAG) != 0) {\n            if (pTagData.toc != null) {\n                for (var i = 0; i < NUMTOCENTRIES; i++)\n                    pTagData.toc[i] = buf[bufPos + i];\n            }\n            bufPos += NUMTOCENTRIES;\n        }\n\n        pTagData.vbrScale = -1;\n\n        if ((head_flags & VBR_SCALE_FLAG) != 0) {\n            pTagData.vbrScale = extractInteger(buf, bufPos);\n            bufPos += 4;\n        }\n\n        pTagData.headersize = ((hId + 1) * 72000 * hBitrate)\n            / pTagData.samprate;\n\n        bufPos += 21;\n        var encDelay = buf[bufPos + 0] << 4;\n        encDelay += buf[bufPos + 1] >> 4;\n        var encPadding = (buf[bufPos + 1] & 0x0F) << 8;\n        encPadding += buf[bufPos + 2] & 0xff;\n        /* check for reasonable values (this may be an old Xing header, */\n        /* not a INFO tag) */\n        if (encDelay < 0 || encDelay > 3000)\n            encDelay = -1;\n        if (encPadding < 0 || encPadding > 3000)\n            encPadding = -1;\n\n        pTagData.encDelay = encDelay;\n        pTagData.encPadding = encPadding;\n\n        /* success */\n        return pTagData;\n    };\n\n    /**\n     * Initializes the header\n     *\n     * @param gfp\n     *            global flags\n     */\n    this.InitVbrTag = function (gfp) {\n        var gfc = gfp.internal_flags;\n\n        /**\n         * <PRE>\n         * Xing VBR pretends to be a 48kbs layer III frame.  (at 44.1kHz).\n         * (at 48kHz they use 56kbs since 48kbs frame not big enough for\n         * table of contents)\n         * let's always embed Xing header inside a 64kbs layer III frame.\n         * this gives us enough room for a LAME version string too.\n         * size determined by sampling frequency (MPEG1)\n         * 32kHz:    216 bytes@48kbs    288bytes@ 64kbs\n         * 44.1kHz:  156 bytes          208bytes@64kbs     (+1 if padding = 1)\n         * 48kHz:    144 bytes          192\n         *\n         * MPEG 2 values are the same since the framesize and samplerate\n         * are each reduced by a factor of 2.\n         * </PRE>\n         */\n        var kbps_header;\n        if (1 == gfp.version) {\n            kbps_header = XING_BITRATE1;\n        } else {\n            if (gfp.out_samplerate < 16000)\n                kbps_header = XING_BITRATE25;\n            else\n                kbps_header = XING_BITRATE2;\n        }\n\n        if (gfp.VBR == VbrMode$22.vbr_off)\n            kbps_header = gfp.brate;\n\n        // make sure LAME Header fits into Frame\n        var totalFrameSize = ((gfp.version + 1) * 72000 * kbps_header)\n            / gfp.out_samplerate;\n        var headerSize = (gfc.sideinfo_len + LAMEHEADERSIZE);\n        gfc.VBR_seek_table.TotalFrameSize = totalFrameSize;\n        if (totalFrameSize < headerSize || totalFrameSize > MAXFRAMESIZE) {\n            /* disable tag, it wont fit */\n            gfp.bWriteVbrTag = false;\n            return;\n        }\n\n        gfc.VBR_seek_table.nVbrNumFrames = 0;\n        gfc.VBR_seek_table.nBytesWritten = 0;\n        gfc.VBR_seek_table.sum = 0;\n\n        gfc.VBR_seek_table.seen = 0;\n        gfc.VBR_seek_table.want = 1;\n        gfc.VBR_seek_table.pos = 0;\n\n        if (gfc.VBR_seek_table.bag == null) {\n            gfc.VBR_seek_table.bag = new int[400];\n            gfc.VBR_seek_table.size = 400;\n        }\n\n        // write dummy VBR tag of all 0's into bitstream\n        var buffer = new_byte$22(MAXFRAMESIZE);\n\n        setLameTagFrameHeader(gfp, buffer);\n        var n = gfc.VBR_seek_table.TotalFrameSize;\n        for (var i = 0; i < n; ++i) {\n            bs.add_dummy_byte(gfp, buffer[i] & 0xff, 1);\n        }\n    };\n\n    /**\n     * Fast CRC-16 computation (uses table crc16Lookup).\n     *\n     * @param value\n     * @param crc\n     * @return\n     */\n    function crcUpdateLookup(value, crc) {\n        var tmp = crc ^ value;\n        crc = (crc >> 8) ^ crc16Lookup[tmp & 0xff];\n        return crc;\n    }\n\n    this.updateMusicCRC = function (crc, buffer, bufferPos, size) {\n        for (var i = 0; i < size; ++i)\n            crc[0] = crcUpdateLookup(buffer[bufferPos + i], crc[0]);\n    };\n\n    /**\n     * Write LAME info: mini version + info on various switches used (Jonathan\n     * Dee 2001/08/31).\n     *\n     * @param gfp\n     *            global flags\n     * @param musicLength\n     *            music length\n     * @param streamBuffer\n     *            pointer to output buffer\n     * @param streamBufferPos\n     *            offset into the output buffer\n     * @param crc\n     *            computation of CRC-16 of Lame Tag so far (starting at frame\n     *            sync)\n     * @return number of bytes written to the stream\n     */\n    function putLameVBR(gfp, musicLength, streamBuffer, streamBufferPos, crc) {\n        var gfc = gfp.internal_flags;\n        var bytesWritten = 0;\n\n        /* encoder delay */\n        var encDelay = gfp.encoder_delay;\n        /* encoder padding */\n        var encPadding = gfp.encoder_padding;\n\n        /* recall: gfp.VBR_q is for example set by the switch -V */\n        /* gfp.quality by -q, -h, -f, etc */\n        var quality = (100 - 10 * gfp.VBR_q - gfp.quality);\n\n        var version = v.getLameVeryShortVersion();\n        var vbr;\n        var revision = 0x00;\n        var revMethod;\n        // numbering different in vbr_mode vs. Lame tag\n        var vbrTypeTranslator = [1, 5, 3, 2, 4, 0, 3];\n        var lowpass = 0 | (((gfp.lowpassfreq / 100.0) + .5) > 255 ? 255\n                : (gfp.lowpassfreq / 100.0) + .5);\n        var peakSignalAmplitude = 0;\n        var radioReplayGain = 0;\n        var audiophileReplayGain = 0;\n        var noiseShaping = gfp.internal_flags.noise_shaping;\n        var stereoMode = 0;\n        var nonOptimal = 0;\n        var sourceFreq = 0;\n        var misc = 0;\n        var musicCRC = 0;\n\n        // psy model type: Gpsycho or NsPsytune\n        var expNPsyTune = (gfp.exp_nspsytune & 1) != 0;\n        var safeJoint = (gfp.exp_nspsytune & 2) != 0;\n        var noGapMore = false;\n        var noGapPrevious = false;\n        var noGapCount = gfp.internal_flags.nogap_total;\n        var noGapCurr = gfp.internal_flags.nogap_current;\n\n        // 4 bits\n        var athType = gfp.ATHtype;\n        var flags = 0;\n\n        // vbr modes\n        var abrBitrate;\n        switch (gfp.VBR) {\n            case vbr_abr:\n                abrBitrate = gfp.VBR_mean_bitrate_kbps;\n                break;\n            case vbr_off:\n                abrBitrate = gfp.brate;\n                break;\n            default:\n                abrBitrate = gfp.VBR_min_bitrate_kbps;\n        }\n\n        // revision and vbr method\n        if (gfp.VBR.ordinal() < vbrTypeTranslator.length)\n            vbr = vbrTypeTranslator[gfp.VBR.ordinal()];\n        else\n            vbr = 0x00; // unknown\n\n        revMethod = 0x10 * revision + vbr;\n\n        // ReplayGain\n        if (gfc.findReplayGain) {\n            if (gfc.RadioGain > 0x1FE)\n                gfc.RadioGain = 0x1FE;\n            if (gfc.RadioGain < -0x1FE)\n                gfc.RadioGain = -0x1FE;\n\n            // set name code\n            radioReplayGain = 0x2000;\n            // set originator code to `determined automatically'\n            radioReplayGain |= 0xC00;\n\n            if (gfc.RadioGain >= 0) {\n                // set gain adjustment\n                radioReplayGain |= gfc.RadioGain;\n            } else {\n                // set the sign bit\n                radioReplayGain |= 0x200;\n                // set gain adjustment\n                radioReplayGain |= -gfc.RadioGain;\n            }\n        }\n\n        // peak sample\n        if (gfc.findPeakSample)\n            peakSignalAmplitude = Math\n                .abs(0 | ((( gfc.PeakSample) / 32767.0) * Math.pow(2, 23) + .5));\n\n        // nogap\n        if (noGapCount != -1) {\n            if (noGapCurr > 0)\n                noGapPrevious = true;\n\n            if (noGapCurr < noGapCount - 1)\n                noGapMore = true;\n        }\n\n        // flags\n        flags = athType + ((expNPsyTune ? 1 : 0) << 4)\n            + ((safeJoint ? 1 : 0) << 5) + ((noGapMore ? 1 : 0) << 6)\n            + ((noGapPrevious ? 1 : 0) << 7);\n\n        if (quality < 0)\n            quality = 0;\n\n        // stereo mode field (Intensity stereo is not implemented)\n        switch (gfp.mode) {\n            case MONO:\n                stereoMode = 0;\n                break;\n            case STEREO:\n                stereoMode = 1;\n                break;\n            case DUAL_CHANNEL:\n                stereoMode = 2;\n                break;\n            case JOINT_STEREO:\n                if (gfp.force_ms)\n                    stereoMode = 4;\n                else\n                    stereoMode = 3;\n                break;\n            case NOT_SET:\n            //$FALL-THROUGH$\n            default:\n                stereoMode = 7;\n                break;\n        }\n\n        if (gfp.in_samplerate <= 32000)\n            sourceFreq = 0x00;\n        else if (gfp.in_samplerate == 48000)\n            sourceFreq = 0x02;\n        else if (gfp.in_samplerate > 48000)\n            sourceFreq = 0x03;\n        else {\n            // default is 44100Hz\n            sourceFreq = 0x01;\n        }\n\n        // Check if the user overrided the default LAME behavior with some\n        // nasty options\n        if (gfp.short_blocks == ShortBlock$22.short_block_forced\n            || gfp.short_blocks == ShortBlock$22.short_block_dispensed\n            || ((gfp.lowpassfreq == -1) && (gfp.highpassfreq == -1)) || /* \"-k\" */\n            (gfp.scale_left < gfp.scale_right)\n            || (gfp.scale_left > gfp.scale_right)\n            || (gfp.disable_reservoir && gfp.brate < 320) || gfp.noATH\n            || gfp.ATHonly || (athType == 0) || gfp.in_samplerate <= 32000)\n            nonOptimal = 1;\n\n        misc = noiseShaping + (stereoMode << 2) + (nonOptimal << 5)\n            + (sourceFreq << 6);\n\n        musicCRC = gfc.nMusicCRC;\n\n        // Write all this information into the stream\n\n        createInteger(streamBuffer, streamBufferPos + bytesWritten, quality);\n        bytesWritten += 4;\n\n        for (var j = 0; j < 9; j++) {\n            streamBuffer[streamBufferPos + bytesWritten + j] = 0xff & version .charAt(j);\n        }\n        bytesWritten += 9;\n\n        streamBuffer[streamBufferPos + bytesWritten] = 0xff & revMethod;\n        bytesWritten++;\n\n        streamBuffer[streamBufferPos + bytesWritten] = 0xff & lowpass;\n        bytesWritten++;\n\n        createInteger(streamBuffer, streamBufferPos + bytesWritten,\n            peakSignalAmplitude);\n        bytesWritten += 4;\n\n        createShort(streamBuffer, streamBufferPos + bytesWritten,\n            radioReplayGain);\n        bytesWritten += 2;\n\n        createShort(streamBuffer, streamBufferPos + bytesWritten,\n            audiophileReplayGain);\n        bytesWritten += 2;\n\n        streamBuffer[streamBufferPos + bytesWritten] = 0xff & flags;\n        bytesWritten++;\n\n        if (abrBitrate >= 255)\n            streamBuffer[streamBufferPos + bytesWritten] = 0xFF;\n        else\n            streamBuffer[streamBufferPos + bytesWritten] = 0xff & abrBitrate;\n        bytesWritten++;\n\n        streamBuffer[streamBufferPos + bytesWritten] = 0xff & (encDelay >> 4);\n        streamBuffer[streamBufferPos + bytesWritten + 1] = 0xff & ((encDelay << 4) + (encPadding >> 8));\n        streamBuffer[streamBufferPos + bytesWritten + 2] = 0xff & encPadding;\n\n        bytesWritten += 3;\n\n        streamBuffer[streamBufferPos + bytesWritten] = 0xff & misc;\n        bytesWritten++;\n\n        // unused in rev0\n        streamBuffer[streamBufferPos + bytesWritten++] = 0;\n\n        createShort(streamBuffer, streamBufferPos + bytesWritten, gfp.preset);\n        bytesWritten += 2;\n\n        createInteger(streamBuffer, streamBufferPos + bytesWritten, musicLength);\n        bytesWritten += 4;\n\n        createShort(streamBuffer, streamBufferPos + bytesWritten, musicCRC);\n        bytesWritten += 2;\n\n        // Calculate tag CRC.... must be done here, since it includes previous\n        // information\n\n        for (var i = 0; i < bytesWritten; i++)\n            crc = crcUpdateLookup(streamBuffer[streamBufferPos + i], crc);\n\n        createShort(streamBuffer, streamBufferPos + bytesWritten, crc);\n        bytesWritten += 2;\n\n        return bytesWritten;\n    }\n\n    function skipId3v2(fpStream) {\n        // seek to the beginning of the stream\n        fpStream.seek(0);\n        // read 10 bytes in case there's an ID3 version 2 header here\n        var id3v2Header = new_byte$22(10);\n        fpStream.readFully(id3v2Header);\n        /* does the stream begin with the ID3 version 2 file identifier? */\n        var id3v2TagSize;\n        if (!new String(id3v2Header, \"ISO-8859-1\").startsWith(\"ID3\")) {\n            /*\n             * the tag size (minus the 10-byte header) is encoded into four\n             * bytes where the most significant bit is clear in each byte\n             */\n            id3v2TagSize = (((id3v2Header[6] & 0x7f) << 21)\n                | ((id3v2Header[7] & 0x7f) << 14)\n                | ((id3v2Header[8] & 0x7f) << 7) | (id3v2Header[9] & 0x7f))\n                + id3v2Header.length;\n        } else {\n            /* no ID3 version 2 tag in this stream */\n            id3v2TagSize = 0;\n        }\n        return id3v2TagSize;\n    }\n\n    this.getLameTagFrame = function (gfp, buffer) {\n        var gfc = gfp.internal_flags;\n\n        if (!gfp.bWriteVbrTag) {\n            return 0;\n        }\n        if (gfc.Class_ID != Lame.LAME_ID) {\n            return 0;\n        }\n        if (gfc.VBR_seek_table.pos <= 0) {\n            return 0;\n        }\n        if (buffer.length < gfc.VBR_seek_table.TotalFrameSize) {\n            return gfc.VBR_seek_table.TotalFrameSize;\n        }\n\n        Arrays$22.fill(buffer, 0, gfc.VBR_seek_table.TotalFrameSize, 0);\n\n        // 4 bytes frame header\n        setLameTagFrameHeader(gfp, buffer);\n\n        // Create TOC entries\n        var toc = new_byte$22(NUMTOCENTRIES);\n\n        if (gfp.free_format) {\n            for (var i = 1; i < NUMTOCENTRIES; ++i)\n                toc[i] = 0xff & (255 * i / 100);\n        } else {\n            xingSeekTable(gfc.VBR_seek_table, toc);\n        }\n\n        // Start writing the tag after the zero frame\n        var streamIndex = gfc.sideinfo_len;\n        /**\n         * Note: Xing header specifies that Xing data goes in the ancillary data\n         * with NO ERROR PROTECTION. If error protecton in enabled, the Xing\n         * data still starts at the same offset, and now it is in sideinfo data\n         * block, and thus will not decode correctly by non-Xing tag aware\n         * players\n         */\n        if (gfp.error_protection)\n            streamIndex -= 2;\n\n        // Put Vbr tag\n        if (gfp.VBR == VbrMode$22.vbr_off) {\n            buffer[streamIndex++] = 0xff & VBRTag1.charAt(0);\n            buffer[streamIndex++] = 0xff & VBRTag1.charAt(1);\n            buffer[streamIndex++] = 0xff & VBRTag1.charAt(2);\n            buffer[streamIndex++] = 0xff & VBRTag1.charAt(3);\n\n        } else {\n            buffer[streamIndex++] = 0xff & VBRTag0.charAt(0);\n            buffer[streamIndex++] = 0xff & VBRTag0.charAt(1);\n            buffer[streamIndex++] = 0xff & VBRTag0.charAt(2);\n            buffer[streamIndex++] = 0xff & VBRTag0.charAt(3);\n        }\n\n        // Put header flags\n        createInteger(buffer, streamIndex, FRAMES_FLAG + BYTES_FLAG + TOC_FLAG\n            + VBR_SCALE_FLAG);\n        streamIndex += 4;\n\n        // Put Total Number of frames\n        createInteger(buffer, streamIndex, gfc.VBR_seek_table.nVbrNumFrames);\n        streamIndex += 4;\n\n        // Put total audio stream size, including Xing/LAME Header\n        var streamSize = (gfc.VBR_seek_table.nBytesWritten + gfc.VBR_seek_table.TotalFrameSize);\n        createInteger(buffer, streamIndex, 0 | streamSize);\n        streamIndex += 4;\n\n        /* Put TOC */\n        System$22.arraycopy(toc, 0, buffer, streamIndex, toc.length);\n        streamIndex += toc.length;\n\n        if (gfp.error_protection) {\n            // (jo) error_protection: add crc16 information to header\n            bs.CRC_writeheader(gfc, buffer);\n        }\n\n        // work out CRC so far: initially crc = 0\n        var crc = 0x00;\n        for (var i = 0; i < streamIndex; i++)\n            crc = crcUpdateLookup(buffer[i], crc);\n        // Put LAME VBR info\n        streamIndex += putLameVBR(gfp, streamSize, buffer, streamIndex, crc);\n\n        return gfc.VBR_seek_table.TotalFrameSize;\n    };\n\n    /**\n     * Write final VBR tag to the file.\n     *\n     * @param gfp\n     *            global flags\n     * @param stream\n     *            stream to add the VBR tag to\n     * @return 0 (OK), -1 else\n     * @throws IOException\n     *             I/O error\n     */\n    this.putVbrTag = function (gfp, stream) {\n        var gfc = gfp.internal_flags;\n\n        if (gfc.VBR_seek_table.pos <= 0)\n            return -1;\n\n        // Seek to end of file\n        stream.seek(stream.length());\n\n        // Get file size, abort if file has zero length.\n        if (stream.length() == 0)\n            return -1;\n\n        // The VBR tag may NOT be located at the beginning of the stream. If an\n        // ID3 version 2 tag was added, then it must be skipped to write the VBR\n        // tag data.\n        var id3v2TagSize = skipId3v2(stream);\n\n        // Seek to the beginning of the stream\n        stream.seek(id3v2TagSize);\n\n        var buffer = new_byte$22(MAXFRAMESIZE);\n        var bytes = getLameTagFrame(gfp, buffer);\n        if (bytes > buffer.length) {\n            return -1;\n        }\n\n        if (bytes < 1) {\n            return 0;\n        }\n\n        // Put it all to disk again\n        stream.write(buffer, 0, bytes);\n        // success\n        return 0;\n    };\n\n}\n\nvar VBRTag_1 = VBRTag;\n\nvar new_byte = common.new_byte;\nvar assert = common.assert;\n\nLame = Lame_1;\nPresets = Presets_1;\nGainAnalysis = GainAnalysis_1;\nQuantizePVT = QuantizePVT_1;\nQuantize = Quantize_1;\nTakehiro = Takehiro_1;\nReservoir = Reservoir_1;\nMPEGMode = MPEGMode_1;\nBitStream = BitStream_1;\n\n\n\n\nfunction GetAudio() {\n    var parse;\n    var mpg;\n\n    this.setModules = function (parse2, mpg2) {\n        parse = parse2;\n        mpg = mpg2;\n    };\n}\n\n\nfunction Parse() {\n    var ver;\n    var id3;\n    var pre;\n\n    this.setModules = function (ver2, id32, pre2) {\n        ver = ver2;\n        id3 = id32;\n        pre = pre2;\n    };\n}\n\nfunction MPGLib() {\n}\n\nfunction ID3Tag() {\n    var bits;\n    var ver;\n\n    this.setModules = function (_bits, _ver) {\n        bits = _bits;\n        ver = _ver;\n    };\n}\n\nfunction Mp3Encoder(channels, samplerate, kbps) {\n    if (arguments.length != 3) {\n        console.error('WARN: Mp3Encoder(channels, samplerate, kbps) not specified');\n        channels = 1;\n        samplerate = 44100;\n        kbps = 128;\n    }\n    var lame = new Lame();\n    var gaud = new GetAudio();\n    var ga = new GainAnalysis();\n    var bs = new BitStream();\n    var p = new Presets();\n    var qupvt = new QuantizePVT();\n    var qu = new Quantize();\n    var vbr = new VBRTag_1();\n    var ver = new Version_1();\n    var id3 = new ID3Tag();\n    var rv = new Reservoir();\n    var tak = new Takehiro();\n    var parse = new Parse();\n    var mpg = new MPGLib();\n\n    lame.setModules(ga, bs, p, qupvt, qu, vbr, ver, id3, mpg);\n    bs.setModules(ga, mpg, ver, vbr);\n    id3.setModules(bs, ver);\n    p.setModules(lame);\n    qu.setModules(bs, rv, qupvt, tak);\n    qupvt.setModules(tak, rv, lame.enc.psy);\n    rv.setModules(bs);\n    tak.setModules(qupvt);\n    vbr.setModules(lame, bs, ver);\n    gaud.setModules(parse, mpg);\n    parse.setModules(ver, id3, p);\n\n    var gfp = lame.lame_init();\n\n    gfp.num_channels = channels;\n    gfp.in_samplerate = samplerate;\n    gfp.brate = kbps;\n    gfp.mode = MPEGMode.STEREO;\n    gfp.quality = 3;\n    gfp.bWriteVbrTag = false;\n    gfp.disable_reservoir = true;\n    gfp.write_id3tag_automatic = false;\n\n    var retcode = lame.lame_init_params(gfp);\n    assert(0 == retcode);\n    var maxSamples = 1152;\n    var mp3buf_size = 0 | (1.25 * maxSamples + 7200);\n    var mp3buf = new_byte(mp3buf_size);\n\n    this.encodeBuffer = function (left, right) {\n        if (channels == 1) {\n            right = left;\n        }\n        assert(left.length == right.length);\n        if (left.length > maxSamples) {\n            maxSamples = left.length;\n            mp3buf_size = 0 | (1.25 * maxSamples + 7200);\n            mp3buf = new_byte(mp3buf_size);\n        }\n\n        var _sz = lame.lame_encode_buffer(gfp, left, right, left.length, mp3buf, 0, mp3buf_size);\n        return new Int8Array(mp3buf.subarray(0, _sz));\n    };\n\n    this.flush = function () {\n        var _sz = lame.lame_encode_flush(gfp, mp3buf, 0, mp3buf_size);\n        return new Int8Array(mp3buf.subarray(0, _sz));\n    };\n}\n\nfunction WavHeader() {\n    this.dataOffset = 0;\n    this.dataLen = 0;\n    this.channels = 0;\n    this.sampleRate = 0;\n}\n\nfunction fourccToInt(fourcc) {\n    return fourcc.charCodeAt(0) << 24 | fourcc.charCodeAt(1) << 16 | fourcc.charCodeAt(2) << 8 | fourcc.charCodeAt(3);\n}\n\nWavHeader.RIFF = fourccToInt(\"RIFF\");\nWavHeader.WAVE = fourccToInt(\"WAVE\");\nWavHeader.fmt_ = fourccToInt(\"fmt \");\nWavHeader.data = fourccToInt(\"data\");\n\nWavHeader.readHeader = function (dataView) {\n    var w = new WavHeader();\n\n    var header = dataView.getUint32(0, false);\n    if (WavHeader.RIFF != header) {\n        return;\n    }\n    var fileLen = dataView.getUint32(4, true);\n    if (WavHeader.WAVE != dataView.getUint32(8, false)) {\n        return;\n    }\n    if (WavHeader.fmt_ != dataView.getUint32(12, false)) {\n        return;\n    }\n    var fmtLen = dataView.getUint32(16, true);\n    var pos = 16 + 4;\n    switch (fmtLen) {\n        case 16:\n        case 18:\n            w.channels = dataView.getUint16(pos + 2, true);\n            w.sampleRate = dataView.getUint32(pos + 4, true);\n            break;\n        default:\n            throw 'extended fmt chunk not implemented';\n    }\n    pos += fmtLen;\n    var data = WavHeader.data;\n    var len = 0;\n    while (data != header) {\n        header = dataView.getUint32(pos, false);\n        len = dataView.getUint32(pos + 4, true);\n        if (data == header) {\n            break;\n        }\n        pos += (len + 8);\n    }\n    w.dataLen = len;\n    w.dataOffset = pos + 8;\n    return w;\n};\n\nvar Mp3Encoder_1 = Mp3Encoder;\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar Encoder = function () {\n  function Encoder(config) {\n    classCallCheck(this, Encoder);\n\n    this.config = {\n      sampleRate: 44100,\n      bitRate: 128\n    };\n\n    Object.assign(this.config, config);\n\n    this.mp3Encoder = new Mp3Encoder_1(1, this.config.sampleRate, this.config.bitRate);\n\n    // Audio is processed by frames of 1152 samples per audio channel\n    // http://lame.sourceforge.net/tech-FAQ.txt\n    this.maxSamples = 1152;\n\n    this.samplesMono = null;\n    this.clearBuffer();\n  }\n\n  /**\n   * Clear active buffer\n   */\n\n\n  createClass(Encoder, [{\n    key: 'clearBuffer',\n    value: function clearBuffer() {\n      this.dataBuffer = [];\n    }\n\n    /**\n     * Append new audio buffer to current active buffer\n     * @param {Buffer} buffer\n     */\n\n  }, {\n    key: 'appendToBuffer',\n    value: function appendToBuffer(buffer) {\n      this.dataBuffer.push(new Int8Array(buffer));\n    }\n\n    /**\n     * Float current data to 16 bits PCM\n     * @param {Float32Array} input\n     * @param {Int16Array} output\n     */\n\n  }, {\n    key: 'floatTo16BitPCM',\n    value: function floatTo16BitPCM(input, output) {\n      for (var i = 0; i < input.length; i++) {\n        var s = Math.max(-1, Math.min(1, input[i]));\n        output[i] = s < 0 ? s * 0x8000 : s * 0x7FFF;\n      }\n    }\n\n    /**\n     * Convert buffer to proper format\n     * @param {Array} arrayBuffer\n     */\n\n  }, {\n    key: 'convertBuffer',\n    value: function convertBuffer(arrayBuffer) {\n      var data = new Float32Array(arrayBuffer);\n      var out = new Int16Array(arrayBuffer.length);\n      this.floatTo16BitPCM(data, out);\n\n      return out;\n    }\n\n    /**\n     * Encode and append current buffer to dataBuffer\n     * @param {Array} arrayBuffer\n     */\n\n  }, {\n    key: 'encode',\n    value: function encode(arrayBuffer) {\n      this.samplesMono = this.convertBuffer(arrayBuffer);\n      var remaining = this.samplesMono.length;\n\n      for (var i = 0; remaining >= 0; i += this.maxSamples) {\n        var left = this.samplesMono.subarray(i, i + this.maxSamples);\n        var mp3buffer = this.mp3Encoder.encodeBuffer(left);\n        this.appendToBuffer(mp3buffer);\n        remaining -= this.maxSamples;\n      }\n    }\n\n    /**\n     * Return full dataBuffer\n     */\n\n  }, {\n    key: 'finish',\n    value: function finish() {\n      this.appendToBuffer(this.mp3Encoder.flush());\n\n      return this.dataBuffer;\n    }\n  }]);\n  return Encoder;\n}();\n\nvar MicRecorder = function () {\n  function MicRecorder(config) {\n    classCallCheck(this, MicRecorder);\n\n    this.config = {\n      // 128 or 160 kbit/s – mid-range bitrate quality\n      bitRate: 128,\n\n      // There is a known issue with some macOS machines, where the recording\n      // will sometimes have a loud 'pop' or 'pop-click' sound. This flag\n      // prevents getting audio from the microphone a few milliseconds after\n      // the begining of the recording. It also helps to remove the mouse\n      // \"click\" sound from the output mp3 file.\n      startRecordingAt: 300,\n      deviceId: null\n    };\n\n    this.activeStream = null;\n    this.context = null;\n    this.microphone = null;\n    this.processor = null;\n    this.startTime = 0;\n\n    Object.assign(this.config, config);\n  }\n\n  /**\n   * Starts to listen for the microphone sound\n   * @param {MediaStream} stream\n   */\n\n\n  createClass(MicRecorder, [{\n    key: 'addMicrophoneListener',\n    value: function addMicrophoneListener(stream) {\n      var _this = this;\n\n      this.activeStream = stream;\n\n      // This prevents the weird noise once you start listening to the microphone\n      this.timerToStart = setTimeout(function () {\n        delete _this.timerToStart;\n      }, this.config.startRecordingAt);\n\n      // Set up Web Audio API to process data from the media stream (microphone).\n      this.microphone = this.context.createMediaStreamSource(stream);\n\n      // Settings a bufferSize of 0 instructs the browser to choose the best bufferSize\n      this.processor = this.context.createScriptProcessor(0, 1, 1);\n\n      // Add all buffers from LAME into an array.\n      this.processor.onaudioprocess = function (event) {\n        if (_this.timerToStart) {\n          return;\n        }\n\n        // Send microphone data to LAME for MP3 encoding while recording.\n        _this.lameEncoder.encode(event.inputBuffer.getChannelData(0));\n      };\n\n      // Begin retrieving microphone data.\n      this.microphone.connect(this.processor);\n      this.processor.connect(this.context.destination);\n    }\n  }, {\n    key: 'stop',\n\n\n    /**\n     * Disconnect microphone, processor and remove activeStream\n     */\n    value: function stop() {\n      if (this.processor && this.microphone) {\n        // Clean up the Web Audio API resources.\n        this.microphone.disconnect();\n        this.processor.disconnect();\n\n        // If all references using this.context are destroyed, context is closed\n        // automatically. DOMException is fired when trying to close again\n        if (this.context && this.context.state !== 'closed') {\n          this.context.close();\n        }\n\n        this.processor.onaudioprocess = null;\n\n        // Stop all audio tracks. Also, removes recording icon from chrome tab\n        this.activeStream.getAudioTracks().forEach(function (track) {\n          return track.stop();\n        });\n      }\n\n      return this;\n    }\n  }, {\n    key: 'start',\n\n\n    /**\n     * Requests access to the microphone and start recording\n     * @return Promise\n     */\n    value: function start() {\n      var _this2 = this;\n\n      var AudioContext = window.AudioContext || window.webkitAudioContext;\n      this.context = new AudioContext();\n      this.config.sampleRate = this.context.sampleRate;\n      this.lameEncoder = new Encoder(this.config);\n\n      var audio = this.config.deviceId ? { deviceId: { exact: this.config.deviceId } } : true;\n\n      return new Promise(function (resolve, reject) {\n        navigator.mediaDevices.getUserMedia({ audio: audio }).then(function (stream) {\n          _this2.addMicrophoneListener(stream);\n          resolve(stream);\n        }).catch(function (err) {\n          reject(err);\n        });\n      });\n    }\n  }, {\n    key: 'getMp3',\n\n\n    /**\n     * Return Mp3 Buffer and Blob with type mp3\n     * @return {Promise}\n     */\n    value: function getMp3() {\n      var _this3 = this;\n\n      var finalBuffer = this.lameEncoder.finish();\n\n      return new Promise(function (resolve, reject) {\n        if (finalBuffer.length === 0) {\n          reject(new Error('No buffer to send'));\n        } else {\n          resolve([finalBuffer, new Blob(finalBuffer, { type: 'audio/mp3' })]);\n          _this3.lameEncoder.clearBuffer();\n        }\n      });\n    }\n  }]);\n  return MicRecorder;\n}();\n\nreturn MicRecorder;\n\n})));\n//# sourceMappingURL=index.js.map\n"],"sourceRoot":""}